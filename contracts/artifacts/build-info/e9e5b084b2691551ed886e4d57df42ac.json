{
	"id": "e9e5b084b2691551ed886e4d57df42ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DegenToken.sol": {
				"content": "/*\r\n1. Minting new tokens: The platform should be able to create new tokens and distribute them to players as rewards. Only the owner can mint tokens.\r\n2. Transferring tokens: Players should be able to transfer their tokens to others.\r\n3. Redeeming tokens: Players should be able to redeem their tokens for items in the in-game store.\r\n4. Checking token balance: Players should be able to check their token balance at any time.\r\n5. Burning tokens: Anyone should be able to burn tokens, that they own, that are no longer needed.\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\ncontract DegenToken is ERC20, Ownable, ERC20Burnable {\r\n\r\n    struct Item {\r\n        string name;\r\n        uint8 itemId;\r\n        uint256 price;\r\n    }\r\n    mapping (uint8=>Item) items;\r\n    mapping (address=>Item[]) playerItems;\r\n    uint8 public tokenId;\r\n    \r\n    event ItemPurchased(address indexed buyer, uint8 itemId, string itemName, uint256 price);\r\n    event GameOutcome(address indexed player, uint256 num, bool won, string result);\r\n\r\n    constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {\r\n        mint(initialOwner, tokenSupply);\r\n        \r\n        items[1] = Item(\"Novice Navigator\",1, 100);\r\n        items[2]=Item(\"Mythic Maverick\", 2, 700);\r\n        items[3]=Item(\"Celestial Crusher\", 3, 1200);\r\n        items[4]=Item(\"Astral Ace\", 4, 2200);\r\n        items[5]=Item(\"Divine Dominator\", 5, 2400);\r\n        tokenId=6;\r\n\r\n    }\r\n\r\n    function decimals() override public pure returns (uint8){\r\n        return 0;\r\n    }\r\n\r\n    // Minting tokens\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    // Transferring tokens\r\n\r\n    function transferToken(address _recipient, uint _amount) external {\r\n        require(balanceOf(msg.sender)>=_amount, \"Insufficient balance\");\r\n        transfer(_recipient, _amount);\r\n    }\r\n\r\n    // Redeeming tokens\r\n\r\n    function welcomeBonus() public {\r\n        require(balanceOf(msg.sender) == 0, \"You've already claimed your welcome bonus\");\r\n        _mint(msg.sender, 50);\r\n    }\r\n\r\n    function addItem(string memory _name, uint256 _price) public onlyOwner {\r\n        items[tokenId] = Item(_name, tokenId,_price);\r\n        tokenId++;\r\n    } \r\n\r\n    function isLessThanFive(bool _prediction, uint256 _betAmount) public {\r\n        uint randomNumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10;\r\n\r\n        if (_prediction ==(randomNumber<5)) {\r\n            _mint(msg.sender, _betAmount*2);\r\n            emit GameOutcome(msg.sender, randomNumber, true, \"won\");\r\n\r\n        } else {\r\n            burn(_betAmount);\r\n            emit GameOutcome(msg.sender, randomNumber, false, \"lost\");\r\n        }\r\n    }\r\n    \r\n    function purchaseItem(uint8 _itemId) external {\r\n        require(items[_itemId].price != 0, \"Item not found\");\r\n        require(balanceOf(msg.sender) >= items[_itemId].price, \"Insufficient balance\");\r\n\r\n        burn(items[_itemId].price);\r\n        playerItems[msg.sender].push(items[_itemId]);\r\n\r\n        emit ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price);\r\n    }\r\n\r\n    function getUserItems(address user) external view returns (uint8[] memory) {\r\n        Item[] memory itemsList = playerItems[user];\r\n        uint length = itemsList.length;\r\n\r\n        uint8[] memory _ids = new uint8[](length);\r\n\r\n        for (uint i = 0; i < length; i++) {\r\n            _ids[i] = itemsList[i].itemId;\r\n        }\r\n\r\n        return _ids;\r\n    }\r\n    function getItemName(uint8 _id) external  view returns (string memory) {\r\n        return items[_id].name;\r\n    }\r\n    function getItemPrice(uint8 _id) external  view returns(uint){\r\n        return items[_id].price;\r\n    }\r\n\r\n\r\n    // Checking token balance\r\n\r\n    function getBalance() external view returns(uint256){\r\n        return balanceOf(msg.sender);\r\n    }\r\n\r\n    // Burning tokens\r\n\r\n    function burnToken(uint _amount) external {\r\n        require(balanceOf(msg.sender)>=_amount, \"Insufficient amount\");\r\n        burn(_amount);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DegenToken.sol": {
				"DegenToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "won",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "result",
									"type": "string"
								}
							],
							"name": "GameOutcome",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "addItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_id",
									"type": "uint8"
								}
							],
							"name": "getItemName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_id",
									"type": "uint8"
								}
							],
							"name": "getItemPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserItems",
							"outputs": [
								{
									"internalType": "uint8[]",
									"name": "",
									"type": "uint8[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_prediction",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_betAmount",
									"type": "uint256"
								}
							],
							"name": "isLessThanFive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_itemId",
									"type": "uint8"
								}
							],
							"name": "purchaseItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenId",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "welcomeBonus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DegenToken.sol\":785:4287  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DegenToken.sol\":1236:1673  constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DegenToken.sol\":1319:1331  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x446567656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x44474e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/DegenToken.sol\":1344:1375  mint(initialOwner, tokenSupply) */\n  tag_18\n    /* \"contracts/DegenToken.sol\":1349:1361  initialOwner */\n  dup3\n    /* \"contracts/DegenToken.sol\":1363:1374  tokenSupply */\n  dup3\n    /* \"contracts/DegenToken.sol\":1344:1348  mint */\n  shl(0x20, tag_19)\n    /* \"contracts/DegenToken.sol\":1344:1375  mint(initialOwner, tokenSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/DegenToken.sol\":1407:1438  Item(\"Novice Navigator\",1, 100) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x4e6f76696365204e6176696761746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1431:1432  1 */\n  0x01\n    /* \"contracts/DegenToken.sol\":1407:1438  Item(\"Novice Navigator\",1, 100) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1434:1437  100 */\n  0x64\n    /* \"contracts/DegenToken.sol\":1407:1438  Item(\"Novice Navigator\",1, 100) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1396:1401  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1396:1404  items[1] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1402:1403  1 */\n  0x01\n    /* \"contracts/DegenToken.sol\":1396:1404  items[1] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1396:1438  items[1] = Item(\"Novice Navigator\",1, 100) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_20\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_20:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1458:1489  Item(\"Mythic Maverick\", 2, 700) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x4d7974686963204d6176657269636b0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1482:1483  2 */\n  0x02\n    /* \"contracts/DegenToken.sol\":1458:1489  Item(\"Mythic Maverick\", 2, 700) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1485:1488  700 */\n  0x02bc\n    /* \"contracts/DegenToken.sol\":1458:1489  Item(\"Mythic Maverick\", 2, 700) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1449:1454  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1449:1457  items[2] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1455:1456  2 */\n  0x02\n    /* \"contracts/DegenToken.sol\":1449:1457  items[2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1449:1489  items[2]=Item(\"Mythic Maverick\", 2, 700) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_21\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_21:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1509:1543  Item(\"Celestial Crusher\", 3, 1200) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x43656c65737469616c2043727573686572000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1535:1536  3 */\n  0x03\n    /* \"contracts/DegenToken.sol\":1509:1543  Item(\"Celestial Crusher\", 3, 1200) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1538:1542  1200 */\n  0x04b0\n    /* \"contracts/DegenToken.sol\":1509:1543  Item(\"Celestial Crusher\", 3, 1200) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1500:1505  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1500:1508  items[3] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1506:1507  3 */\n  0x03\n    /* \"contracts/DegenToken.sol\":1500:1508  items[3] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1500:1543  items[3]=Item(\"Celestial Crusher\", 3, 1200) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_22\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_22:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1563:1590  Item(\"Astral Ace\", 4, 2200) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x41737472616c2041636500000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1582:1583  4 */\n  0x04\n    /* \"contracts/DegenToken.sol\":1563:1590  Item(\"Astral Ace\", 4, 2200) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1585:1589  2200 */\n  0x0898\n    /* \"contracts/DegenToken.sol\":1563:1590  Item(\"Astral Ace\", 4, 2200) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1554:1559  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1554:1562  items[4] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1560:1561  4 */\n  0x04\n    /* \"contracts/DegenToken.sol\":1554:1562  items[4] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1554:1590  items[4]=Item(\"Astral Ace\", 4, 2200) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_23\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_23:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1610:1643  Item(\"Divine Dominator\", 5, 2400) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x446976696e6520446f6d696e61746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1635:1636  5 */\n  0x05\n    /* \"contracts/DegenToken.sol\":1610:1643  Item(\"Divine Dominator\", 5, 2400) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1638:1642  2400 */\n  0x0960\n    /* \"contracts/DegenToken.sol\":1610:1643  Item(\"Divine Dominator\", 5, 2400) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1601:1606  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1601:1609  items[5] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1607:1608  5 */\n  0x05\n    /* \"contracts/DegenToken.sol\":1601:1609  items[5] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1601:1643  items[5]=Item(\"Divine Dominator\", 5, 2400) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_24\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_24:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1662:1663  6 */\n  0x06\n    /* \"contracts/DegenToken.sol\":1654:1661  tokenId */\n  0x08\n  0x00\n    /* \"contracts/DegenToken.sol\":1654:1663  tokenId=6 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DegenToken.sol\":1236:1673  constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":785:4287  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/DegenToken.sol\":1797:1892  function mint(address to, uint256 amount) public onlyOwner {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_28\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/DegenToken.sol\":1867:1884  _mint(to, amount) */\n  tag_31\n    /* \"contracts/DegenToken.sol\":1873:1875  to */\n  dup3\n    /* \"contracts/DegenToken.sol\":1877:1883  amount */\n  dup3\n    /* \"contracts/DegenToken.sol\":1867:1872  _mint */\n  shl(0x20, tag_32)\n    /* \"contracts/DegenToken.sol\":1867:1884  _mint(to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/DegenToken.sol\":1797:1892  function mint(address to, uint256 amount) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_34\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_36\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_39\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_45)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_52)\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_54\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_57)\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_61:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_63:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_64:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_98\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_63\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_65:\n    /* \"#utility.yul\":641:665   */\n  tag_100\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_64\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_101:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_66:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_103\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_65\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_67:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_68:\n    /* \"#utility.yul\":1001:1025   */\n  tag_106\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_67\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_107:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_69:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_109\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_68\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_112\n  tag_61\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1309:1428   */\ntag_111:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_113\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_66\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_114\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_69\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_70:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_71:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_72:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_73:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_119:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_120\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_121\n  tag_72\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2425:2509   */\ntag_120:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_74:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_75:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_76:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_77:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_126\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_76\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3140:3179   */\n  tag_127\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_76\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_78:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_79:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_130\n    /* \"#utility.yul\":3446:3480   */\n  tag_131\n    /* \"#utility.yul\":3455:3479   */\n  tag_132\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_67\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3446:3480   */\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3428:3481   */\n  tag_67\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_80:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_81:\n    /* \"#utility.yul\":3684:3723   */\n  tag_135\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_79\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3745:3836   */\n  tag_136\n    /* \"#utility.yul\":3794:3835   */\n  tag_137\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_80\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_77\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_82:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_83:\n    /* \"#utility.yul\":4005:4037   */\n  tag_140\n  tag_82\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4046:4111   */\n  tag_141\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_81\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_84:\n    /* \"#utility.yul\":4183:4303   */\ntag_143:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_146\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_83\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_85:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_149\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_74\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4534:4563   */\n  tag_150\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_75\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_151:\n    /* \"#utility.yul\":4761:4841   */\n  tag_152\n    /* \"#utility.yul\":4817:4839   */\n  tag_153\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_75\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_84\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_148:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_86:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_87:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_156\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_86\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_88:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_158\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_87\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_9:\n    /* \"#utility.yul\":5578:5615   */\n  tag_160\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_162\n  tag_71\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5666:5722   */\ntag_161:\n    /* \"#utility.yul\":5746:5784   */\n  tag_163\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_73\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5831:5898   */\n  tag_164\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_167:\n    /* \"#utility.yul\":6772:6839   */\n  tag_168\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_88\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_165)\n    /* \"#utility.yul\":5993:6611   */\ntag_166:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_169\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_170:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_170)\ntag_172:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_174\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_87\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_173:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_165:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6862:6980   */\ntag_89:\n    /* \"#utility.yul\":6949:6973   */\n  tag_176\n    /* \"#utility.yul\":6967:6972   */\n  dup2\n    /* \"#utility.yul\":6949:6973   */\n  tag_64\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6944:6947   */\n  dup3\n    /* \"#utility.yul\":6937:6974   */\n  mstore\n    /* \"#utility.yul\":6862:6980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6986:7208   */\ntag_14:\n    /* \"#utility.yul\":7079:7083   */\n  0x00\n    /* \"#utility.yul\":7117:7119   */\n  0x20\n    /* \"#utility.yul\":7106:7115   */\n  dup3\n    /* \"#utility.yul\":7102:7120   */\n  add\n    /* \"#utility.yul\":7094:7120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7201   */\n  tag_178\n    /* \"#utility.yul\":7198:7199   */\n  0x00\n    /* \"#utility.yul\":7187:7196   */\n  dup4\n    /* \"#utility.yul\":7183:7200   */\n  add\n    /* \"#utility.yul\":7174:7180   */\n  dup5\n    /* \"#utility.yul\":7130:7201   */\n  tag_89\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6986:7208   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7214:7394   */\ntag_90:\n    /* \"#utility.yul\":7262:7339   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7340   */\n  mstore\n    /* \"#utility.yul\":7359:7363   */\n  0x11\n    /* \"#utility.yul\":7356:7357   */\n  0x04\n    /* \"#utility.yul\":7349:7364   */\n  mstore\n    /* \"#utility.yul\":7383:7387   */\n  0x24\n    /* \"#utility.yul\":7380:7381   */\n  0x00\n    /* \"#utility.yul\":7373:7388   */\n  revert\n    /* \"#utility.yul\":7400:7591   */\ntag_51:\n    /* \"#utility.yul\":7440:7443   */\n  0x00\n    /* \"#utility.yul\":7459:7479   */\n  tag_181\n    /* \"#utility.yul\":7477:7478   */\n  dup3\n    /* \"#utility.yul\":7459:7479   */\n  tag_67\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7454:7479   */\n  swap2\n  pop\n    /* \"#utility.yul\":7493:7513   */\n  tag_182\n    /* \"#utility.yul\":7511:7512   */\n  dup4\n    /* \"#utility.yul\":7493:7513   */\n  tag_67\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7488:7513   */\n  swap3\n  pop\n    /* \"#utility.yul\":7536:7537   */\n  dup3\n    /* \"#utility.yul\":7533:7534   */\n  dup3\n    /* \"#utility.yul\":7529:7538   */\n  add\n    /* \"#utility.yul\":7522:7538   */\n  swap1\n  pop\n    /* \"#utility.yul\":7557:7560   */\n  dup1\n    /* \"#utility.yul\":7554:7555   */\n  dup3\n    /* \"#utility.yul\":7551:7561   */\n  gt\n    /* \"#utility.yul\":7548:7584   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":7564:7582   */\n  tag_184\n  tag_90\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7548:7584   */\ntag_183:\n    /* \"#utility.yul\":7400:7591   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7597:7715   */\ntag_91:\n    /* \"#utility.yul\":7684:7708   */\n  tag_186\n    /* \"#utility.yul\":7702:7707   */\n  dup2\n    /* \"#utility.yul\":7684:7708   */\n  tag_67\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7679:7682   */\n  dup3\n    /* \"#utility.yul\":7672:7709   */\n  mstore\n    /* \"#utility.yul\":7597:7715   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7721:8163   */\ntag_55:\n    /* \"#utility.yul\":7870:7874   */\n  0x00\n    /* \"#utility.yul\":7908:7910   */\n  0x60\n    /* \"#utility.yul\":7897:7906   */\n  dup3\n    /* \"#utility.yul\":7893:7911   */\n  add\n    /* \"#utility.yul\":7885:7911   */\n  swap1\n  pop\n    /* \"#utility.yul\":7921:7992   */\n  tag_188\n    /* \"#utility.yul\":7989:7990   */\n  0x00\n    /* \"#utility.yul\":7978:7987   */\n  dup4\n    /* \"#utility.yul\":7974:7991   */\n  add\n    /* \"#utility.yul\":7965:7971   */\n  dup7\n    /* \"#utility.yul\":7921:7992   */\n  tag_89\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8002:8074   */\n  tag_189\n    /* \"#utility.yul\":8070:8072   */\n  0x20\n    /* \"#utility.yul\":8059:8068   */\n  dup4\n    /* \"#utility.yul\":8055:8073   */\n  add\n    /* \"#utility.yul\":8046:8052   */\n  dup6\n    /* \"#utility.yul\":8002:8074   */\n  tag_91\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8084:8156   */\n  tag_190\n    /* \"#utility.yul\":8152:8154   */\n  0x40\n    /* \"#utility.yul\":8141:8150   */\n  dup4\n    /* \"#utility.yul\":8137:8155   */\n  add\n    /* \"#utility.yul\":8128:8134   */\n  dup5\n    /* \"#utility.yul\":8084:8156   */\n  tag_91\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7721:8163   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8169:8391   */\ntag_59:\n    /* \"#utility.yul\":8262:8266   */\n  0x00\n    /* \"#utility.yul\":8300:8302   */\n  0x20\n    /* \"#utility.yul\":8289:8298   */\n  dup3\n    /* \"#utility.yul\":8285:8303   */\n  add\n    /* \"#utility.yul\":8277:8303   */\n  swap1\n  pop\n    /* \"#utility.yul\":8313:8384   */\n  tag_192\n    /* \"#utility.yul\":8381:8382   */\n  0x00\n    /* \"#utility.yul\":8370:8379   */\n  dup4\n    /* \"#utility.yul\":8366:8383   */\n  add\n    /* \"#utility.yul\":8357:8363   */\n  dup5\n    /* \"#utility.yul\":8313:8384   */\n  tag_91\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8169:8391   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DegenToken.sol\":785:4287  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DegenToken.sol\":785:4287  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xea5e65e0\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf5112f87\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xaf3bcb7d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xce6019b4\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7b47ec1a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa10f956d\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x23b872dd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x40c10f19\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x62d6bbdf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x30a86006\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1072cbea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x17d70f7c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1930:2118  function transferToken(address _recipient, uint _amount) external {... */\n    tag_5:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/DegenToken.sol\":4003:4102  function getBalance() external view returns(uint256){... */\n    tag_6:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1020:1040  uint8 public tokenId */\n    tag_7:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":3739:3851  function getItemName(uint8 _id) external  view returns (string memory) {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1681:1764  function decimals() override public pure returns (uint8){... */\n    tag_11:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1797:1892  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_12:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/DegenToken.sol\":2323:2477  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n    tag_14:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_17:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/DegenToken.sol\":4135:4282  function burnToken(uint _amount) external {... */\n    tag_18:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":3857:3960  function getItemPrice(uint8 _id) external  view returns(uint){... */\n    tag_21:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":2972:3367  function purchaseItem(uint8 _itemId) external {... */\n    tag_23:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/DegenToken.sol\":3375:3733  function getUserItems(address user) external view returns (uint8[] memory) {... */\n    tag_24:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":2486:2960  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n    tag_26:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n    tag_123:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"contracts/DegenToken.sol\":2153:2315  function welcomeBonus() public {... */\n    tag_28:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_134\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1930:2118  function transferToken(address _recipient, uint _amount) external {... */\n    tag_46:\n        /* \"contracts/DegenToken.sol\":2038:2045  _amount */\n      dup1\n        /* \"contracts/DegenToken.sol\":2015:2036  balanceOf(msg.sender) */\n      tag_145\n        /* \"contracts/DegenToken.sol\":2025:2035  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2015:2024  balanceOf */\n      tag_85\n        /* \"contracts/DegenToken.sol\":2015:2036  balanceOf(msg.sender) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/DegenToken.sol\":2015:2045  balanceOf(msg.sender)>=_amount */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":2007:2070  require(balanceOf(msg.sender)>=_amount, \"Insufficient balance\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/DegenToken.sol\":2081:2110  transfer(_recipient, _amount) */\n      tag_149\n        /* \"contracts/DegenToken.sol\":2090:2100  _recipient */\n      dup3\n        /* \"contracts/DegenToken.sol\":2102:2109  _amount */\n      dup3\n        /* \"contracts/DegenToken.sol\":2081:2089  transfer */\n      tag_108\n        /* \"contracts/DegenToken.sol\":2081:2110  transfer(_recipient, _amount) */\n      jump\t// in\n    tag_149:\n      pop\n        /* \"contracts/DegenToken.sol\":1930:2118  function transferToken(address _recipient, uint _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":4003:4102  function getBalance() external view returns(uint256){... */\n    tag_48:\n        /* \"contracts/DegenToken.sol\":4047:4054  uint256 */\n      0x00\n        /* \"contracts/DegenToken.sol\":4073:4094  balanceOf(msg.sender) */\n      tag_151\n        /* \"contracts/DegenToken.sol\":4083:4093  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":4073:4082  balanceOf */\n      tag_85\n        /* \"contracts/DegenToken.sol\":4073:4094  balanceOf(msg.sender) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/DegenToken.sol\":4066:4094  return balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":4003:4102  function getBalance() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1020:1040  uint8 public tokenId */\n    tag_52:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3739:3851  function getItemName(uint8 _id) external  view returns (string memory) {... */\n    tag_66:\n        /* \"contracts/DegenToken.sol\":3795:3808  string memory */\n      0x60\n        /* \"contracts/DegenToken.sol\":3828:3833  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3828:3838  items[_id] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3834:3837  _id */\n      dup4\n        /* \"contracts/DegenToken.sol\":3828:3838  items[_id] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3828:3843  items[_id].name */\n      0x00\n      add\n        /* \"contracts/DegenToken.sol\":3821:3843  return items[_id].name */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_134\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_134\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3739:3851  function getItemName(uint8 _id) external  view returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1681:1764  function decimals() override public pure returns (uint8){... */\n    tag_69:\n        /* \"contracts/DegenToken.sol\":1731:1736  uint8 */\n      0x00\n        /* \"contracts/DegenToken.sol\":1681:1764  function decimals() override public pure returns (uint8){... */\n      swap1\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1797:1892  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/DegenToken.sol\":1867:1884  _mint(to, amount) */\n      tag_170\n        /* \"contracts/DegenToken.sol\":1873:1875  to */\n      dup3\n        /* \"contracts/DegenToken.sol\":1877:1883  amount */\n      dup3\n        /* \"contracts/DegenToken.sol\":1867:1872  _mint */\n      tag_171\n        /* \"contracts/DegenToken.sol\":1867:1884  _mint(to, amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/DegenToken.sol\":1797:1892  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2323:2477  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/DegenToken.sol\":2422:2449  Item(_name, tokenId,_price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/DegenToken.sol\":2427:2432  _name */\n      dup4\n        /* \"contracts/DegenToken.sol\":2422:2449  Item(_name, tokenId,_price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DegenToken.sol\":2434:2441  tokenId */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DegenToken.sol\":2422:2449  Item(_name, tokenId,_price) */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DegenToken.sol\":2442:2448  _price */\n      dup3\n        /* \"contracts/DegenToken.sol\":2422:2449  Item(_name, tokenId,_price) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/DegenToken.sol\":2405:2410  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":2405:2419  items[tokenId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":2411:2418  tokenId */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DegenToken.sol\":2405:2419  items[tokenId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":2405:2449  items[tokenId] = Item(_name, tokenId,_price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":2460:2467  tokenId */\n      0x08\n      0x00\n        /* \"contracts/DegenToken.sol\":2460:2469  tokenId++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":2323:2477  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":4135:4282  function burnToken(uint _amount) external {... */\n    tag_94:\n        /* \"contracts/DegenToken.sol\":4219:4226  _amount */\n      dup1\n        /* \"contracts/DegenToken.sol\":4196:4217  balanceOf(msg.sender) */\n      tag_194\n        /* \"contracts/DegenToken.sol\":4206:4216  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":4196:4205  balanceOf */\n      tag_85\n        /* \"contracts/DegenToken.sol\":4196:4217  balanceOf(msg.sender) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/DegenToken.sol\":4196:4226  balanceOf(msg.sender)>=_amount */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":4188:4250  require(balanceOf(msg.sender)>=_amount, \"Insufficient amount\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"contracts/DegenToken.sol\":4261:4274  burn(_amount) */\n      tag_198\n        /* \"contracts/DegenToken.sol\":4266:4273  _amount */\n      dup2\n        /* \"contracts/DegenToken.sol\":4261:4265  burn */\n      tag_77\n        /* \"contracts/DegenToken.sol\":4261:4274  burn(_amount) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/DegenToken.sol\":4135:4282  function burnToken(uint _amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_134\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_134\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3857:3960  function getItemPrice(uint8 _id) external  view returns(uint){... */\n    tag_104:\n        /* \"contracts/DegenToken.sol\":3913:3917  uint */\n      0x00\n        /* \"contracts/DegenToken.sol\":3936:3941  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3936:3946  items[_id] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3942:3945  _id */\n      dup4\n        /* \"contracts/DegenToken.sol\":3936:3946  items[_id] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3936:3952  items[_id].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3929:3952  return items[_id].price */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3857:3960  function getItemPrice(uint8 _id) external  view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2972:3367  function purchaseItem(uint8 _itemId) external {... */\n    tag_112:\n        /* \"contracts/DegenToken.sol\":3061:3062  0 */\n      0x00\n        /* \"contracts/DegenToken.sol\":3037:3042  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3037:3051  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3043:3050  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3037:3051  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3037:3057  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3037:3062  items[_itemId].price != 0 */\n      sub\n        /* \"contracts/DegenToken.sol\":3029:3081  require(items[_itemId].price != 0, \"Item not found\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/DegenToken.sol\":3125:3130  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3125:3139  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3131:3138  _itemId */\n      dup3\n        /* \"contracts/DegenToken.sol\":3125:3139  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3125:3145  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3100:3121  balanceOf(msg.sender) */\n      tag_214\n        /* \"contracts/DegenToken.sol\":3110:3120  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3100:3109  balanceOf */\n      tag_85\n        /* \"contracts/DegenToken.sol\":3100:3121  balanceOf(msg.sender) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/DegenToken.sol\":3100:3145  balanceOf(msg.sender) >= items[_itemId].price */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":3092:3170  require(balanceOf(msg.sender) >= items[_itemId].price, \"Insufficient balance\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_148\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/DegenToken.sol\":3183:3209  burn(items[_itemId].price) */\n      tag_217\n        /* \"contracts/DegenToken.sol\":3188:3193  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3188:3202  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3194:3201  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3188:3202  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3188:3208  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3183:3187  burn */\n      tag_77\n        /* \"contracts/DegenToken.sol\":3183:3209  burn(items[_itemId].price) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/DegenToken.sol\":3220:3231  playerItems */\n      0x07\n        /* \"contracts/DegenToken.sol\":3220:3243  playerItems[msg.sender] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3232:3242  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3220:3243  playerItems[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3249:3254  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3249:3263  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3255:3262  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3249:3263  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3220:3264  playerItems[msg.sender].push(items[_itemId]) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      pop\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":3296:3306  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3282:3359  ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e\n        /* \"contracts/DegenToken.sol\":3308:3315  _itemId */\n      dup3\n        /* \"contracts/DegenToken.sol\":3317:3322  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3317:3331  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3323:3330  _itemId */\n      dup6\n        /* \"contracts/DegenToken.sol\":3317:3331  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3317:3336  items[_itemId].name */\n      0x00\n      add\n        /* \"contracts/DegenToken.sol\":3338:3343  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3338:3352  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3344:3351  _itemId */\n      dup7\n        /* \"contracts/DegenToken.sol\":3338:3352  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3338:3358  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3282:3359  ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price) */\n      mload(0x40)\n      tag_221\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2972:3367  function purchaseItem(uint8 _itemId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3375:3733  function getUserItems(address user) external view returns (uint8[] memory) {... */\n    tag_115:\n        /* \"contracts/DegenToken.sol\":3434:3448  uint8[] memory */\n      0x60\n        /* \"contracts/DegenToken.sol\":3461:3484  Item[] memory itemsList */\n      0x00\n        /* \"contracts/DegenToken.sol\":3487:3498  playerItems */\n      0x07\n        /* \"contracts/DegenToken.sol\":3487:3504  playerItems[user] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3499:3503  user */\n      dup5\n        /* \"contracts/DegenToken.sol\":3487:3504  playerItems[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3461:3504  Item[] memory itemsList = playerItems[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_224:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_225\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_134\n      jump\t// in\n    tag_227:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_228\n      swap1\n      tag_134\n      jump\t// in\n    tag_228:\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_230\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_229)\n    tag_230:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_231:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_231\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_224)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3515:3526  uint length */\n      0x00\n        /* \"contracts/DegenToken.sol\":3529:3538  itemsList */\n      dup2\n        /* \"contracts/DegenToken.sol\":3529:3545  itemsList.length */\n      mload\n        /* \"contracts/DegenToken.sol\":3515:3545  uint length = itemsList.length */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3558:3577  uint8[] memory _ids */\n      0x00\n        /* \"contracts/DegenToken.sol\":3592:3598  length */\n      dup2\n        /* \"contracts/DegenToken.sol\":3580:3599  new uint8[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_232\n      jumpi\n      tag_233\n      tag_234\n      jump\t// in\n    tag_233:\n    tag_232:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_235\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_235:\n      pop\n        /* \"contracts/DegenToken.sol\":3558:3599  uint8[] memory _ids = new uint8[](length) */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3617:3623  uint i */\n      0x00\n        /* \"contracts/DegenToken.sol\":3612:3702  for (uint i = 0; i < length; i++) {... */\n    tag_236:\n        /* \"contracts/DegenToken.sol\":3633:3639  length */\n      dup3\n        /* \"contracts/DegenToken.sol\":3629:3630  i */\n      dup2\n        /* \"contracts/DegenToken.sol\":3629:3639  i < length */\n      lt\n        /* \"contracts/DegenToken.sol\":3612:3702  for (uint i = 0; i < length; i++) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/DegenToken.sol\":3671:3680  itemsList */\n      dup4\n        /* \"contracts/DegenToken.sol\":3681:3682  i */\n      dup2\n        /* \"contracts/DegenToken.sol\":3671:3683  itemsList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n    tag_239:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DegenToken.sol\":3671:3690  itemsList[i].itemId */\n      0x20\n      add\n      mload\n        /* \"contracts/DegenToken.sol\":3661:3665  _ids */\n      dup3\n        /* \"contracts/DegenToken.sol\":3666:3667  i */\n      dup3\n        /* \"contracts/DegenToken.sol\":3661:3668  _ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_243\n      tag_241\n      jump\t// in\n    tag_243:\n    tag_242:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/DegenToken.sol\":3661:3690  _ids[i] = itemsList[i].itemId */\n      swap1\n      0xff\n      and\n      swap1\n      dup2\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":3641:3644  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":3612:3702  for (uint i = 0; i < length; i++) {... */\n      jump(tag_236)\n    tag_237:\n      pop\n        /* \"contracts/DegenToken.sol\":3721:3725  _ids */\n      dup1\n        /* \"contracts/DegenToken.sol\":3714:3725  return _ids */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":3375:3733  function getUserItems(address user) external view returns (uint8[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2486:2960  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n    tag_126:\n        /* \"contracts/DegenToken.sol\":2566:2583  uint randomNumber */\n      0x00\n        /* \"contracts/DegenToken.sol\":2651:2653  10 */\n      0x0a\n        /* \"contracts/DegenToken.sol\":2618:2633  block.timestamp */\n      timestamp\n        /* \"contracts/DegenToken.sol\":2635:2645  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2601:2646  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_246\n      swap3\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DegenToken.sol\":2591:2647  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DegenToken.sol\":2586:2648  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"contracts/DegenToken.sol\":2586:2653  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"contracts/DegenToken.sol\":2566:2653  uint randomNumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":2698:2699  5 */\n      0x05\n        /* \"contracts/DegenToken.sol\":2685:2697  randomNumber */\n      dup2\n        /* \"contracts/DegenToken.sol\":2685:2699  randomNumber<5 */\n      lt\n        /* \"contracts/DegenToken.sol\":2670:2700  _prediction ==(randomNumber<5) */\n      iszero\n      iszero\n        /* \"contracts/DegenToken.sol\":2670:2681  _prediction */\n      dup4\n        /* \"contracts/DegenToken.sol\":2670:2700  _prediction ==(randomNumber<5) */\n      iszero\n      iszero\n      sub\n        /* \"contracts/DegenToken.sol\":2666:2953  if (_prediction ==(randomNumber<5)) {... */\n      tag_250\n      jumpi\n        /* \"contracts/DegenToken.sol\":2717:2748  _mint(msg.sender, _betAmount*2) */\n      tag_251\n        /* \"contracts/DegenToken.sol\":2723:2733  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2746:2747  2 */\n      0x02\n        /* \"contracts/DegenToken.sol\":2735:2745  _betAmount */\n      dup5\n        /* \"contracts/DegenToken.sol\":2735:2747  _betAmount*2 */\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"contracts/DegenToken.sol\":2717:2722  _mint */\n      tag_171\n        /* \"contracts/DegenToken.sol\":2717:2748  _mint(msg.sender, _betAmount*2) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/DegenToken.sol\":2780:2790  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2768:2818  GameOutcome(msg.sender, randomNumber, true, \"won\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/DegenToken.sol\":2792:2804  randomNumber */\n      dup3\n        /* \"contracts/DegenToken.sol\":2806:2810  true */\n      0x01\n        /* \"contracts/DegenToken.sol\":2768:2818  GameOutcome(msg.sender, randomNumber, true, \"won\") */\n      mload(0x40)\n      tag_254\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2666:2953  if (_prediction ==(randomNumber<5)) {... */\n      jump(tag_256)\n    tag_250:\n        /* \"contracts/DegenToken.sol\":2853:2869  burn(_betAmount) */\n      tag_257\n        /* \"contracts/DegenToken.sol\":2858:2868  _betAmount */\n      dup3\n        /* \"contracts/DegenToken.sol\":2853:2857  burn */\n      tag_77\n        /* \"contracts/DegenToken.sol\":2853:2869  burn(_betAmount) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/DegenToken.sol\":2901:2911  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2889:2941  GameOutcome(msg.sender, randomNumber, false, \"lost\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/DegenToken.sol\":2913:2925  randomNumber */\n      dup3\n        /* \"contracts/DegenToken.sol\":2927:2932  false */\n      0x00\n        /* \"contracts/DegenToken.sol\":2889:2941  GameOutcome(msg.sender, randomNumber, false, \"lost\") */\n      mload(0x40)\n      tag_258\n      swap3\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2666:2953  if (_prediction ==(randomNumber<5)) {... */\n    tag_256:\n        /* \"contracts/DegenToken.sol\":2555:2960  {... */\n      pop\n        /* \"contracts/DegenToken.sol\":2486:2960  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2153:2315  function welcomeBonus() public {... */\n    tag_131:\n        /* \"contracts/DegenToken.sol\":2228:2229  0 */\n      0x00\n        /* \"contracts/DegenToken.sol\":2203:2224  balanceOf(msg.sender) */\n      tag_267\n        /* \"contracts/DegenToken.sol\":2213:2223  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2203:2212  balanceOf */\n      tag_85\n        /* \"contracts/DegenToken.sol\":2203:2224  balanceOf(msg.sender) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/DegenToken.sol\":2203:2229  balanceOf(msg.sender) == 0 */\n      eq\n        /* \"contracts/DegenToken.sol\":2195:2275  require(balanceOf(msg.sender) == 0, \"You've already claimed your welcome bonus\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"contracts/DegenToken.sol\":2286:2307  _mint(msg.sender, 50) */\n      tag_271\n        /* \"contracts/DegenToken.sol\":2292:2302  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2304:2306  50 */\n      0x32\n        /* \"contracts/DegenToken.sol\":2286:2291  _mint */\n      tag_171\n        /* \"contracts/DegenToken.sol\":2286:2307  _mint(msg.sender, 50) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/DegenToken.sol\":2153:2315  function welcomeBonus() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_316)\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_320)\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_322:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_323:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_324:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_325:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_326:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_406\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_322\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":711:782   */\n      tag_407\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_323\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_408\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_324\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":881:910   */\n      tag_409\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_325\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_37:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_411\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_326\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_327:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_328:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_329:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_330:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_331:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_417\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_330\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_332:\n        /* \"#utility.yul\":1876:1900   */\n      tag_419\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_331\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_420:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_333:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_422\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_332\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_334:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_335:\n        /* \"#utility.yul\":2232:2256   */\n      tag_425\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_334\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_426:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_336:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_428\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_335\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_40:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_431\n      tag_328\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2525:2644   */\n    tag_430:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_432\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_333\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_433\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_336\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_337:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_338:\n        /* \"#utility.yul\":3089:3110   */\n      tag_436\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_337\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_43:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_438\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_338\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_339:\n        /* \"#utility.yul\":3426:3450   */\n      tag_440\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_334\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_50:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_442\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_339\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3777   */\n    tag_340:\n        /* \"#utility.yul\":3726:3733   */\n      0x00\n        /* \"#utility.yul\":3766:3770   */\n      0xff\n        /* \"#utility.yul\":3759:3764   */\n      dup3\n        /* \"#utility.yul\":3755:3771   */\n      and\n        /* \"#utility.yul\":3744:3771   */\n      swap1\n      pop\n        /* \"#utility.yul\":3691:3777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:3895   */\n    tag_341:\n        /* \"#utility.yul\":3866:3888   */\n      tag_445\n        /* \"#utility.yul\":3882:3887   */\n      dup2\n        /* \"#utility.yul\":3866:3888   */\n      tag_340\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3861:3864   */\n      dup3\n        /* \"#utility.yul\":3854:3889   */\n      mstore\n        /* \"#utility.yul\":3783:3895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3901:4115   */\n    tag_54:\n        /* \"#utility.yul\":3990:3994   */\n      0x00\n        /* \"#utility.yul\":4028:4030   */\n      0x20\n        /* \"#utility.yul\":4017:4026   */\n      dup3\n        /* \"#utility.yul\":4013:4031   */\n      add\n        /* \"#utility.yul\":4005:4031   */\n      swap1\n      pop\n        /* \"#utility.yul\":4041:4108   */\n      tag_447\n        /* \"#utility.yul\":4105:4106   */\n      0x00\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4090:4107   */\n      add\n        /* \"#utility.yul\":4081:4087   */\n      dup5\n        /* \"#utility.yul\":4041:4108   */\n      tag_341\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":3901:4115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4121:4740   */\n    tag_60:\n        /* \"#utility.yul\":4198:4204   */\n      0x00\n        /* \"#utility.yul\":4206:4212   */\n      dup1\n        /* \"#utility.yul\":4214:4220   */\n      0x00\n        /* \"#utility.yul\":4263:4265   */\n      0x60\n        /* \"#utility.yul\":4251:4260   */\n      dup5\n        /* \"#utility.yul\":4242:4249   */\n      dup7\n        /* \"#utility.yul\":4238:4261   */\n      sub\n        /* \"#utility.yul\":4234:4266   */\n      slt\n        /* \"#utility.yul\":4231:4350   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":4269:4348   */\n      tag_450\n      tag_328\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4231:4350   */\n    tag_449:\n        /* \"#utility.yul\":4389:4390   */\n      0x00\n        /* \"#utility.yul\":4414:4467   */\n      tag_451\n        /* \"#utility.yul\":4459:4466   */\n      dup7\n        /* \"#utility.yul\":4450:4456   */\n      dup3\n        /* \"#utility.yul\":4439:4448   */\n      dup8\n        /* \"#utility.yul\":4435:4457   */\n      add\n        /* \"#utility.yul\":4414:4467   */\n      tag_333\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4404:4467   */\n      swap4\n      pop\n        /* \"#utility.yul\":4360:4477   */\n      pop\n        /* \"#utility.yul\":4516:4518   */\n      0x20\n        /* \"#utility.yul\":4542:4595   */\n      tag_452\n        /* \"#utility.yul\":4587:4594   */\n      dup7\n        /* \"#utility.yul\":4578:4584   */\n      dup3\n        /* \"#utility.yul\":4567:4576   */\n      dup8\n        /* \"#utility.yul\":4563:4585   */\n      add\n        /* \"#utility.yul\":4542:4595   */\n      tag_333\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4532:4595   */\n      swap3\n      pop\n        /* \"#utility.yul\":4487:4605   */\n      pop\n        /* \"#utility.yul\":4644:4646   */\n      0x40\n        /* \"#utility.yul\":4670:4723   */\n      tag_453\n        /* \"#utility.yul\":4715:4722   */\n      dup7\n        /* \"#utility.yul\":4706:4712   */\n      dup3\n        /* \"#utility.yul\":4695:4704   */\n      dup8\n        /* \"#utility.yul\":4691:4713   */\n      add\n        /* \"#utility.yul\":4670:4723   */\n      tag_336\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4660:4723   */\n      swap2\n      pop\n        /* \"#utility.yul\":4615:4733   */\n      pop\n        /* \"#utility.yul\":4121:4740   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4746:4864   */\n    tag_342:\n        /* \"#utility.yul\":4817:4839   */\n      tag_455\n        /* \"#utility.yul\":4833:4838   */\n      dup2\n        /* \"#utility.yul\":4817:4839   */\n      tag_340\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4810:4815   */\n      dup2\n        /* \"#utility.yul\":4807:4840   */\n      eq\n        /* \"#utility.yul\":4797:4858   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":4854:4855   */\n      0x00\n        /* \"#utility.yul\":4851:4852   */\n      dup1\n        /* \"#utility.yul\":4844:4856   */\n      revert\n        /* \"#utility.yul\":4797:4858   */\n    tag_456:\n        /* \"#utility.yul\":4746:4864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4870:5005   */\n    tag_343:\n        /* \"#utility.yul\":4914:4919   */\n      0x00\n        /* \"#utility.yul\":4952:4958   */\n      dup2\n        /* \"#utility.yul\":4939:4959   */\n      calldataload\n        /* \"#utility.yul\":4930:4959   */\n      swap1\n      pop\n        /* \"#utility.yul\":4968:4999   */\n      tag_458\n        /* \"#utility.yul\":4993:4998   */\n      dup2\n        /* \"#utility.yul\":4968:4999   */\n      tag_342\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4870:5005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5011:5336   */\n    tag_65:\n        /* \"#utility.yul\":5068:5074   */\n      0x00\n        /* \"#utility.yul\":5117:5119   */\n      0x20\n        /* \"#utility.yul\":5105:5114   */\n      dup3\n        /* \"#utility.yul\":5096:5103   */\n      dup5\n        /* \"#utility.yul\":5092:5115   */\n      sub\n        /* \"#utility.yul\":5088:5120   */\n      slt\n        /* \"#utility.yul\":5085:5204   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":5123:5202   */\n      tag_461\n      tag_328\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5085:5204   */\n    tag_460:\n        /* \"#utility.yul\":5243:5244   */\n      0x00\n        /* \"#utility.yul\":5268:5319   */\n      tag_462\n        /* \"#utility.yul\":5311:5318   */\n      dup5\n        /* \"#utility.yul\":5302:5308   */\n      dup3\n        /* \"#utility.yul\":5291:5300   */\n      dup6\n        /* \"#utility.yul\":5287:5309   */\n      add\n        /* \"#utility.yul\":5268:5319   */\n      tag_343\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5258:5319   */\n      swap2\n      pop\n        /* \"#utility.yul\":5214:5329   */\n      pop\n        /* \"#utility.yul\":5011:5336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:5671   */\n    tag_76:\n        /* \"#utility.yul\":5401:5407   */\n      0x00\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5438:5447   */\n      dup3\n        /* \"#utility.yul\":5429:5436   */\n      dup5\n        /* \"#utility.yul\":5425:5448   */\n      sub\n        /* \"#utility.yul\":5421:5453   */\n      slt\n        /* \"#utility.yul\":5418:5537   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5456:5535   */\n      tag_465\n      tag_328\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5418:5537   */\n    tag_464:\n        /* \"#utility.yul\":5576:5577   */\n      0x00\n        /* \"#utility.yul\":5601:5654   */\n      tag_466\n        /* \"#utility.yul\":5646:5653   */\n      dup5\n        /* \"#utility.yul\":5637:5643   */\n      dup3\n        /* \"#utility.yul\":5626:5635   */\n      dup6\n        /* \"#utility.yul\":5622:5644   */\n      add\n        /* \"#utility.yul\":5601:5654   */\n      tag_336\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5591:5654   */\n      swap2\n      pop\n        /* \"#utility.yul\":5547:5664   */\n      pop\n        /* \"#utility.yul\":5342:5671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5677:5794   */\n    tag_344:\n        /* \"#utility.yul\":5786:5787   */\n      0x00\n        /* \"#utility.yul\":5783:5784   */\n      dup1\n        /* \"#utility.yul\":5776:5788   */\n      revert\n        /* \"#utility.yul\":5800:5917   */\n    tag_345:\n        /* \"#utility.yul\":5909:5910   */\n      0x00\n        /* \"#utility.yul\":5906:5907   */\n      dup1\n        /* \"#utility.yul\":5899:5911   */\n      revert\n        /* \"#utility.yul\":5923:6103   */\n    tag_234:\n        /* \"#utility.yul\":5971:6048   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5968:5969   */\n      0x00\n        /* \"#utility.yul\":5961:6049   */\n      mstore\n        /* \"#utility.yul\":6068:6072   */\n      0x41\n        /* \"#utility.yul\":6065:6066   */\n      0x04\n        /* \"#utility.yul\":6058:6073   */\n      mstore\n        /* \"#utility.yul\":6092:6096   */\n      0x24\n        /* \"#utility.yul\":6089:6090   */\n      0x00\n        /* \"#utility.yul\":6082:6097   */\n      revert\n        /* \"#utility.yul\":6109:6390   */\n    tag_346:\n        /* \"#utility.yul\":6192:6219   */\n      tag_471\n        /* \"#utility.yul\":6214:6218   */\n      dup3\n        /* \"#utility.yul\":6192:6219   */\n      tag_325\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6184:6190   */\n      dup2\n        /* \"#utility.yul\":6180:6220   */\n      add\n        /* \"#utility.yul\":6322:6328   */\n      dup2\n        /* \"#utility.yul\":6310:6320   */\n      dup2\n        /* \"#utility.yul\":6307:6329   */\n      lt\n        /* \"#utility.yul\":6286:6304   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6274:6284   */\n      dup3\n        /* \"#utility.yul\":6271:6305   */\n      gt\n        /* \"#utility.yul\":6268:6330   */\n      or\n        /* \"#utility.yul\":6265:6353   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":6333:6351   */\n      tag_473\n      tag_234\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6265:6353   */\n    tag_472:\n        /* \"#utility.yul\":6373:6383   */\n      dup1\n        /* \"#utility.yul\":6369:6371   */\n      0x40\n        /* \"#utility.yul\":6362:6384   */\n      mstore\n        /* \"#utility.yul\":6152:6390   */\n      pop\n        /* \"#utility.yul\":6109:6390   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6525   */\n    tag_347:\n        /* \"#utility.yul\":6430:6436   */\n      0x00\n        /* \"#utility.yul\":6457:6477   */\n      tag_475\n      tag_327\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6447:6477   */\n      swap1\n      pop\n        /* \"#utility.yul\":6486:6519   */\n      tag_476\n        /* \"#utility.yul\":6514:6518   */\n      dup3\n        /* \"#utility.yul\":6506:6512   */\n      dup3\n        /* \"#utility.yul\":6486:6519   */\n      tag_346\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6396:6525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6531:6839   */\n    tag_348:\n        /* \"#utility.yul\":6593:6597   */\n      0x00\n        /* \"#utility.yul\":6683:6701   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6675:6681   */\n      dup3\n        /* \"#utility.yul\":6672:6702   */\n      gt\n        /* \"#utility.yul\":6669:6725   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":6705:6723   */\n      tag_479\n      tag_234\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6669:6725   */\n    tag_478:\n        /* \"#utility.yul\":6743:6772   */\n      tag_480\n        /* \"#utility.yul\":6765:6771   */\n      dup3\n        /* \"#utility.yul\":6743:6772   */\n      tag_325\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":6735:6772   */\n      swap1\n      pop\n        /* \"#utility.yul\":6827:6831   */\n      0x20\n        /* \"#utility.yul\":6821:6825   */\n      dup2\n        /* \"#utility.yul\":6817:6832   */\n      add\n        /* \"#utility.yul\":6809:6832   */\n      swap1\n      pop\n        /* \"#utility.yul\":6531:6839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6845:6993   */\n    tag_349:\n        /* \"#utility.yul\":6943:6949   */\n      dup3\n        /* \"#utility.yul\":6938:6941   */\n      dup2\n        /* \"#utility.yul\":6933:6936   */\n      dup4\n        /* \"#utility.yul\":6920:6950   */\n      calldatacopy\n        /* \"#utility.yul\":6984:6985   */\n      0x00\n        /* \"#utility.yul\":6975:6981   */\n      dup4\n        /* \"#utility.yul\":6970:6973   */\n      dup4\n        /* \"#utility.yul\":6966:6982   */\n      add\n        /* \"#utility.yul\":6959:6986   */\n      mstore\n        /* \"#utility.yul\":6845:6993   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6999:7424   */\n    tag_350:\n        /* \"#utility.yul\":7077:7082   */\n      0x00\n        /* \"#utility.yul\":7102:7168   */\n      tag_483\n        /* \"#utility.yul\":7118:7167   */\n      tag_484\n        /* \"#utility.yul\":7160:7166   */\n      dup5\n        /* \"#utility.yul\":7118:7167   */\n      tag_348\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7102:7168   */\n      tag_347\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7093:7168   */\n      swap1\n      pop\n        /* \"#utility.yul\":7191:7197   */\n      dup3\n        /* \"#utility.yul\":7184:7189   */\n      dup2\n        /* \"#utility.yul\":7177:7198   */\n      mstore\n        /* \"#utility.yul\":7229:7233   */\n      0x20\n        /* \"#utility.yul\":7222:7227   */\n      dup2\n        /* \"#utility.yul\":7218:7234   */\n      add\n        /* \"#utility.yul\":7267:7270   */\n      dup5\n        /* \"#utility.yul\":7258:7264   */\n      dup5\n        /* \"#utility.yul\":7253:7256   */\n      dup5\n        /* \"#utility.yul\":7249:7265   */\n      add\n        /* \"#utility.yul\":7246:7271   */\n      gt\n        /* \"#utility.yul\":7243:7355   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":7274:7353   */\n      tag_486\n      tag_345\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":7243:7355   */\n    tag_485:\n        /* \"#utility.yul\":7364:7418   */\n      tag_487\n        /* \"#utility.yul\":7411:7417   */\n      dup5\n        /* \"#utility.yul\":7406:7409   */\n      dup3\n        /* \"#utility.yul\":7401:7404   */\n      dup6\n        /* \"#utility.yul\":7364:7418   */\n      tag_349\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7083:7424   */\n      pop\n        /* \"#utility.yul\":6999:7424   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7444:7784   */\n    tag_351:\n        /* \"#utility.yul\":7500:7505   */\n      0x00\n        /* \"#utility.yul\":7549:7552   */\n      dup3\n        /* \"#utility.yul\":7542:7546   */\n      0x1f\n        /* \"#utility.yul\":7534:7540   */\n      dup4\n        /* \"#utility.yul\":7530:7547   */\n      add\n        /* \"#utility.yul\":7526:7553   */\n      slt\n        /* \"#utility.yul\":7516:7638   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":7557:7636   */\n      tag_490\n      tag_344\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7516:7638   */\n    tag_489:\n        /* \"#utility.yul\":7674:7680   */\n      dup2\n        /* \"#utility.yul\":7661:7681   */\n      calldataload\n        /* \"#utility.yul\":7699:7778   */\n      tag_491\n        /* \"#utility.yul\":7774:7777   */\n      dup5\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7759:7763   */\n      0x20\n        /* \"#utility.yul\":7751:7757   */\n      dup7\n        /* \"#utility.yul\":7747:7764   */\n      add\n        /* \"#utility.yul\":7699:7778   */\n      tag_350\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7690:7778   */\n      swap2\n      pop\n        /* \"#utility.yul\":7506:7784   */\n      pop\n        /* \"#utility.yul\":7444:7784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7790:8444   */\n    tag_80:\n        /* \"#utility.yul\":7868:7874   */\n      0x00\n        /* \"#utility.yul\":7876:7882   */\n      dup1\n        /* \"#utility.yul\":7925:7927   */\n      0x40\n        /* \"#utility.yul\":7913:7922   */\n      dup4\n        /* \"#utility.yul\":7904:7911   */\n      dup6\n        /* \"#utility.yul\":7900:7923   */\n      sub\n        /* \"#utility.yul\":7896:7928   */\n      slt\n        /* \"#utility.yul\":7893:8012   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":7931:8010   */\n      tag_494\n      tag_328\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7893:8012   */\n    tag_493:\n        /* \"#utility.yul\":8079:8080   */\n      0x00\n        /* \"#utility.yul\":8068:8077   */\n      dup4\n        /* \"#utility.yul\":8064:8081   */\n      add\n        /* \"#utility.yul\":8051:8082   */\n      calldataload\n        /* \"#utility.yul\":8109:8127   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8101:8107   */\n      dup2\n        /* \"#utility.yul\":8098:8128   */\n      gt\n        /* \"#utility.yul\":8095:8212   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":8131:8210   */\n      tag_496\n      tag_329\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8095:8212   */\n    tag_495:\n        /* \"#utility.yul\":8236:8299   */\n      tag_497\n        /* \"#utility.yul\":8291:8298   */\n      dup6\n        /* \"#utility.yul\":8282:8288   */\n      dup3\n        /* \"#utility.yul\":8271:8280   */\n      dup7\n        /* \"#utility.yul\":8267:8289   */\n      add\n        /* \"#utility.yul\":8236:8299   */\n      tag_351\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8226:8299   */\n      swap3\n      pop\n        /* \"#utility.yul\":8022:8309   */\n      pop\n        /* \"#utility.yul\":8348:8350   */\n      0x20\n        /* \"#utility.yul\":8374:8427   */\n      tag_498\n        /* \"#utility.yul\":8419:8426   */\n      dup6\n        /* \"#utility.yul\":8410:8416   */\n      dup3\n        /* \"#utility.yul\":8399:8408   */\n      dup7\n        /* \"#utility.yul\":8395:8417   */\n      add\n        /* \"#utility.yul\":8374:8427   */\n      tag_336\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":8364:8427   */\n      swap2\n      pop\n        /* \"#utility.yul\":8319:8437   */\n      pop\n        /* \"#utility.yul\":7790:8444   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8450:8779   */\n    tag_84:\n        /* \"#utility.yul\":8509:8515   */\n      0x00\n        /* \"#utility.yul\":8558:8560   */\n      0x20\n        /* \"#utility.yul\":8546:8555   */\n      dup3\n        /* \"#utility.yul\":8537:8544   */\n      dup5\n        /* \"#utility.yul\":8533:8556   */\n      sub\n        /* \"#utility.yul\":8529:8561   */\n      slt\n        /* \"#utility.yul\":8526:8645   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":8564:8643   */\n      tag_501\n      tag_328\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8526:8645   */\n    tag_500:\n        /* \"#utility.yul\":8684:8685   */\n      0x00\n        /* \"#utility.yul\":8709:8762   */\n      tag_502\n        /* \"#utility.yul\":8754:8761   */\n      dup5\n        /* \"#utility.yul\":8745:8751   */\n      dup3\n        /* \"#utility.yul\":8734:8743   */\n      dup6\n        /* \"#utility.yul\":8730:8752   */\n      add\n        /* \"#utility.yul\":8709:8762   */\n      tag_333\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8699:8762   */\n      swap2\n      pop\n        /* \"#utility.yul\":8655:8772   */\n      pop\n        /* \"#utility.yul\":8450:8779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8785:8903   */\n    tag_352:\n        /* \"#utility.yul\":8872:8896   */\n      tag_504\n        /* \"#utility.yul\":8890:8895   */\n      dup2\n        /* \"#utility.yul\":8872:8896   */\n      tag_331\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8867:8870   */\n      dup3\n        /* \"#utility.yul\":8860:8897   */\n      mstore\n        /* \"#utility.yul\":8785:8903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8909:9131   */\n    tag_98:\n        /* \"#utility.yul\":9002:9006   */\n      0x00\n        /* \"#utility.yul\":9040:9042   */\n      0x20\n        /* \"#utility.yul\":9029:9038   */\n      dup3\n        /* \"#utility.yul\":9025:9043   */\n      add\n        /* \"#utility.yul\":9017:9043   */\n      swap1\n      pop\n        /* \"#utility.yul\":9053:9124   */\n      tag_506\n        /* \"#utility.yul\":9121:9122   */\n      0x00\n        /* \"#utility.yul\":9110:9119   */\n      dup4\n        /* \"#utility.yul\":9106:9123   */\n      add\n        /* \"#utility.yul\":9097:9103   */\n      dup5\n        /* \"#utility.yul\":9053:9124   */\n      tag_352\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8909:9131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9137:9249   */\n    tag_353:\n        /* \"#utility.yul\":9202:9208   */\n      0x00\n        /* \"#utility.yul\":9236:9241   */\n      dup2\n        /* \"#utility.yul\":9230:9242   */\n      mload\n        /* \"#utility.yul\":9220:9242   */\n      swap1\n      pop\n        /* \"#utility.yul\":9137:9249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9255:9437   */\n    tag_354:\n        /* \"#utility.yul\":9352:9363   */\n      0x00\n        /* \"#utility.yul\":9386:9392   */\n      dup3\n        /* \"#utility.yul\":9381:9384   */\n      dup3\n        /* \"#utility.yul\":9374:9393   */\n      mstore\n        /* \"#utility.yul\":9426:9430   */\n      0x20\n        /* \"#utility.yul\":9421:9424   */\n      dup3\n        /* \"#utility.yul\":9417:9431   */\n      add\n        /* \"#utility.yul\":9402:9431   */\n      swap1\n      pop\n        /* \"#utility.yul\":9255:9437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9443:9573   */\n    tag_355:\n        /* \"#utility.yul\":9508:9512   */\n      0x00\n        /* \"#utility.yul\":9531:9534   */\n      dup2\n        /* \"#utility.yul\":9523:9534   */\n      swap1\n      pop\n        /* \"#utility.yul\":9561:9565   */\n      0x20\n        /* \"#utility.yul\":9556:9559   */\n      dup3\n        /* \"#utility.yul\":9552:9566   */\n      add\n        /* \"#utility.yul\":9544:9566   */\n      swap1\n      pop\n        /* \"#utility.yul\":9443:9573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9579:9681   */\n    tag_356:\n        /* \"#utility.yul\":9652:9674   */\n      tag_511\n        /* \"#utility.yul\":9668:9673   */\n      dup2\n        /* \"#utility.yul\":9652:9674   */\n      tag_340\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9647:9650   */\n      dup3\n        /* \"#utility.yul\":9640:9675   */\n      mstore\n        /* \"#utility.yul\":9579:9681   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9687:9858   */\n    tag_357:\n        /* \"#utility.yul\":9752:9762   */\n      0x00\n        /* \"#utility.yul\":9773:9815   */\n      tag_513\n        /* \"#utility.yul\":9811:9814   */\n      dup4\n        /* \"#utility.yul\":9803:9809   */\n      dup4\n        /* \"#utility.yul\":9773:9815   */\n      tag_356\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9847:9851   */\n      0x20\n        /* \"#utility.yul\":9842:9845   */\n      dup4\n        /* \"#utility.yul\":9838:9852   */\n      add\n        /* \"#utility.yul\":9824:9852   */\n      swap1\n      pop\n        /* \"#utility.yul\":9687:9858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9864:9975   */\n    tag_358:\n        /* \"#utility.yul\":9932:9936   */\n      0x00\n        /* \"#utility.yul\":9964:9968   */\n      0x20\n        /* \"#utility.yul\":9959:9962   */\n      dup3\n        /* \"#utility.yul\":9955:9969   */\n      add\n        /* \"#utility.yul\":9947:9969   */\n      swap1\n      pop\n        /* \"#utility.yul\":9864:9975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10007:10723   */\n    tag_359:\n        /* \"#utility.yul\":10122:10125   */\n      0x00\n        /* \"#utility.yul\":10151:10203   */\n      tag_516\n        /* \"#utility.yul\":10197:10202   */\n      dup3\n        /* \"#utility.yul\":10151:10203   */\n      tag_353\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10219:10303   */\n      tag_517\n        /* \"#utility.yul\":10296:10302   */\n      dup2\n        /* \"#utility.yul\":10291:10294   */\n      dup6\n        /* \"#utility.yul\":10219:10303   */\n      tag_354\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10212:10303   */\n      swap4\n      pop\n        /* \"#utility.yul\":10327:10381   */\n      tag_518\n        /* \"#utility.yul\":10375:10380   */\n      dup4\n        /* \"#utility.yul\":10327:10381   */\n      tag_355\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10404:10411   */\n      dup1\n        /* \"#utility.yul\":10435:10436   */\n      0x00\n        /* \"#utility.yul\":10420:10698   */\n    tag_519:\n        /* \"#utility.yul\":10445:10451   */\n      dup4\n        /* \"#utility.yul\":10442:10443   */\n      dup2\n        /* \"#utility.yul\":10439:10452   */\n      lt\n        /* \"#utility.yul\":10420:10698   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":10521:10527   */\n      dup2\n        /* \"#utility.yul\":10515:10528   */\n      mload\n        /* \"#utility.yul\":10548:10607   */\n      tag_522\n        /* \"#utility.yul\":10603:10606   */\n      dup9\n        /* \"#utility.yul\":10588:10601   */\n      dup3\n        /* \"#utility.yul\":10548:10607   */\n      tag_357\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10541:10607   */\n      swap8\n      pop\n        /* \"#utility.yul\":10630:10688   */\n      tag_523\n        /* \"#utility.yul\":10681:10687   */\n      dup4\n        /* \"#utility.yul\":10630:10688   */\n      tag_358\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10620:10688   */\n      swap3\n      pop\n        /* \"#utility.yul\":10480:10698   */\n      pop\n        /* \"#utility.yul\":10467:10468   */\n      0x01\n        /* \"#utility.yul\":10464:10465   */\n      dup2\n        /* \"#utility.yul\":10460:10469   */\n      add\n        /* \"#utility.yul\":10455:10469   */\n      swap1\n      pop\n        /* \"#utility.yul\":10420:10698   */\n      jump(tag_519)\n    tag_521:\n        /* \"#utility.yul\":10424:10438   */\n      pop\n        /* \"#utility.yul\":10714:10717   */\n      dup6\n        /* \"#utility.yul\":10707:10717   */\n      swap4\n      pop\n        /* \"#utility.yul\":10127:10723   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10007:10723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10729:11094   */\n    tag_117:\n        /* \"#utility.yul\":10868:10872   */\n      0x00\n        /* \"#utility.yul\":10906:10908   */\n      0x20\n        /* \"#utility.yul\":10895:10904   */\n      dup3\n        /* \"#utility.yul\":10891:10909   */\n      add\n        /* \"#utility.yul\":10883:10909   */\n      swap1\n      pop\n        /* \"#utility.yul\":10955:10964   */\n      dup2\n        /* \"#utility.yul\":10949:10953   */\n      dup2\n        /* \"#utility.yul\":10945:10965   */\n      sub\n        /* \"#utility.yul\":10941:10942   */\n      0x00\n        /* \"#utility.yul\":10930:10939   */\n      dup4\n        /* \"#utility.yul\":10926:10943   */\n      add\n        /* \"#utility.yul\":10919:10966   */\n      mstore\n        /* \"#utility.yul\":10983:11087   */\n      tag_525\n        /* \"#utility.yul\":11082:11086   */\n      dup2\n        /* \"#utility.yul\":11073:11079   */\n      dup5\n        /* \"#utility.yul\":10983:11087   */\n      tag_359\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10975:11087   */\n      swap1\n      pop\n        /* \"#utility.yul\":10729:11094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11100:11574   */\n    tag_120:\n        /* \"#utility.yul\":11168:11174   */\n      0x00\n        /* \"#utility.yul\":11176:11182   */\n      dup1\n        /* \"#utility.yul\":11225:11227   */\n      0x40\n        /* \"#utility.yul\":11213:11222   */\n      dup4\n        /* \"#utility.yul\":11204:11211   */\n      dup6\n        /* \"#utility.yul\":11200:11223   */\n      sub\n        /* \"#utility.yul\":11196:11228   */\n      slt\n        /* \"#utility.yul\":11193:11312   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":11231:11310   */\n      tag_528\n      tag_328\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11193:11312   */\n    tag_527:\n        /* \"#utility.yul\":11351:11352   */\n      0x00\n        /* \"#utility.yul\":11376:11429   */\n      tag_529\n        /* \"#utility.yul\":11421:11428   */\n      dup6\n        /* \"#utility.yul\":11412:11418   */\n      dup3\n        /* \"#utility.yul\":11401:11410   */\n      dup7\n        /* \"#utility.yul\":11397:11419   */\n      add\n        /* \"#utility.yul\":11376:11429   */\n      tag_333\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11366:11429   */\n      swap3\n      pop\n        /* \"#utility.yul\":11322:11439   */\n      pop\n        /* \"#utility.yul\":11478:11480   */\n      0x20\n        /* \"#utility.yul\":11504:11557   */\n      tag_530\n        /* \"#utility.yul\":11549:11556   */\n      dup6\n        /* \"#utility.yul\":11540:11546   */\n      dup3\n        /* \"#utility.yul\":11529:11538   */\n      dup7\n        /* \"#utility.yul\":11525:11547   */\n      add\n        /* \"#utility.yul\":11504:11557   */\n      tag_333\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11494:11557   */\n      swap2\n      pop\n        /* \"#utility.yul\":11449:11567   */\n      pop\n        /* \"#utility.yul\":11100:11574   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11580:11696   */\n    tag_360:\n        /* \"#utility.yul\":11650:11671   */\n      tag_532\n        /* \"#utility.yul\":11665:11670   */\n      dup2\n        /* \"#utility.yul\":11650:11671   */\n      tag_337\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11643:11648   */\n      dup2\n        /* \"#utility.yul\":11640:11672   */\n      eq\n        /* \"#utility.yul\":11630:11690   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":11686:11687   */\n      0x00\n        /* \"#utility.yul\":11683:11684   */\n      dup1\n        /* \"#utility.yul\":11676:11688   */\n      revert\n        /* \"#utility.yul\":11630:11690   */\n    tag_533:\n        /* \"#utility.yul\":11580:11696   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11702:11835   */\n    tag_361:\n        /* \"#utility.yul\":11745:11750   */\n      0x00\n        /* \"#utility.yul\":11783:11789   */\n      dup2\n        /* \"#utility.yul\":11770:11790   */\n      calldataload\n        /* \"#utility.yul\":11761:11790   */\n      swap1\n      pop\n        /* \"#utility.yul\":11799:11829   */\n      tag_535\n        /* \"#utility.yul\":11823:11828   */\n      dup2\n        /* \"#utility.yul\":11799:11829   */\n      tag_360\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11702:11835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11841:12309   */\n    tag_125:\n        /* \"#utility.yul\":11906:11912   */\n      0x00\n        /* \"#utility.yul\":11914:11920   */\n      dup1\n        /* \"#utility.yul\":11963:11965   */\n      0x40\n        /* \"#utility.yul\":11951:11960   */\n      dup4\n        /* \"#utility.yul\":11942:11949   */\n      dup6\n        /* \"#utility.yul\":11938:11961   */\n      sub\n        /* \"#utility.yul\":11934:11966   */\n      slt\n        /* \"#utility.yul\":11931:12050   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":11969:12048   */\n      tag_538\n      tag_328\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":11931:12050   */\n    tag_537:\n        /* \"#utility.yul\":12089:12090   */\n      0x00\n        /* \"#utility.yul\":12114:12164   */\n      tag_539\n        /* \"#utility.yul\":12156:12163   */\n      dup6\n        /* \"#utility.yul\":12147:12153   */\n      dup3\n        /* \"#utility.yul\":12136:12145   */\n      dup7\n        /* \"#utility.yul\":12132:12154   */\n      add\n        /* \"#utility.yul\":12114:12164   */\n      tag_361\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":12104:12164   */\n      swap3\n      pop\n        /* \"#utility.yul\":12060:12174   */\n      pop\n        /* \"#utility.yul\":12213:12215   */\n      0x20\n        /* \"#utility.yul\":12239:12292   */\n      tag_540\n        /* \"#utility.yul\":12284:12291   */\n      dup6\n        /* \"#utility.yul\":12275:12281   */\n      dup3\n        /* \"#utility.yul\":12264:12273   */\n      dup7\n        /* \"#utility.yul\":12260:12282   */\n      add\n        /* \"#utility.yul\":12239:12292   */\n      tag_336\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12229:12292   */\n      swap2\n      pop\n        /* \"#utility.yul\":12184:12302   */\n      pop\n        /* \"#utility.yul\":11841:12309   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12315:12495   */\n    tag_362:\n        /* \"#utility.yul\":12363:12440   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12360:12361   */\n      0x00\n        /* \"#utility.yul\":12353:12441   */\n      mstore\n        /* \"#utility.yul\":12460:12464   */\n      0x22\n        /* \"#utility.yul\":12457:12458   */\n      0x04\n        /* \"#utility.yul\":12450:12465   */\n      mstore\n        /* \"#utility.yul\":12484:12488   */\n      0x24\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12474:12489   */\n      revert\n        /* \"#utility.yul\":12501:12821   */\n    tag_134:\n        /* \"#utility.yul\":12545:12551   */\n      0x00\n        /* \"#utility.yul\":12582:12583   */\n      0x02\n        /* \"#utility.yul\":12576:12580   */\n      dup3\n        /* \"#utility.yul\":12572:12584   */\n      div\n        /* \"#utility.yul\":12562:12584   */\n      swap1\n      pop\n        /* \"#utility.yul\":12629:12630   */\n      0x01\n        /* \"#utility.yul\":12623:12627   */\n      dup3\n        /* \"#utility.yul\":12619:12631   */\n      and\n        /* \"#utility.yul\":12650:12668   */\n      dup1\n        /* \"#utility.yul\":12640:12721   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":12706:12710   */\n      0x7f\n        /* \"#utility.yul\":12698:12704   */\n      dup3\n        /* \"#utility.yul\":12694:12711   */\n      and\n        /* \"#utility.yul\":12684:12711   */\n      swap2\n      pop\n        /* \"#utility.yul\":12640:12721   */\n    tag_543:\n        /* \"#utility.yul\":12768:12770   */\n      0x20\n        /* \"#utility.yul\":12760:12766   */\n      dup3\n        /* \"#utility.yul\":12757:12771   */\n      lt\n        /* \"#utility.yul\":12737:12755   */\n      dup2\n        /* \"#utility.yul\":12734:12772   */\n      sub\n        /* \"#utility.yul\":12731:12815   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":12787:12805   */\n      tag_545\n      tag_362\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12731:12815   */\n    tag_544:\n        /* \"#utility.yul\":12552:12821   */\n      pop\n        /* \"#utility.yul\":12501:12821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12827:12997   */\n    tag_363:\n        /* \"#utility.yul\":12967:12989   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12963:12964   */\n      0x00\n        /* \"#utility.yul\":12955:12961   */\n      dup3\n        /* \"#utility.yul\":12951:12965   */\n      add\n        /* \"#utility.yul\":12944:12990   */\n      mstore\n        /* \"#utility.yul\":12827:12997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13003:13369   */\n    tag_364:\n        /* \"#utility.yul\":13145:13148   */\n      0x00\n        /* \"#utility.yul\":13166:13233   */\n      tag_548\n        /* \"#utility.yul\":13230:13232   */\n      0x14\n        /* \"#utility.yul\":13225:13228   */\n      dup4\n        /* \"#utility.yul\":13166:13233   */\n      tag_323\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":13159:13233   */\n      swap2\n      pop\n        /* \"#utility.yul\":13242:13335   */\n      tag_549\n        /* \"#utility.yul\":13331:13334   */\n      dup3\n        /* \"#utility.yul\":13242:13335   */\n      tag_363\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13360:13362   */\n      0x20\n        /* \"#utility.yul\":13355:13358   */\n      dup3\n        /* \"#utility.yul\":13351:13363   */\n      add\n        /* \"#utility.yul\":13344:13363   */\n      swap1\n      pop\n        /* \"#utility.yul\":13003:13369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13375:13794   */\n    tag_148:\n        /* \"#utility.yul\":13541:13545   */\n      0x00\n        /* \"#utility.yul\":13579:13581   */\n      0x20\n        /* \"#utility.yul\":13568:13577   */\n      dup3\n        /* \"#utility.yul\":13564:13582   */\n      add\n        /* \"#utility.yul\":13556:13582   */\n      swap1\n      pop\n        /* \"#utility.yul\":13628:13637   */\n      dup2\n        /* \"#utility.yul\":13622:13626   */\n      dup2\n        /* \"#utility.yul\":13618:13638   */\n      sub\n        /* \"#utility.yul\":13614:13615   */\n      0x00\n        /* \"#utility.yul\":13603:13612   */\n      dup4\n        /* \"#utility.yul\":13599:13616   */\n      add\n        /* \"#utility.yul\":13592:13639   */\n      mstore\n        /* \"#utility.yul\":13656:13787   */\n      tag_551\n        /* \"#utility.yul\":13782:13786   */\n      dup2\n        /* \"#utility.yul\":13656:13787   */\n      tag_364\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13648:13787   */\n      swap1\n      pop\n        /* \"#utility.yul\":13375:13794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13800:13941   */\n    tag_365:\n        /* \"#utility.yul\":13849:13853   */\n      0x00\n        /* \"#utility.yul\":13872:13875   */\n      dup2\n        /* \"#utility.yul\":13864:13875   */\n      swap1\n      pop\n        /* \"#utility.yul\":13895:13898   */\n      dup2\n        /* \"#utility.yul\":13892:13893   */\n      0x00\n        /* \"#utility.yul\":13885:13899   */\n      mstore\n        /* \"#utility.yul\":13929:13933   */\n      0x20\n        /* \"#utility.yul\":13926:13927   */\n      0x00\n        /* \"#utility.yul\":13916:13934   */\n      keccak256\n        /* \"#utility.yul\":13908:13934   */\n      swap1\n      pop\n        /* \"#utility.yul\":13800:13941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13947:14040   */\n    tag_366:\n        /* \"#utility.yul\":13984:13990   */\n      0x00\n        /* \"#utility.yul\":14031:14033   */\n      0x20\n        /* \"#utility.yul\":14026:14028   */\n      0x1f\n        /* \"#utility.yul\":14019:14024   */\n      dup4\n        /* \"#utility.yul\":14015:14029   */\n      add\n        /* \"#utility.yul\":14011:14034   */\n      div\n        /* \"#utility.yul\":14001:14034   */\n      swap1\n      pop\n        /* \"#utility.yul\":13947:14040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14046:14153   */\n    tag_367:\n        /* \"#utility.yul\":14090:14098   */\n      0x00\n        /* \"#utility.yul\":14140:14145   */\n      dup3\n        /* \"#utility.yul\":14134:14138   */\n      dup3\n        /* \"#utility.yul\":14130:14146   */\n      shl\n        /* \"#utility.yul\":14109:14146   */\n      swap1\n      pop\n        /* \"#utility.yul\":14046:14153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14159:14552   */\n    tag_368:\n        /* \"#utility.yul\":14228:14234   */\n      0x00\n        /* \"#utility.yul\":14278:14279   */\n      0x08\n        /* \"#utility.yul\":14266:14276   */\n      dup4\n        /* \"#utility.yul\":14262:14280   */\n      mul\n        /* \"#utility.yul\":14301:14398   */\n      tag_556\n        /* \"#utility.yul\":14331:14397   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14320:14329   */\n      dup3\n        /* \"#utility.yul\":14301:14398   */\n      tag_367\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14419:14458   */\n      tag_557\n        /* \"#utility.yul\":14449:14457   */\n      dup7\n        /* \"#utility.yul\":14438:14447   */\n      dup4\n        /* \"#utility.yul\":14419:14458   */\n      tag_367\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14407:14458   */\n      swap6\n      pop\n        /* \"#utility.yul\":14491:14495   */\n      dup1\n        /* \"#utility.yul\":14487:14496   */\n      not\n        /* \"#utility.yul\":14480:14485   */\n      dup5\n        /* \"#utility.yul\":14476:14497   */\n      and\n        /* \"#utility.yul\":14467:14497   */\n      swap4\n      pop\n        /* \"#utility.yul\":14540:14544   */\n      dup1\n        /* \"#utility.yul\":14530:14538   */\n      dup7\n        /* \"#utility.yul\":14526:14545   */\n      and\n        /* \"#utility.yul\":14519:14524   */\n      dup5\n        /* \"#utility.yul\":14516:14546   */\n      or\n        /* \"#utility.yul\":14506:14546   */\n      swap3\n      pop\n        /* \"#utility.yul\":14235:14552   */\n      pop\n      pop\n        /* \"#utility.yul\":14159:14552   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14558:14618   */\n    tag_369:\n        /* \"#utility.yul\":14586:14589   */\n      0x00\n        /* \"#utility.yul\":14607:14612   */\n      dup2\n        /* \"#utility.yul\":14600:14612   */\n      swap1\n      pop\n        /* \"#utility.yul\":14558:14618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14624:14766   */\n    tag_370:\n        /* \"#utility.yul\":14674:14683   */\n      0x00\n        /* \"#utility.yul\":14707:14760   */\n      tag_560\n        /* \"#utility.yul\":14725:14759   */\n      tag_561\n        /* \"#utility.yul\":14734:14758   */\n      tag_562\n        /* \"#utility.yul\":14752:14757   */\n      dup5\n        /* \"#utility.yul\":14734:14758   */\n      tag_334\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":14725:14759   */\n      tag_369\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14707:14760   */\n      tag_334\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14694:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14624:14766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14772:14847   */\n    tag_371:\n        /* \"#utility.yul\":14815:14818   */\n      0x00\n        /* \"#utility.yul\":14836:14841   */\n      dup2\n        /* \"#utility.yul\":14829:14841   */\n      swap1\n      pop\n        /* \"#utility.yul\":14772:14847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14853:15122   */\n    tag_372:\n        /* \"#utility.yul\":14963:15002   */\n      tag_565\n        /* \"#utility.yul\":14994:15001   */\n      dup4\n        /* \"#utility.yul\":14963:15002   */\n      tag_370\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15024:15115   */\n      tag_566\n        /* \"#utility.yul\":15073:15114   */\n      tag_567\n        /* \"#utility.yul\":15097:15113   */\n      dup3\n        /* \"#utility.yul\":15073:15114   */\n      tag_371\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15065:15071   */\n      dup5\n        /* \"#utility.yul\":15058:15062   */\n      dup5\n        /* \"#utility.yul\":15052:15063   */\n      sload\n        /* \"#utility.yul\":15024:15115   */\n      tag_368\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15018:15022   */\n      dup3\n        /* \"#utility.yul\":15011:15116   */\n      sstore\n        /* \"#utility.yul\":14929:15122   */\n      pop\n        /* \"#utility.yul\":14853:15122   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15128:15201   */\n    tag_373:\n        /* \"#utility.yul\":15173:15176   */\n      0x00\n        /* \"#utility.yul\":15128:15201   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15207:15396   */\n    tag_374:\n        /* \"#utility.yul\":15284:15316   */\n      tag_570\n      tag_373\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15325:15390   */\n      tag_571\n        /* \"#utility.yul\":15383:15389   */\n      dup2\n        /* \"#utility.yul\":15375:15381   */\n      dup5\n        /* \"#utility.yul\":15369:15373   */\n      dup5\n        /* \"#utility.yul\":15325:15390   */\n      tag_372\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15260:15396   */\n      pop\n        /* \"#utility.yul\":15207:15396   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15402:15588   */\n    tag_375:\n        /* \"#utility.yul\":15462:15582   */\n    tag_573:\n        /* \"#utility.yul\":15479:15482   */\n      dup2\n        /* \"#utility.yul\":15472:15477   */\n      dup2\n        /* \"#utility.yul\":15469:15483   */\n      lt\n        /* \"#utility.yul\":15462:15582   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":15533:15572   */\n      tag_576\n        /* \"#utility.yul\":15570:15571   */\n      0x00\n        /* \"#utility.yul\":15563:15568   */\n      dup3\n        /* \"#utility.yul\":15533:15572   */\n      tag_374\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":15506:15507   */\n      0x01\n        /* \"#utility.yul\":15499:15504   */\n      dup2\n        /* \"#utility.yul\":15495:15508   */\n      add\n        /* \"#utility.yul\":15486:15508   */\n      swap1\n      pop\n        /* \"#utility.yul\":15462:15582   */\n      jump(tag_573)\n    tag_575:\n        /* \"#utility.yul\":15402:15588   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15594:16137   */\n    tag_376:\n        /* \"#utility.yul\":15695:15697   */\n      0x1f\n        /* \"#utility.yul\":15690:15693   */\n      dup3\n        /* \"#utility.yul\":15687:15698   */\n      gt\n        /* \"#utility.yul\":15684:16130   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":15729:15767   */\n      tag_579\n        /* \"#utility.yul\":15761:15766   */\n      dup2\n        /* \"#utility.yul\":15729:15767   */\n      tag_365\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":15813:15842   */\n      tag_580\n        /* \"#utility.yul\":15831:15841   */\n      dup5\n        /* \"#utility.yul\":15813:15842   */\n      tag_366\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":15803:15811   */\n      dup2\n        /* \"#utility.yul\":15799:15843   */\n      add\n        /* \"#utility.yul\":15996:15998   */\n      0x20\n        /* \"#utility.yul\":15984:15994   */\n      dup6\n        /* \"#utility.yul\":15981:15999   */\n      lt\n        /* \"#utility.yul\":15978:16027   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":16017:16025   */\n      dup2\n        /* \"#utility.yul\":16002:16025   */\n      swap1\n      pop\n        /* \"#utility.yul\":15978:16027   */\n    tag_581:\n        /* \"#utility.yul\":16040:16120   */\n      tag_582\n        /* \"#utility.yul\":16096:16118   */\n      tag_583\n        /* \"#utility.yul\":16114:16117   */\n      dup6\n        /* \"#utility.yul\":16096:16118   */\n      tag_366\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16086:16094   */\n      dup4\n        /* \"#utility.yul\":16082:16119   */\n      add\n        /* \"#utility.yul\":16069:16080   */\n      dup3\n        /* \"#utility.yul\":16040:16120   */\n      tag_375\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":15699:16130   */\n      pop\n      pop\n        /* \"#utility.yul\":15684:16130   */\n    tag_578:\n        /* \"#utility.yul\":15594:16137   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16143:16260   */\n    tag_377:\n        /* \"#utility.yul\":16197:16205   */\n      0x00\n        /* \"#utility.yul\":16247:16252   */\n      dup3\n        /* \"#utility.yul\":16241:16245   */\n      dup3\n        /* \"#utility.yul\":16237:16253   */\n      shr\n        /* \"#utility.yul\":16216:16253   */\n      swap1\n      pop\n        /* \"#utility.yul\":16143:16260   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16266:16435   */\n    tag_378:\n        /* \"#utility.yul\":16310:16316   */\n      0x00\n        /* \"#utility.yul\":16343:16394   */\n      tag_586\n        /* \"#utility.yul\":16391:16392   */\n      0x00\n        /* \"#utility.yul\":16387:16393   */\n      not\n        /* \"#utility.yul\":16379:16384   */\n      dup5\n        /* \"#utility.yul\":16376:16377   */\n      0x08\n        /* \"#utility.yul\":16372:16385   */\n      mul\n        /* \"#utility.yul\":16343:16394   */\n      tag_377\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16339:16395   */\n      not\n        /* \"#utility.yul\":16424:16428   */\n      dup1\n        /* \"#utility.yul\":16418:16422   */\n      dup4\n        /* \"#utility.yul\":16414:16429   */\n      and\n        /* \"#utility.yul\":16404:16429   */\n      swap2\n      pop\n        /* \"#utility.yul\":16317:16435   */\n      pop\n        /* \"#utility.yul\":16266:16435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16440:16735   */\n    tag_379:\n        /* \"#utility.yul\":16516:16520   */\n      0x00\n        /* \"#utility.yul\":16662:16691   */\n      tag_588\n        /* \"#utility.yul\":16687:16690   */\n      dup4\n        /* \"#utility.yul\":16681:16685   */\n      dup4\n        /* \"#utility.yul\":16662:16691   */\n      tag_378\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":16654:16691   */\n      swap2\n      pop\n        /* \"#utility.yul\":16724:16727   */\n      dup3\n        /* \"#utility.yul\":16721:16722   */\n      0x02\n        /* \"#utility.yul\":16717:16728   */\n      mul\n        /* \"#utility.yul\":16711:16715   */\n      dup3\n        /* \"#utility.yul\":16708:16729   */\n      or\n        /* \"#utility.yul\":16700:16729   */\n      swap1\n      pop\n        /* \"#utility.yul\":16440:16735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16740:18135   */\n    tag_180:\n        /* \"#utility.yul\":16857:16894   */\n      tag_590\n        /* \"#utility.yul\":16890:16893   */\n      dup3\n        /* \"#utility.yul\":16857:16894   */\n      tag_322\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16959:16977   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16951:16957   */\n      dup2\n        /* \"#utility.yul\":16948:16978   */\n      gt\n        /* \"#utility.yul\":16945:17001   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":16981:16999   */\n      tag_592\n      tag_234\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16945:17001   */\n    tag_591:\n        /* \"#utility.yul\":17025:17063   */\n      tag_593\n        /* \"#utility.yul\":17057:17061   */\n      dup3\n        /* \"#utility.yul\":17051:17062   */\n      sload\n        /* \"#utility.yul\":17025:17063   */\n      tag_134\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17110:17177   */\n      tag_594\n        /* \"#utility.yul\":17170:17176   */\n      dup3\n        /* \"#utility.yul\":17162:17168   */\n      dup3\n        /* \"#utility.yul\":17156:17160   */\n      dup6\n        /* \"#utility.yul\":17110:17177   */\n      tag_376\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17204:17205   */\n      0x00\n        /* \"#utility.yul\":17228:17232   */\n      0x20\n        /* \"#utility.yul\":17215:17232   */\n      swap1\n      pop\n        /* \"#utility.yul\":17260:17262   */\n      0x1f\n        /* \"#utility.yul\":17252:17258   */\n      dup4\n        /* \"#utility.yul\":17249:17263   */\n      gt\n        /* \"#utility.yul\":17277:17278   */\n      0x01\n        /* \"#utility.yul\":17272:17890   */\n      dup2\n      eq\n      tag_596\n      jumpi\n        /* \"#utility.yul\":17934:17935   */\n      0x00\n        /* \"#utility.yul\":17951:17957   */\n      dup5\n        /* \"#utility.yul\":17948:18025   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":18000:18009   */\n      dup3\n        /* \"#utility.yul\":17995:17998   */\n      dup8\n        /* \"#utility.yul\":17991:18010   */\n      add\n        /* \"#utility.yul\":17985:18011   */\n      mload\n        /* \"#utility.yul\":17976:18011   */\n      swap1\n      pop\n        /* \"#utility.yul\":17948:18025   */\n    tag_597:\n        /* \"#utility.yul\":18051:18118   */\n      tag_598\n        /* \"#utility.yul\":18111:18117   */\n      dup6\n        /* \"#utility.yul\":18104:18109   */\n      dup3\n        /* \"#utility.yul\":18051:18118   */\n      tag_379\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":18045:18049   */\n      dup7\n        /* \"#utility.yul\":18038:18119   */\n      sstore\n        /* \"#utility.yul\":17907:18129   */\n      pop\n        /* \"#utility.yul\":17242:18129   */\n      jump(tag_595)\n        /* \"#utility.yul\":17272:17890   */\n    tag_596:\n        /* \"#utility.yul\":17324:17328   */\n      0x1f\n        /* \"#utility.yul\":17320:17329   */\n      not\n        /* \"#utility.yul\":17312:17318   */\n      dup5\n        /* \"#utility.yul\":17308:17330   */\n      and\n        /* \"#utility.yul\":17358:17395   */\n      tag_599\n        /* \"#utility.yul\":17390:17394   */\n      dup7\n        /* \"#utility.yul\":17358:17395   */\n      tag_365\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":17417:17418   */\n      0x00\n        /* \"#utility.yul\":17431:17639   */\n    tag_600:\n        /* \"#utility.yul\":17445:17452   */\n      dup3\n        /* \"#utility.yul\":17442:17443   */\n      dup2\n        /* \"#utility.yul\":17439:17453   */\n      lt\n        /* \"#utility.yul\":17431:17639   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":17524:17533   */\n      dup5\n        /* \"#utility.yul\":17519:17522   */\n      dup10\n        /* \"#utility.yul\":17515:17534   */\n      add\n        /* \"#utility.yul\":17509:17535   */\n      mload\n        /* \"#utility.yul\":17501:17507   */\n      dup3\n        /* \"#utility.yul\":17494:17536   */\n      sstore\n        /* \"#utility.yul\":17575:17576   */\n      0x01\n        /* \"#utility.yul\":17567:17573   */\n      dup3\n        /* \"#utility.yul\":17563:17577   */\n      add\n        /* \"#utility.yul\":17553:17577   */\n      swap2\n      pop\n        /* \"#utility.yul\":17622:17624   */\n      0x20\n        /* \"#utility.yul\":17611:17620   */\n      dup6\n        /* \"#utility.yul\":17607:17625   */\n      add\n        /* \"#utility.yul\":17594:17625   */\n      swap5\n      pop\n        /* \"#utility.yul\":17468:17472   */\n      0x20\n        /* \"#utility.yul\":17465:17466   */\n      dup2\n        /* \"#utility.yul\":17461:17473   */\n      add\n        /* \"#utility.yul\":17456:17473   */\n      swap1\n      pop\n        /* \"#utility.yul\":17431:17639   */\n      jump(tag_600)\n    tag_602:\n        /* \"#utility.yul\":17667:17673   */\n      dup7\n        /* \"#utility.yul\":17658:17665   */\n      dup4\n        /* \"#utility.yul\":17655:17674   */\n      lt\n        /* \"#utility.yul\":17652:17831   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":17725:17734   */\n      dup5\n        /* \"#utility.yul\":17720:17723   */\n      dup10\n        /* \"#utility.yul\":17716:17735   */\n      add\n        /* \"#utility.yul\":17710:17736   */\n      mload\n        /* \"#utility.yul\":17768:17816   */\n      tag_604\n        /* \"#utility.yul\":17810:17814   */\n      0x1f\n        /* \"#utility.yul\":17802:17808   */\n      dup10\n        /* \"#utility.yul\":17798:17815   */\n      and\n        /* \"#utility.yul\":17787:17796   */\n      dup3\n        /* \"#utility.yul\":17768:17816   */\n      tag_378\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":17760:17766   */\n      dup4\n        /* \"#utility.yul\":17753:17817   */\n      sstore\n        /* \"#utility.yul\":17675:17831   */\n      pop\n        /* \"#utility.yul\":17652:17831   */\n    tag_603:\n        /* \"#utility.yul\":17877:17878   */\n      0x01\n        /* \"#utility.yul\":17873:17874   */\n      0x02\n        /* \"#utility.yul\":17865:17871   */\n      dup9\n        /* \"#utility.yul\":17861:17875   */\n      mul\n        /* \"#utility.yul\":17857:17879   */\n      add\n        /* \"#utility.yul\":17851:17855   */\n      dup9\n        /* \"#utility.yul\":17844:17880   */\n      sstore\n        /* \"#utility.yul\":17279:17890   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17242:18129   */\n    tag_595:\n      pop\n        /* \"#utility.yul\":16832:18135   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16740:18135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18141:18321   */\n    tag_380:\n        /* \"#utility.yul\":18189:18266   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18186:18187   */\n      0x00\n        /* \"#utility.yul\":18179:18267   */\n      mstore\n        /* \"#utility.yul\":18286:18290   */\n      0x11\n        /* \"#utility.yul\":18283:18284   */\n      0x04\n        /* \"#utility.yul\":18276:18291   */\n      mstore\n        /* \"#utility.yul\":18310:18314   */\n      0x24\n        /* \"#utility.yul\":18307:18308   */\n      0x00\n        /* \"#utility.yul\":18300:18315   */\n      revert\n        /* \"#utility.yul\":18327:18494   */\n    tag_182:\n        /* \"#utility.yul\":18364:18367   */\n      0x00\n        /* \"#utility.yul\":18387:18409   */\n      tag_607\n        /* \"#utility.yul\":18403:18408   */\n      dup3\n        /* \"#utility.yul\":18387:18409   */\n      tag_340\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":18378:18409   */\n      swap2\n      pop\n        /* \"#utility.yul\":18431:18435   */\n      0xff\n        /* \"#utility.yul\":18424:18429   */\n      dup3\n        /* \"#utility.yul\":18421:18436   */\n      sub\n        /* \"#utility.yul\":18418:18459   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":18439:18457   */\n      tag_609\n      tag_380\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":18418:18459   */\n    tag_608:\n        /* \"#utility.yul\":18486:18487   */\n      0x01\n        /* \"#utility.yul\":18479:18484   */\n      dup3\n        /* \"#utility.yul\":18475:18488   */\n      add\n        /* \"#utility.yul\":18468:18488   */\n      swap1\n      pop\n        /* \"#utility.yul\":18327:18494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18500:18669   */\n    tag_381:\n        /* \"#utility.yul\":18640:18661   */\n      0x496e73756666696369656e7420616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":18636:18637   */\n      0x00\n        /* \"#utility.yul\":18628:18634   */\n      dup3\n        /* \"#utility.yul\":18624:18638   */\n      add\n        /* \"#utility.yul\":18617:18662   */\n      mstore\n        /* \"#utility.yul\":18500:18669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18675:19041   */\n    tag_382:\n        /* \"#utility.yul\":18817:18820   */\n      0x00\n        /* \"#utility.yul\":18838:18905   */\n      tag_612\n        /* \"#utility.yul\":18902:18904   */\n      0x13\n        /* \"#utility.yul\":18897:18900   */\n      dup4\n        /* \"#utility.yul\":18838:18905   */\n      tag_323\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":18831:18905   */\n      swap2\n      pop\n        /* \"#utility.yul\":18914:19007   */\n      tag_613\n        /* \"#utility.yul\":19003:19006   */\n      dup3\n        /* \"#utility.yul\":18914:19007   */\n      tag_381\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":19032:19034   */\n      0x20\n        /* \"#utility.yul\":19027:19030   */\n      dup3\n        /* \"#utility.yul\":19023:19035   */\n      add\n        /* \"#utility.yul\":19016:19035   */\n      swap1\n      pop\n        /* \"#utility.yul\":18675:19041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19047:19466   */\n    tag_197:\n        /* \"#utility.yul\":19213:19217   */\n      0x00\n        /* \"#utility.yul\":19251:19253   */\n      0x20\n        /* \"#utility.yul\":19240:19249   */\n      dup3\n        /* \"#utility.yul\":19236:19254   */\n      add\n        /* \"#utility.yul\":19228:19254   */\n      swap1\n      pop\n        /* \"#utility.yul\":19300:19309   */\n      dup2\n        /* \"#utility.yul\":19294:19298   */\n      dup2\n        /* \"#utility.yul\":19290:19310   */\n      sub\n        /* \"#utility.yul\":19286:19287   */\n      0x00\n        /* \"#utility.yul\":19275:19284   */\n      dup4\n        /* \"#utility.yul\":19271:19288   */\n      add\n        /* \"#utility.yul\":19264:19311   */\n      mstore\n        /* \"#utility.yul\":19328:19459   */\n      tag_615\n        /* \"#utility.yul\":19454:19458   */\n      dup2\n        /* \"#utility.yul\":19328:19459   */\n      tag_382\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":19320:19459   */\n      swap1\n      pop\n        /* \"#utility.yul\":19047:19466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19472:19636   */\n    tag_383:\n        /* \"#utility.yul\":19612:19628   */\n      0x4974656d206e6f7420666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":19608:19609   */\n      0x00\n        /* \"#utility.yul\":19600:19606   */\n      dup3\n        /* \"#utility.yul\":19596:19610   */\n      add\n        /* \"#utility.yul\":19589:19629   */\n      mstore\n        /* \"#utility.yul\":19472:19636   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19642:20008   */\n    tag_384:\n        /* \"#utility.yul\":19784:19787   */\n      0x00\n        /* \"#utility.yul\":19805:19872   */\n      tag_618\n        /* \"#utility.yul\":19869:19871   */\n      0x0e\n        /* \"#utility.yul\":19864:19867   */\n      dup4\n        /* \"#utility.yul\":19805:19872   */\n      tag_323\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19798:19872   */\n      swap2\n      pop\n        /* \"#utility.yul\":19881:19974   */\n      tag_619\n        /* \"#utility.yul\":19970:19973   */\n      dup3\n        /* \"#utility.yul\":19881:19974   */\n      tag_383\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19999:20001   */\n      0x20\n        /* \"#utility.yul\":19994:19997   */\n      dup3\n        /* \"#utility.yul\":19990:20002   */\n      add\n        /* \"#utility.yul\":19983:20002   */\n      swap1\n      pop\n        /* \"#utility.yul\":19642:20008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20014:20433   */\n    tag_213:\n        /* \"#utility.yul\":20180:20184   */\n      0x00\n        /* \"#utility.yul\":20218:20220   */\n      0x20\n        /* \"#utility.yul\":20207:20216   */\n      dup3\n        /* \"#utility.yul\":20203:20221   */\n      add\n        /* \"#utility.yul\":20195:20221   */\n      swap1\n      pop\n        /* \"#utility.yul\":20267:20276   */\n      dup2\n        /* \"#utility.yul\":20261:20265   */\n      dup2\n        /* \"#utility.yul\":20257:20277   */\n      sub\n        /* \"#utility.yul\":20253:20254   */\n      0x00\n        /* \"#utility.yul\":20242:20251   */\n      dup4\n        /* \"#utility.yul\":20238:20255   */\n      add\n        /* \"#utility.yul\":20231:20278   */\n      mstore\n        /* \"#utility.yul\":20295:20426   */\n      tag_621\n        /* \"#utility.yul\":20421:20425   */\n      dup2\n        /* \"#utility.yul\":20295:20426   */\n      tag_384\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":20287:20426   */\n      swap1\n      pop\n        /* \"#utility.yul\":20014:20433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20439:20588   */\n    tag_385:\n        /* \"#utility.yul\":20488:20494   */\n      0x00\n        /* \"#utility.yul\":20522:20527   */\n      dup2\n        /* \"#utility.yul\":20516:20528   */\n      sload\n        /* \"#utility.yul\":20506:20528   */\n      swap1\n      pop\n        /* \"#utility.yul\":20548:20581   */\n      tag_623\n        /* \"#utility.yul\":20574:20580   */\n      dup2\n        /* \"#utility.yul\":20548:20581   */\n      tag_134\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":20538:20581   */\n      swap1\n      pop\n        /* \"#utility.yul\":20439:20588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20594:22045   */\n    tag_220:\n        /* \"#utility.yul\":20705:20708   */\n      dup2\n        /* \"#utility.yul\":20699:20703   */\n      dup2\n        /* \"#utility.yul\":20696:20709   */\n      sub\n        /* \"#utility.yul\":20693:20719   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":20712:20717   */\n      pop\n      pop\n      jump(tag_624)\n        /* \"#utility.yul\":20693:20719   */\n    tag_625:\n        /* \"#utility.yul\":20743:20777   */\n      tag_626\n        /* \"#utility.yul\":20773:20776   */\n      dup3\n        /* \"#utility.yul\":20743:20777   */\n      tag_385\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20842:20860   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20834:20840   */\n      dup2\n        /* \"#utility.yul\":20831:20861   */\n      gt\n        /* \"#utility.yul\":20828:20884   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":20864:20882   */\n      tag_628\n      tag_234\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":20828:20884   */\n    tag_627:\n        /* \"#utility.yul\":20908:20946   */\n      tag_629\n        /* \"#utility.yul\":20940:20944   */\n      dup3\n        /* \"#utility.yul\":20934:20945   */\n      sload\n        /* \"#utility.yul\":20908:20946   */\n      tag_134\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":20993:21060   */\n      tag_630\n        /* \"#utility.yul\":21053:21059   */\n      dup3\n        /* \"#utility.yul\":21045:21051   */\n      dup3\n        /* \"#utility.yul\":21039:21043   */\n      dup6\n        /* \"#utility.yul\":20993:21060   */\n      tag_376\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":21087:21088   */\n      0x00\n        /* \"#utility.yul\":21116:21118   */\n      0x1f\n        /* \"#utility.yul\":21108:21114   */\n      dup4\n        /* \"#utility.yul\":21105:21119   */\n      gt\n        /* \"#utility.yul\":21133:21134   */\n      0x01\n        /* \"#utility.yul\":21128:21800   */\n      dup2\n      eq\n      tag_632\n      jumpi\n        /* \"#utility.yul\":21844:21845   */\n      0x00\n        /* \"#utility.yul\":21861:21867   */\n      dup5\n        /* \"#utility.yul\":21858:21935   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":21910:21919   */\n      dup3\n        /* \"#utility.yul\":21905:21908   */\n      dup8\n        /* \"#utility.yul\":21901:21920   */\n      add\n        /* \"#utility.yul\":21895:21921   */\n      sload\n        /* \"#utility.yul\":21886:21921   */\n      swap1\n      pop\n        /* \"#utility.yul\":21858:21935   */\n    tag_633:\n        /* \"#utility.yul\":21961:22028   */\n      tag_634\n        /* \"#utility.yul\":22021:22027   */\n      dup6\n        /* \"#utility.yul\":22014:22019   */\n      dup3\n        /* \"#utility.yul\":21961:22028   */\n      tag_379\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":21955:21959   */\n      dup7\n        /* \"#utility.yul\":21948:22029   */\n      sstore\n        /* \"#utility.yul\":21817:22039   */\n      pop\n        /* \"#utility.yul\":21098:22039   */\n      jump(tag_631)\n        /* \"#utility.yul\":21128:21800   */\n    tag_632:\n        /* \"#utility.yul\":21180:21184   */\n      0x1f\n        /* \"#utility.yul\":21176:21185   */\n      not\n        /* \"#utility.yul\":21168:21174   */\n      dup5\n        /* \"#utility.yul\":21164:21186   */\n      and\n        /* \"#utility.yul\":21206:21242   */\n      tag_635\n        /* \"#utility.yul\":21238:21241   */\n      dup8\n        /* \"#utility.yul\":21206:21242   */\n      tag_365\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":21199:21242   */\n      swap7\n      pop\n        /* \"#utility.yul\":21269:21306   */\n      tag_636\n        /* \"#utility.yul\":21301:21305   */\n      dup7\n        /* \"#utility.yul\":21269:21306   */\n      tag_365\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":21328:21329   */\n      0x00\n        /* \"#utility.yul\":21342:21549   */\n    tag_637:\n        /* \"#utility.yul\":21356:21363   */\n      dup3\n        /* \"#utility.yul\":21353:21354   */\n      dup2\n        /* \"#utility.yul\":21350:21364   */\n      lt\n        /* \"#utility.yul\":21342:21549   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":21435:21444   */\n      dup5\n        /* \"#utility.yul\":21430:21433   */\n      dup10\n        /* \"#utility.yul\":21426:21445   */\n      add\n        /* \"#utility.yul\":21420:21446   */\n      sload\n        /* \"#utility.yul\":21412:21418   */\n      dup3\n        /* \"#utility.yul\":21405:21447   */\n      sstore\n        /* \"#utility.yul\":21486:21487   */\n      0x01\n        /* \"#utility.yul\":21478:21484   */\n      dup3\n        /* \"#utility.yul\":21474:21488   */\n      add\n        /* \"#utility.yul\":21464:21488   */\n      swap2\n      pop\n        /* \"#utility.yul\":21533:21534   */\n      0x01\n        /* \"#utility.yul\":21522:21531   */\n      dup6\n        /* \"#utility.yul\":21518:21535   */\n      add\n        /* \"#utility.yul\":21505:21535   */\n      swap5\n      pop\n        /* \"#utility.yul\":21379:21383   */\n      0x20\n        /* \"#utility.yul\":21376:21377   */\n      dup2\n        /* \"#utility.yul\":21372:21384   */\n      add\n        /* \"#utility.yul\":21367:21384   */\n      swap1\n      pop\n        /* \"#utility.yul\":21342:21549   */\n      jump(tag_637)\n    tag_639:\n        /* \"#utility.yul\":21577:21583   */\n      dup7\n        /* \"#utility.yul\":21568:21575   */\n      dup4\n        /* \"#utility.yul\":21565:21584   */\n      lt\n        /* \"#utility.yul\":21562:21741   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":21635:21644   */\n      dup5\n        /* \"#utility.yul\":21630:21633   */\n      dup10\n        /* \"#utility.yul\":21626:21645   */\n      add\n        /* \"#utility.yul\":21620:21646   */\n      sload\n        /* \"#utility.yul\":21678:21726   */\n      tag_641\n        /* \"#utility.yul\":21720:21724   */\n      0x1f\n        /* \"#utility.yul\":21712:21718   */\n      dup10\n        /* \"#utility.yul\":21708:21725   */\n      and\n        /* \"#utility.yul\":21697:21706   */\n      dup3\n        /* \"#utility.yul\":21678:21726   */\n      tag_378\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":21670:21676   */\n      dup4\n        /* \"#utility.yul\":21663:21727   */\n      sstore\n        /* \"#utility.yul\":21585:21741   */\n      pop\n        /* \"#utility.yul\":21562:21741   */\n    tag_640:\n        /* \"#utility.yul\":21787:21788   */\n      0x01\n        /* \"#utility.yul\":21783:21784   */\n      0x02\n        /* \"#utility.yul\":21775:21781   */\n      dup9\n        /* \"#utility.yul\":21771:21785   */\n      mul\n        /* \"#utility.yul\":21767:21789   */\n      add\n        /* \"#utility.yul\":21761:21765   */\n      dup9\n        /* \"#utility.yul\":21754:21790   */\n      sstore\n        /* \"#utility.yul\":21135:21800   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21098:22039   */\n    tag_631:\n      pop\n        /* \"#utility.yul\":20683:22045   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20594:22045   */\n      pop\n      pop\n    tag_624:\n      jump\t// out\n        /* \"#utility.yul\":22075:22906   */\n    tag_386:\n        /* \"#utility.yul\":22160:22163   */\n      0x00\n        /* \"#utility.yul\":22197:22202   */\n      dup2\n        /* \"#utility.yul\":22191:22203   */\n      sload\n        /* \"#utility.yul\":22226:22262   */\n      tag_643\n        /* \"#utility.yul\":22252:22261   */\n      dup2\n        /* \"#utility.yul\":22226:22262   */\n      tag_134\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":22278:22349   */\n      tag_644\n        /* \"#utility.yul\":22342:22348   */\n      dup2\n        /* \"#utility.yul\":22337:22340   */\n      dup7\n        /* \"#utility.yul\":22278:22349   */\n      tag_323\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":22271:22349   */\n      swap5\n      pop\n        /* \"#utility.yul\":22380:22381   */\n      0x01\n        /* \"#utility.yul\":22369:22378   */\n      dup3\n        /* \"#utility.yul\":22365:22382   */\n      and\n        /* \"#utility.yul\":22396:22397   */\n      0x00\n        /* \"#utility.yul\":22391:22555   */\n      dup2\n      eq\n      tag_646\n      jumpi\n        /* \"#utility.yul\":22569:22570   */\n      0x01\n        /* \"#utility.yul\":22564:22900   */\n      dup2\n      eq\n      tag_647\n      jumpi\n        /* \"#utility.yul\":22358:22900   */\n      jump(tag_645)\n        /* \"#utility.yul\":22391:22555   */\n    tag_646:\n        /* \"#utility.yul\":22475:22479   */\n      0xff\n        /* \"#utility.yul\":22471:22480   */\n      not\n        /* \"#utility.yul\":22460:22469   */\n      dup4\n        /* \"#utility.yul\":22456:22481   */\n      and\n        /* \"#utility.yul\":22451:22454   */\n      dup7\n        /* \"#utility.yul\":22444:22482   */\n      mstore\n        /* \"#utility.yul\":22535:22541   */\n      dup2\n        /* \"#utility.yul\":22528:22542   */\n      iszero\n        /* \"#utility.yul\":22521:22543   */\n      iszero\n        /* \"#utility.yul\":22515:22519   */\n      0x20\n        /* \"#utility.yul\":22511:22544   */\n      mul\n        /* \"#utility.yul\":22506:22509   */\n      dup7\n        /* \"#utility.yul\":22502:22545   */\n      add\n        /* \"#utility.yul\":22495:22545   */\n      swap4\n      pop\n        /* \"#utility.yul\":22391:22555   */\n      jump(tag_645)\n        /* \"#utility.yul\":22564:22900   */\n    tag_647:\n        /* \"#utility.yul\":22631:22669   */\n      tag_648\n        /* \"#utility.yul\":22663:22668   */\n      dup6\n        /* \"#utility.yul\":22631:22669   */\n      tag_365\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":22691:22692   */\n      0x00\n        /* \"#utility.yul\":22705:22859   */\n    tag_649:\n        /* \"#utility.yul\":22719:22725   */\n      dup4\n        /* \"#utility.yul\":22716:22717   */\n      dup2\n        /* \"#utility.yul\":22713:22726   */\n      lt\n        /* \"#utility.yul\":22705:22859   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":22793:22800   */\n      dup2\n        /* \"#utility.yul\":22787:22801   */\n      sload\n        /* \"#utility.yul\":22783:22784   */\n      dup2\n        /* \"#utility.yul\":22778:22781   */\n      dup10\n        /* \"#utility.yul\":22774:22785   */\n      add\n        /* \"#utility.yul\":22767:22802   */\n      mstore\n        /* \"#utility.yul\":22843:22844   */\n      0x01\n        /* \"#utility.yul\":22834:22841   */\n      dup3\n        /* \"#utility.yul\":22830:22845   */\n      add\n        /* \"#utility.yul\":22819:22845   */\n      swap2\n      pop\n        /* \"#utility.yul\":22741:22745   */\n      0x20\n        /* \"#utility.yul\":22738:22739   */\n      dup2\n        /* \"#utility.yul\":22734:22746   */\n      add\n        /* \"#utility.yul\":22729:22746   */\n      swap1\n      pop\n        /* \"#utility.yul\":22705:22859   */\n      jump(tag_649)\n    tag_651:\n        /* \"#utility.yul\":22888:22889   */\n      dup1\n        /* \"#utility.yul\":22883:22886   */\n      dup9\n        /* \"#utility.yul\":22879:22890   */\n      add\n        /* \"#utility.yul\":22872:22890   */\n      swap6\n      pop\n        /* \"#utility.yul\":22571:22900   */\n      pop\n      pop\n        /* \"#utility.yul\":22358:22900   */\n    tag_645:\n      pop\n        /* \"#utility.yul\":22164:22906   */\n      pop\n      pop\n        /* \"#utility.yul\":22075:22906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22912:23431   */\n    tag_222:\n        /* \"#utility.yul\":23074:23078   */\n      0x00\n        /* \"#utility.yul\":23112:23114   */\n      0x60\n        /* \"#utility.yul\":23101:23110   */\n      dup3\n        /* \"#utility.yul\":23097:23115   */\n      add\n        /* \"#utility.yul\":23089:23115   */\n      swap1\n      pop\n        /* \"#utility.yul\":23125:23192   */\n      tag_653\n        /* \"#utility.yul\":23189:23190   */\n      0x00\n        /* \"#utility.yul\":23178:23187   */\n      dup4\n        /* \"#utility.yul\":23174:23191   */\n      add\n        /* \"#utility.yul\":23165:23171   */\n      dup7\n        /* \"#utility.yul\":23125:23192   */\n      tag_341\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":23239:23248   */\n      dup2\n        /* \"#utility.yul\":23233:23237   */\n      dup2\n        /* \"#utility.yul\":23229:23249   */\n      sub\n        /* \"#utility.yul\":23224:23226   */\n      0x20\n        /* \"#utility.yul\":23213:23222   */\n      dup4\n        /* \"#utility.yul\":23209:23227   */\n      add\n        /* \"#utility.yul\":23202:23250   */\n      mstore\n        /* \"#utility.yul\":23267:23342   */\n      tag_654\n        /* \"#utility.yul\":23337:23341   */\n      dup2\n        /* \"#utility.yul\":23328:23334   */\n      dup6\n        /* \"#utility.yul\":23267:23342   */\n      tag_386\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":23259:23342   */\n      swap1\n      pop\n        /* \"#utility.yul\":23352:23424   */\n      tag_655\n        /* \"#utility.yul\":23420:23422   */\n      0x40\n        /* \"#utility.yul\":23409:23418   */\n      dup4\n        /* \"#utility.yul\":23405:23423   */\n      add\n        /* \"#utility.yul\":23396:23402   */\n      dup5\n        /* \"#utility.yul\":23352:23424   */\n      tag_339\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":22912:23431   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23437:23617   */\n    tag_241:\n        /* \"#utility.yul\":23485:23562   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23482:23483   */\n      0x00\n        /* \"#utility.yul\":23475:23563   */\n      mstore\n        /* \"#utility.yul\":23582:23586   */\n      0x32\n        /* \"#utility.yul\":23579:23580   */\n      0x04\n        /* \"#utility.yul\":23572:23587   */\n      mstore\n        /* \"#utility.yul\":23606:23610   */\n      0x24\n        /* \"#utility.yul\":23603:23604   */\n      0x00\n        /* \"#utility.yul\":23596:23611   */\n      revert\n        /* \"#utility.yul\":23623:23702   */\n    tag_387:\n        /* \"#utility.yul\":23662:23669   */\n      0x00\n        /* \"#utility.yul\":23691:23696   */\n      dup2\n        /* \"#utility.yul\":23680:23696   */\n      swap1\n      pop\n        /* \"#utility.yul\":23623:23702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23708:23865   */\n    tag_388:\n        /* \"#utility.yul\":23813:23858   */\n      tag_659\n        /* \"#utility.yul\":23833:23857   */\n      tag_660\n        /* \"#utility.yul\":23851:23856   */\n      dup3\n        /* \"#utility.yul\":23833:23857   */\n      tag_334\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":23813:23858   */\n      tag_387\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":23808:23811   */\n      dup3\n        /* \"#utility.yul\":23801:23859   */\n      mstore\n        /* \"#utility.yul\":23708:23865   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23871:23965   */\n    tag_389:\n        /* \"#utility.yul\":23904:23912   */\n      0x00\n        /* \"#utility.yul\":23952:23957   */\n      dup2\n        /* \"#utility.yul\":23948:23950   */\n      0x60\n        /* \"#utility.yul\":23944:23958   */\n      shl\n        /* \"#utility.yul\":23923:23958   */\n      swap1\n      pop\n        /* \"#utility.yul\":23871:23965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23971:24065   */\n    tag_390:\n        /* \"#utility.yul\":24010:24017   */\n      0x00\n        /* \"#utility.yul\":24039:24059   */\n      tag_663\n        /* \"#utility.yul\":24053:24058   */\n      dup3\n        /* \"#utility.yul\":24039:24059   */\n      tag_389\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":24028:24059   */\n      swap1\n      pop\n        /* \"#utility.yul\":23971:24065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24071:24171   */\n    tag_391:\n        /* \"#utility.yul\":24110:24117   */\n      0x00\n        /* \"#utility.yul\":24139:24165   */\n      tag_665\n        /* \"#utility.yul\":24159:24164   */\n      dup3\n        /* \"#utility.yul\":24139:24165   */\n      tag_390\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":24128:24165   */\n      swap1\n      pop\n        /* \"#utility.yul\":24071:24171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24177:24334   */\n    tag_392:\n        /* \"#utility.yul\":24282:24327   */\n      tag_667\n        /* \"#utility.yul\":24302:24326   */\n      tag_668\n        /* \"#utility.yul\":24320:24325   */\n      dup3\n        /* \"#utility.yul\":24302:24326   */\n      tag_331\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":24282:24327   */\n      tag_391\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":24277:24280   */\n      dup3\n        /* \"#utility.yul\":24270:24328   */\n      mstore\n        /* \"#utility.yul\":24177:24334   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24340:24737   */\n    tag_247:\n        /* \"#utility.yul\":24480:24483   */\n      0x00\n        /* \"#utility.yul\":24495:24570   */\n      tag_670\n        /* \"#utility.yul\":24566:24569   */\n      dup3\n        /* \"#utility.yul\":24557:24563   */\n      dup6\n        /* \"#utility.yul\":24495:24570   */\n      tag_388\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":24595:24597   */\n      0x20\n        /* \"#utility.yul\":24590:24593   */\n      dup3\n        /* \"#utility.yul\":24586:24598   */\n      add\n        /* \"#utility.yul\":24579:24598   */\n      swap2\n      pop\n        /* \"#utility.yul\":24608:24683   */\n      tag_671\n        /* \"#utility.yul\":24679:24682   */\n      dup3\n        /* \"#utility.yul\":24670:24676   */\n      dup5\n        /* \"#utility.yul\":24608:24683   */\n      tag_392\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":24708:24710   */\n      0x14\n        /* \"#utility.yul\":24703:24706   */\n      dup3\n        /* \"#utility.yul\":24699:24711   */\n      add\n        /* \"#utility.yul\":24692:24711   */\n      swap2\n      pop\n        /* \"#utility.yul\":24728:24731   */\n      dup2\n        /* \"#utility.yul\":24721:24731   */\n      swap1\n      pop\n        /* \"#utility.yul\":24340:24737   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24743:24923   */\n    tag_393:\n        /* \"#utility.yul\":24791:24868   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24788:24789   */\n      0x00\n        /* \"#utility.yul\":24781:24869   */\n      mstore\n        /* \"#utility.yul\":24888:24892   */\n      0x12\n        /* \"#utility.yul\":24885:24886   */\n      0x04\n        /* \"#utility.yul\":24878:24893   */\n      mstore\n        /* \"#utility.yul\":24912:24916   */\n      0x24\n        /* \"#utility.yul\":24909:24910   */\n      0x00\n        /* \"#utility.yul\":24902:24917   */\n      revert\n        /* \"#utility.yul\":24929:25105   */\n    tag_249:\n        /* \"#utility.yul\":24961:24962   */\n      0x00\n        /* \"#utility.yul\":24978:24998   */\n      tag_674\n        /* \"#utility.yul\":24996:24997   */\n      dup3\n        /* \"#utility.yul\":24978:24998   */\n      tag_334\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":24973:24998   */\n      swap2\n      pop\n        /* \"#utility.yul\":25012:25032   */\n      tag_675\n        /* \"#utility.yul\":25030:25031   */\n      dup4\n        /* \"#utility.yul\":25012:25032   */\n      tag_334\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":25007:25032   */\n      swap3\n      pop\n        /* \"#utility.yul\":25051:25052   */\n      dup3\n        /* \"#utility.yul\":25041:25076   */\n      tag_676\n      jumpi\n        /* \"#utility.yul\":25056:25074   */\n      tag_677\n      tag_393\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":25041:25076   */\n    tag_676:\n        /* \"#utility.yul\":25097:25098   */\n      dup3\n        /* \"#utility.yul\":25094:25095   */\n      dup3\n        /* \"#utility.yul\":25090:25099   */\n      mod\n        /* \"#utility.yul\":25085:25099   */\n      swap1\n      pop\n        /* \"#utility.yul\":24929:25105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25111:25521   */\n    tag_253:\n        /* \"#utility.yul\":25151:25158   */\n      0x00\n        /* \"#utility.yul\":25174:25194   */\n      tag_679\n        /* \"#utility.yul\":25192:25193   */\n      dup3\n        /* \"#utility.yul\":25174:25194   */\n      tag_334\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":25169:25194   */\n      swap2\n      pop\n        /* \"#utility.yul\":25208:25228   */\n      tag_680\n        /* \"#utility.yul\":25226:25227   */\n      dup4\n        /* \"#utility.yul\":25208:25228   */\n      tag_334\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":25203:25228   */\n      swap3\n      pop\n        /* \"#utility.yul\":25263:25264   */\n      dup3\n        /* \"#utility.yul\":25260:25261   */\n      dup3\n        /* \"#utility.yul\":25256:25265   */\n      mul\n        /* \"#utility.yul\":25285:25315   */\n      tag_681\n        /* \"#utility.yul\":25303:25314   */\n      dup2\n        /* \"#utility.yul\":25285:25315   */\n      tag_334\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":25274:25315   */\n      swap2\n      pop\n        /* \"#utility.yul\":25464:25465   */\n      dup3\n        /* \"#utility.yul\":25455:25462   */\n      dup3\n        /* \"#utility.yul\":25451:25466   */\n      div\n        /* \"#utility.yul\":25448:25449   */\n      dup5\n        /* \"#utility.yul\":25445:25467   */\n      eq\n        /* \"#utility.yul\":25425:25426   */\n      dup4\n        /* \"#utility.yul\":25418:25427   */\n      iszero\n        /* \"#utility.yul\":25398:25481   */\n      or\n        /* \"#utility.yul\":25375:25514   */\n      tag_682\n      jumpi\n        /* \"#utility.yul\":25494:25512   */\n      tag_683\n      tag_380\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":25375:25514   */\n    tag_682:\n        /* \"#utility.yul\":25159:25521   */\n      pop\n        /* \"#utility.yul\":25111:25521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25527:25680   */\n    tag_394:\n        /* \"#utility.yul\":25667:25672   */\n      0x776f6e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25663:25664   */\n      0x00\n        /* \"#utility.yul\":25655:25661   */\n      dup3\n        /* \"#utility.yul\":25651:25665   */\n      add\n        /* \"#utility.yul\":25644:25673   */\n      mstore\n        /* \"#utility.yul\":25527:25680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25686:26051   */\n    tag_395:\n        /* \"#utility.yul\":25828:25831   */\n      0x00\n        /* \"#utility.yul\":25849:25915   */\n      tag_686\n        /* \"#utility.yul\":25913:25914   */\n      0x03\n        /* \"#utility.yul\":25908:25911   */\n      dup4\n        /* \"#utility.yul\":25849:25915   */\n      tag_323\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":25842:25915   */\n      swap2\n      pop\n        /* \"#utility.yul\":25924:26017   */\n      tag_687\n        /* \"#utility.yul\":26013:26016   */\n      dup3\n        /* \"#utility.yul\":25924:26017   */\n      tag_394\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":26042:26044   */\n      0x20\n        /* \"#utility.yul\":26037:26040   */\n      dup3\n        /* \"#utility.yul\":26033:26045   */\n      add\n        /* \"#utility.yul\":26026:26045   */\n      swap1\n      pop\n        /* \"#utility.yul\":25686:26051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26057:26684   */\n    tag_255:\n        /* \"#utility.yul\":26273:26277   */\n      0x00\n        /* \"#utility.yul\":26311:26313   */\n      0x60\n        /* \"#utility.yul\":26300:26309   */\n      dup3\n        /* \"#utility.yul\":26296:26314   */\n      add\n        /* \"#utility.yul\":26288:26314   */\n      swap1\n      pop\n        /* \"#utility.yul\":26324:26395   */\n      tag_689\n        /* \"#utility.yul\":26392:26393   */\n      0x00\n        /* \"#utility.yul\":26381:26390   */\n      dup4\n        /* \"#utility.yul\":26377:26394   */\n      add\n        /* \"#utility.yul\":26368:26374   */\n      dup6\n        /* \"#utility.yul\":26324:26395   */\n      tag_339\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":26405:26471   */\n      tag_690\n        /* \"#utility.yul\":26467:26469   */\n      0x20\n        /* \"#utility.yul\":26456:26465   */\n      dup4\n        /* \"#utility.yul\":26452:26470   */\n      add\n        /* \"#utility.yul\":26443:26449   */\n      dup5\n        /* \"#utility.yul\":26405:26471   */\n      tag_338\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":26518:26527   */\n      dup2\n        /* \"#utility.yul\":26512:26516   */\n      dup2\n        /* \"#utility.yul\":26508:26528   */\n      sub\n        /* \"#utility.yul\":26503:26505   */\n      0x40\n        /* \"#utility.yul\":26492:26501   */\n      dup4\n        /* \"#utility.yul\":26488:26506   */\n      add\n        /* \"#utility.yul\":26481:26529   */\n      mstore\n        /* \"#utility.yul\":26546:26677   */\n      tag_691\n        /* \"#utility.yul\":26672:26676   */\n      dup2\n        /* \"#utility.yul\":26546:26677   */\n      tag_395\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":26538:26677   */\n      swap1\n      pop\n        /* \"#utility.yul\":26057:26684   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26690:26844   */\n    tag_396:\n        /* \"#utility.yul\":26830:26836   */\n      0x6c6f737400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26826:26827   */\n      0x00\n        /* \"#utility.yul\":26818:26824   */\n      dup3\n        /* \"#utility.yul\":26814:26828   */\n      add\n        /* \"#utility.yul\":26807:26837   */\n      mstore\n        /* \"#utility.yul\":26690:26844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26850:27215   */\n    tag_397:\n        /* \"#utility.yul\":26992:26995   */\n      0x00\n        /* \"#utility.yul\":27013:27079   */\n      tag_694\n        /* \"#utility.yul\":27077:27078   */\n      0x04\n        /* \"#utility.yul\":27072:27075   */\n      dup4\n        /* \"#utility.yul\":27013:27079   */\n      tag_323\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":27006:27079   */\n      swap2\n      pop\n        /* \"#utility.yul\":27088:27181   */\n      tag_695\n        /* \"#utility.yul\":27177:27180   */\n      dup3\n        /* \"#utility.yul\":27088:27181   */\n      tag_396\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":27206:27208   */\n      0x20\n        /* \"#utility.yul\":27201:27204   */\n      dup3\n        /* \"#utility.yul\":27197:27209   */\n      add\n        /* \"#utility.yul\":27190:27209   */\n      swap1\n      pop\n        /* \"#utility.yul\":26850:27215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27221:27848   */\n    tag_259:\n        /* \"#utility.yul\":27437:27441   */\n      0x00\n        /* \"#utility.yul\":27475:27477   */\n      0x60\n        /* \"#utility.yul\":27464:27473   */\n      dup3\n        /* \"#utility.yul\":27460:27478   */\n      add\n        /* \"#utility.yul\":27452:27478   */\n      swap1\n      pop\n        /* \"#utility.yul\":27488:27559   */\n      tag_697\n        /* \"#utility.yul\":27556:27557   */\n      0x00\n        /* \"#utility.yul\":27545:27554   */\n      dup4\n        /* \"#utility.yul\":27541:27558   */\n      add\n        /* \"#utility.yul\":27532:27538   */\n      dup6\n        /* \"#utility.yul\":27488:27559   */\n      tag_339\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":27569:27635   */\n      tag_698\n        /* \"#utility.yul\":27631:27633   */\n      0x20\n        /* \"#utility.yul\":27620:27629   */\n      dup4\n        /* \"#utility.yul\":27616:27634   */\n      add\n        /* \"#utility.yul\":27607:27613   */\n      dup5\n        /* \"#utility.yul\":27569:27635   */\n      tag_338\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":27682:27691   */\n      dup2\n        /* \"#utility.yul\":27676:27680   */\n      dup2\n        /* \"#utility.yul\":27672:27692   */\n      sub\n        /* \"#utility.yul\":27667:27669   */\n      0x40\n        /* \"#utility.yul\":27656:27665   */\n      dup4\n        /* \"#utility.yul\":27652:27670   */\n      add\n        /* \"#utility.yul\":27645:27693   */\n      mstore\n        /* \"#utility.yul\":27710:27841   */\n      tag_699\n        /* \"#utility.yul\":27836:27840   */\n      dup2\n        /* \"#utility.yul\":27710:27841   */\n      tag_397\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":27702:27841   */\n      swap1\n      pop\n        /* \"#utility.yul\":27221:27848   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27854:28082   */\n    tag_398:\n        /* \"#utility.yul\":27994:28028   */\n      0x596f7527766520616c726561647920636c61696d656420796f75722077656c63\n        /* \"#utility.yul\":27990:27991   */\n      0x00\n        /* \"#utility.yul\":27982:27988   */\n      dup3\n        /* \"#utility.yul\":27978:27992   */\n      add\n        /* \"#utility.yul\":27971:28029   */\n      mstore\n        /* \"#utility.yul\":28063:28074   */\n      0x6f6d6520626f6e75730000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28058:28060   */\n      0x20\n        /* \"#utility.yul\":28050:28056   */\n      dup3\n        /* \"#utility.yul\":28046:28061   */\n      add\n        /* \"#utility.yul\":28039:28075   */\n      mstore\n        /* \"#utility.yul\":27854:28082   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28088:28454   */\n    tag_399:\n        /* \"#utility.yul\":28230:28233   */\n      0x00\n        /* \"#utility.yul\":28251:28318   */\n      tag_702\n        /* \"#utility.yul\":28315:28317   */\n      0x29\n        /* \"#utility.yul\":28310:28313   */\n      dup4\n        /* \"#utility.yul\":28251:28318   */\n      tag_323\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":28244:28318   */\n      swap2\n      pop\n        /* \"#utility.yul\":28327:28420   */\n      tag_703\n        /* \"#utility.yul\":28416:28419   */\n      dup3\n        /* \"#utility.yul\":28327:28420   */\n      tag_398\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":28445:28447   */\n      0x40\n        /* \"#utility.yul\":28440:28443   */\n      dup3\n        /* \"#utility.yul\":28436:28448   */\n      add\n        /* \"#utility.yul\":28429:28448   */\n      swap1\n      pop\n        /* \"#utility.yul\":28088:28454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28460:28879   */\n    tag_270:\n        /* \"#utility.yul\":28626:28630   */\n      0x00\n        /* \"#utility.yul\":28664:28666   */\n      0x20\n        /* \"#utility.yul\":28653:28662   */\n      dup3\n        /* \"#utility.yul\":28649:28667   */\n      add\n        /* \"#utility.yul\":28641:28667   */\n      swap1\n      pop\n        /* \"#utility.yul\":28713:28722   */\n      dup2\n        /* \"#utility.yul\":28707:28711   */\n      dup2\n        /* \"#utility.yul\":28703:28723   */\n      sub\n        /* \"#utility.yul\":28699:28700   */\n      0x00\n        /* \"#utility.yul\":28688:28697   */\n      dup4\n        /* \"#utility.yul\":28684:28701   */\n      add\n        /* \"#utility.yul\":28677:28724   */\n      mstore\n        /* \"#utility.yul\":28741:28872   */\n      tag_705\n        /* \"#utility.yul\":28867:28871   */\n      dup2\n        /* \"#utility.yul\":28741:28872   */\n      tag_399\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":28733:28872   */\n      swap1\n      pop\n        /* \"#utility.yul\":28460:28879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28885:29327   */\n    tag_281:\n        /* \"#utility.yul\":29034:29038   */\n      0x00\n        /* \"#utility.yul\":29072:29074   */\n      0x60\n        /* \"#utility.yul\":29061:29070   */\n      dup3\n        /* \"#utility.yul\":29057:29075   */\n      add\n        /* \"#utility.yul\":29049:29075   */\n      swap1\n      pop\n        /* \"#utility.yul\":29085:29156   */\n      tag_707\n        /* \"#utility.yul\":29153:29154   */\n      0x00\n        /* \"#utility.yul\":29142:29151   */\n      dup4\n        /* \"#utility.yul\":29138:29155   */\n      add\n        /* \"#utility.yul\":29129:29135   */\n      dup7\n        /* \"#utility.yul\":29085:29156   */\n      tag_352\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":29166:29238   */\n      tag_708\n        /* \"#utility.yul\":29234:29236   */\n      0x20\n        /* \"#utility.yul\":29223:29232   */\n      dup4\n        /* \"#utility.yul\":29219:29237   */\n      add\n        /* \"#utility.yul\":29210:29216   */\n      dup6\n        /* \"#utility.yul\":29166:29238   */\n      tag_339\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":29248:29320   */\n      tag_709\n        /* \"#utility.yul\":29316:29318   */\n      0x40\n        /* \"#utility.yul\":29305:29314   */\n      dup4\n        /* \"#utility.yul\":29301:29319   */\n      add\n        /* \"#utility.yul\":29292:29298   */\n      dup5\n        /* \"#utility.yul\":29248:29320   */\n      tag_339\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":28885:29327   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29333:29524   */\n    tag_315:\n        /* \"#utility.yul\":29373:29376   */\n      0x00\n        /* \"#utility.yul\":29392:29412   */\n      tag_711\n        /* \"#utility.yul\":29410:29411   */\n      dup3\n        /* \"#utility.yul\":29392:29412   */\n      tag_334\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":29387:29412   */\n      swap2\n      pop\n        /* \"#utility.yul\":29426:29446   */\n      tag_712\n        /* \"#utility.yul\":29444:29445   */\n      dup4\n        /* \"#utility.yul\":29426:29446   */\n      tag_334\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":29421:29446   */\n      swap3\n      pop\n        /* \"#utility.yul\":29469:29470   */\n      dup3\n        /* \"#utility.yul\":29466:29467   */\n      dup3\n        /* \"#utility.yul\":29462:29471   */\n      add\n        /* \"#utility.yul\":29455:29471   */\n      swap1\n      pop\n        /* \"#utility.yul\":29490:29493   */\n      dup1\n        /* \"#utility.yul\":29487:29488   */\n      dup3\n        /* \"#utility.yul\":29484:29494   */\n      gt\n        /* \"#utility.yul\":29481:29517   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":29497:29515   */\n      tag_714\n      tag_380\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":29481:29517   */\n    tag_713:\n        /* \"#utility.yul\":29333:29524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122016fdb7131c80ef87a978434497a9fa06b2dc96b92f7640a1179fded40a98e9f664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1104": {
									"entryPoint": null,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1458,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1611,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 1744,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1229,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1791,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1128": {
									"entryPoint": 1424,
									"id": 1128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1751,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3454,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8394:8",
										"nodeType": "YulBlock",
										"src": "0:8394:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "890:32:8",
													"nodeType": "YulBlock",
													"src": "890:32:8",
													"statements": [
														{
															"nativeSrc": "900:16:8",
															"nodeType": "YulAssignment",
															"src": "900:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:8",
																"nodeType": "YulIdentifier",
																"src": "911:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:8",
														"nodeType": "YulTypedName",
														"src": "872:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:8",
														"nodeType": "YulTypedName",
														"src": "882:7:8",
														"type": ""
													}
												],
												"src": "845:77:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1299:413:8",
													"nodeType": "YulBlock",
													"src": "1299:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:8",
																"nodeType": "YulBlock",
																"src": "1345:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:8"
																			},
																			"nativeSrc": "1347:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:8"
																		},
																		"nativeSrc": "1347:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:8"
																		},
																		"nativeSrc": "1316:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:8"
																},
																"nativeSrc": "1312:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:8"
															},
															"nativeSrc": "1309:119:8",
															"nodeType": "YulIf",
															"src": "1309:119:8"
														},
														{
															"nativeSrc": "1438:128:8",
															"nodeType": "YulBlock",
															"src": "1438:128:8",
															"statements": [
																{
																	"nativeSrc": "1453:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:8"
																				},
																				"nativeSrc": "1524:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:8"
																		},
																		"nativeSrc": "1492:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:8",
															"nodeType": "YulBlock",
															"src": "1576:129:8",
															"statements": [
																{
																	"nativeSrc": "1591:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:8"
																				},
																				"nativeSrc": "1663:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:8"
																		},
																		"nativeSrc": "1631:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:8",
														"nodeType": "YulTypedName",
														"src": "1261:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:8",
														"nodeType": "YulTypedName",
														"src": "1272:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:8",
														"nodeType": "YulTypedName",
														"src": "1284:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:8",
														"nodeType": "YulTypedName",
														"src": "1292:6:8",
														"type": ""
													}
												],
												"src": "1205:507:8"
											},
											{
												"body": {
													"nativeSrc": "1777:40:8",
													"nodeType": "YulBlock",
													"src": "1777:40:8",
													"statements": [
														{
															"nativeSrc": "1788:22:8",
															"nodeType": "YulAssignment",
															"src": "1788:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1804:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1798:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:8"
																},
																"nativeSrc": "1798:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1798:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1788:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1718:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:8",
														"nodeType": "YulTypedName",
														"src": "1760:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1770:6:8",
														"nodeType": "YulTypedName",
														"src": "1770:6:8",
														"type": ""
													}
												],
												"src": "1718:99:8"
											},
											{
												"body": {
													"nativeSrc": "1851:152:8",
													"nodeType": "YulBlock",
													"src": "1851:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:8"
																},
																"nativeSrc": "1861:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1861:88:8"
															},
															"nativeSrc": "1861:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:8"
																},
																"nativeSrc": "1958:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1958:15:8"
															},
															"nativeSrc": "1958:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:8"
																},
																"nativeSrc": "1982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1982:15:8"
															},
															"nativeSrc": "1982:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1823:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:8"
											},
											{
												"body": {
													"nativeSrc": "2037:152:8",
													"nodeType": "YulBlock",
													"src": "2037:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:8"
																},
																"nativeSrc": "2047:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2047:88:8"
															},
															"nativeSrc": "2047:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2154:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:8"
																},
																"nativeSrc": "2144:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2144:15:8"
															},
															"nativeSrc": "2144:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2168:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:8"
																},
																"nativeSrc": "2168:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2168:15:8"
															},
															"nativeSrc": "2168:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2009:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:8"
											},
											{
												"body": {
													"nativeSrc": "2246:269:8",
													"nodeType": "YulBlock",
													"src": "2246:269:8",
													"statements": [
														{
															"nativeSrc": "2256:22:8",
															"nodeType": "YulAssignment",
															"src": "2256:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:8"
																},
																"nativeSrc": "2266:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:8"
																}
															]
														},
														{
															"nativeSrc": "2287:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2313:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:8"
																},
																"nativeSrc": "2313:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2313:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2291:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2364:51:8",
																"nodeType": "YulBlock",
																"src": "2364:51:8",
																"statements": [
																	{
																		"nativeSrc": "2378:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2378:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2392:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2388:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:8"
																			},
																			"nativeSrc": "2388:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2378:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2344:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:8"
																},
																"nativeSrc": "2337:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2337:26:8"
															},
															"nativeSrc": "2334:81:8",
															"nodeType": "YulIf",
															"src": "2334:81:8"
														},
														{
															"body": {
																"nativeSrc": "2467:42:8",
																"nodeType": "YulBlock",
																"src": "2467:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2481:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:8"
																			},
																			"nativeSrc": "2481:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:8"
																		},
																		"nativeSrc": "2481:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2431:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2454:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2462:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2451:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:8"
																		},
																		"nativeSrc": "2451:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2428:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:8"
																},
																"nativeSrc": "2428:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2428:38:8"
															},
															"nativeSrc": "2425:84:8",
															"nodeType": "YulIf",
															"src": "2425:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2195:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2230:4:8",
														"nodeType": "YulTypedName",
														"src": "2230:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2239:6:8",
														"nodeType": "YulTypedName",
														"src": "2239:6:8",
														"type": ""
													}
												],
												"src": "2195:320:8"
											},
											{
												"body": {
													"nativeSrc": "2575:87:8",
													"nodeType": "YulBlock",
													"src": "2575:87:8",
													"statements": [
														{
															"nativeSrc": "2585:11:8",
															"nodeType": "YulAssignment",
															"src": "2585:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2593:3:8",
																"nodeType": "YulIdentifier",
																"src": "2593:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2585:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:8"
																},
																"nativeSrc": "2606:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2606:14:8"
															},
															"nativeSrc": "2606:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:8"
														},
														{
															"nativeSrc": "2629:26:8",
															"nodeType": "YulAssignment",
															"src": "2629:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2637:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:8"
																},
																"nativeSrc": "2637:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2637:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2629:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2521:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2562:3:8",
														"nodeType": "YulTypedName",
														"src": "2562:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2570:4:8",
														"nodeType": "YulTypedName",
														"src": "2570:4:8",
														"type": ""
													}
												],
												"src": "2521:141:8"
											},
											{
												"body": {
													"nativeSrc": "2712:49:8",
													"nodeType": "YulBlock",
													"src": "2712:49:8",
													"statements": [
														{
															"nativeSrc": "2722:33:8",
															"nodeType": "YulAssignment",
															"src": "2722:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2740:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2736:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:8"
																		},
																		"nativeSrc": "2736:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:8"
																},
																"nativeSrc": "2732:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2732:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2722:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2668:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:8",
														"nodeType": "YulTypedName",
														"src": "2695:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2705:6:8",
														"nodeType": "YulTypedName",
														"src": "2705:6:8",
														"type": ""
													}
												],
												"src": "2668:93:8"
											},
											{
												"body": {
													"nativeSrc": "2820:54:8",
													"nodeType": "YulBlock",
													"src": "2820:54:8",
													"statements": [
														{
															"nativeSrc": "2830:37:8",
															"nodeType": "YulAssignment",
															"src": "2830:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2855:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2861:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:8"
																},
																"nativeSrc": "2851:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2851:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2830:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2767:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2795:4:8",
														"nodeType": "YulTypedName",
														"src": "2795:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2801:5:8",
														"nodeType": "YulTypedName",
														"src": "2801:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2811:8:8",
														"nodeType": "YulTypedName",
														"src": "2811:8:8",
														"type": ""
													}
												],
												"src": "2767:107:8"
											},
											{
												"body": {
													"nativeSrc": "2956:317:8",
													"nodeType": "YulBlock",
													"src": "2956:317:8",
													"statements": [
														{
															"nativeSrc": "2966:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2987:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2999:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:8"
																},
																"nativeSrc": "2983:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2970:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3010:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3041:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3022:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:8"
																},
																"nativeSrc": "3022:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3022:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3014:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3128:51:8",
															"nodeType": "YulAssignment",
															"src": "3128:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3159:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3170:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3140:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:8"
																},
																"nativeSrc": "3140:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3140:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3128:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:8"
																}
															]
														},
														{
															"nativeSrc": "3188:30:8",
															"nodeType": "YulAssignment",
															"src": "3188:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3212:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:8"
																		},
																		"nativeSrc": "3208:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:8"
																},
																"nativeSrc": "3197:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3197:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:8"
																}
															]
														},
														{
															"nativeSrc": "3227:40:8",
															"nodeType": "YulAssignment",
															"src": "3227:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3240:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3251:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3261:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:8"
																		},
																		"nativeSrc": "3247:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3237:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:8"
																},
																"nativeSrc": "3237:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3237:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2880:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:8",
														"nodeType": "YulTypedName",
														"src": "2917:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2924:10:8",
														"nodeType": "YulTypedName",
														"src": "2924:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2936:8:8",
														"nodeType": "YulTypedName",
														"src": "2936:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2949:6:8",
														"nodeType": "YulTypedName",
														"src": "2949:6:8",
														"type": ""
													}
												],
												"src": "2880:393:8"
											},
											{
												"body": {
													"nativeSrc": "3311:28:8",
													"nodeType": "YulBlock",
													"src": "3311:28:8",
													"statements": [
														{
															"nativeSrc": "3321:12:8",
															"nodeType": "YulAssignment",
															"src": "3321:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3328:5:8",
																"nodeType": "YulIdentifier",
																"src": "3328:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3279:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3297:5:8",
														"nodeType": "YulTypedName",
														"src": "3297:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3307:3:8",
														"nodeType": "YulTypedName",
														"src": "3307:3:8",
														"type": ""
													}
												],
												"src": "3279:60:8"
											},
											{
												"body": {
													"nativeSrc": "3405:82:8",
													"nodeType": "YulBlock",
													"src": "3405:82:8",
													"statements": [
														{
															"nativeSrc": "3415:66:8",
															"nodeType": "YulAssignment",
															"src": "3415:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3473:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3455:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:8"
																				},
																				"nativeSrc": "3455:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3446:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:8"
																		},
																		"nativeSrc": "3446:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3428:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:8"
																},
																"nativeSrc": "3428:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3428:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3415:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3345:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3385:5:8",
														"nodeType": "YulTypedName",
														"src": "3385:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3395:9:8",
														"nodeType": "YulTypedName",
														"src": "3395:9:8",
														"type": ""
													}
												],
												"src": "3345:142:8"
											},
											{
												"body": {
													"nativeSrc": "3540:28:8",
													"nodeType": "YulBlock",
													"src": "3540:28:8",
													"statements": [
														{
															"nativeSrc": "3550:12:8",
															"nodeType": "YulAssignment",
															"src": "3550:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3557:5:8",
																"nodeType": "YulIdentifier",
																"src": "3557:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3493:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:8",
														"nodeType": "YulTypedName",
														"src": "3526:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3536:3:8",
														"nodeType": "YulTypedName",
														"src": "3536:3:8",
														"type": ""
													}
												],
												"src": "3493:75:8"
											},
											{
												"body": {
													"nativeSrc": "3650:193:8",
													"nodeType": "YulBlock",
													"src": "3650:193:8",
													"statements": [
														{
															"nativeSrc": "3660:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3715:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3684:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:8"
																},
																"nativeSrc": "3684:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3684:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3664:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3739:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3779:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3773:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:8"
																				},
																				"nativeSrc": "3773:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3818:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3794:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:8"
																				},
																				"nativeSrc": "3794:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3745:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:8"
																		},
																		"nativeSrc": "3745:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3732:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:8"
																},
																"nativeSrc": "3732:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3732:105:8"
															},
															"nativeSrc": "3732:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3574:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3627:4:8",
														"nodeType": "YulTypedName",
														"src": "3627:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3633:6:8",
														"nodeType": "YulTypedName",
														"src": "3633:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3641:7:8",
														"nodeType": "YulTypedName",
														"src": "3641:7:8",
														"type": ""
													}
												],
												"src": "3574:269:8"
											},
											{
												"body": {
													"nativeSrc": "3898:24:8",
													"nodeType": "YulBlock",
													"src": "3898:24:8",
													"statements": [
														{
															"nativeSrc": "3908:8:8",
															"nodeType": "YulAssignment",
															"src": "3908:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3915:1:8",
																"nodeType": "YulLiteral",
																"src": "3915:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3908:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3849:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3894:3:8",
														"nodeType": "YulTypedName",
														"src": "3894:3:8",
														"type": ""
													}
												],
												"src": "3849:73:8"
											},
											{
												"body": {
													"nativeSrc": "3981:136:8",
													"nodeType": "YulBlock",
													"src": "3981:136:8",
													"statements": [
														{
															"nativeSrc": "3991:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4005:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:8"
																},
																"nativeSrc": "4005:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3995:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4090:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4096:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4104:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4046:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:8"
																},
																"nativeSrc": "4046:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4046:65:8"
															},
															"nativeSrc": "4046:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3928:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3967:4:8",
														"nodeType": "YulTypedName",
														"src": "3967:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3973:6:8",
														"nodeType": "YulTypedName",
														"src": "3973:6:8",
														"type": ""
													}
												],
												"src": "3928:189:8"
											},
											{
												"body": {
													"nativeSrc": "4173:136:8",
													"nodeType": "YulBlock",
													"src": "4173:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:63:8",
																"nodeType": "YulBlock",
																"src": "4240:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4284:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4291:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4254:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:8"
																			},
																			"nativeSrc": "4254:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:8"
																		},
																		"nativeSrc": "4254:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4193:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4200:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4190:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:8"
																},
																"nativeSrc": "4190:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4190:14:8"
															},
															"nativeSrc": "4183:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4205:26:8",
																"nodeType": "YulBlock",
																"src": "4205:26:8",
																"statements": [
																	{
																		"nativeSrc": "4207:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4207:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4220:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4227:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4216:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:8"
																			},
																			"nativeSrc": "4216:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4207:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4187:2:8",
																"nodeType": "YulBlock",
																"src": "4187:2:8",
																"statements": []
															},
															"src": "4183:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4123:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4161:5:8",
														"nodeType": "YulTypedName",
														"src": "4161:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4168:3:8",
														"nodeType": "YulTypedName",
														"src": "4168:3:8",
														"type": ""
													}
												],
												"src": "4123:186:8"
											},
											{
												"body": {
													"nativeSrc": "4394:464:8",
													"nodeType": "YulBlock",
													"src": "4394:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:431:8",
																"nodeType": "YulBlock",
																"src": "4420:431:8",
																"statements": [
																	{
																		"nativeSrc": "4434:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4482:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4450:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:8"
																			},
																			"nativeSrc": "4450:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4438:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4501:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4524:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4552:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4534:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:8"
																					},
																					"nativeSrc": "4534:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:8"
																			},
																			"nativeSrc": "4520:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4505:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4721:27:8",
																			"nodeType": "YulBlock",
																			"src": "4721:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4723:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4723:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4738:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4723:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4705:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4717:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4702:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:8"
																			},
																			"nativeSrc": "4702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:8"
																		},
																		"nativeSrc": "4699:49:8",
																		"nodeType": "YulIf",
																		"src": "4699:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4790:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4807:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4835:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4817:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:8"
																							},
																							"nativeSrc": "4817:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4803:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:8"
																					},
																					"nativeSrc": "4803:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4761:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:8"
																			},
																			"nativeSrc": "4761:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:8"
																		},
																		"nativeSrc": "4761:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4411:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4408:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:8"
																},
																"nativeSrc": "4408:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4408:11:8"
															},
															"nativeSrc": "4405:446:8",
															"nodeType": "YulIf",
															"src": "4405:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4315:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4370:5:8",
														"nodeType": "YulTypedName",
														"src": "4370:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4377:3:8",
														"nodeType": "YulTypedName",
														"src": "4377:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4382:10:8",
														"nodeType": "YulTypedName",
														"src": "4382:10:8",
														"type": ""
													}
												],
												"src": "4315:543:8"
											},
											{
												"body": {
													"nativeSrc": "4927:54:8",
													"nodeType": "YulBlock",
													"src": "4927:54:8",
													"statements": [
														{
															"nativeSrc": "4937:37:8",
															"nodeType": "YulAssignment",
															"src": "4937:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4962:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4968:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4958:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:8"
																},
																"nativeSrc": "4958:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4958:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4937:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4864:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4902:4:8",
														"nodeType": "YulTypedName",
														"src": "4902:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4908:5:8",
														"nodeType": "YulTypedName",
														"src": "4908:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4918:8:8",
														"nodeType": "YulTypedName",
														"src": "4918:8:8",
														"type": ""
													}
												],
												"src": "4864:117:8"
											},
											{
												"body": {
													"nativeSrc": "5038:118:8",
													"nodeType": "YulBlock",
													"src": "5038:118:8",
													"statements": [
														{
															"nativeSrc": "5048:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5097:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5100:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5093:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:8"
																				},
																				"nativeSrc": "5093:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5112:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5108:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:8"
																				},
																				"nativeSrc": "5108:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5064:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:8"
																		},
																		"nativeSrc": "5064:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:8"
																},
																"nativeSrc": "5060:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5060:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5052:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5125:25:8",
															"nodeType": "YulAssignment",
															"src": "5125:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5139:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5145:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:8"
																},
																"nativeSrc": "5135:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5135:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5125:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4987:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5015:4:8",
														"nodeType": "YulTypedName",
														"src": "5015:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5021:5:8",
														"nodeType": "YulTypedName",
														"src": "5021:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5031:6:8",
														"nodeType": "YulTypedName",
														"src": "5031:6:8",
														"type": ""
													}
												],
												"src": "4987:169:8"
											},
											{
												"body": {
													"nativeSrc": "5242:214:8",
													"nodeType": "YulBlock",
													"src": "5242:214:8",
													"statements": [
														{
															"nativeSrc": "5375:37:8",
															"nodeType": "YulAssignment",
															"src": "5375:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5402:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5408:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5383:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:8"
																},
																"nativeSrc": "5383:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5383:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5375:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:8"
																}
															]
														},
														{
															"nativeSrc": "5421:29:8",
															"nodeType": "YulAssignment",
															"src": "5421:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5432:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5442:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5445:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5438:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:8"
																		},
																		"nativeSrc": "5438:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:8"
																},
																"nativeSrc": "5429:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5429:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5161:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5223:4:8",
														"nodeType": "YulTypedName",
														"src": "5223:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5229:3:8",
														"nodeType": "YulTypedName",
														"src": "5229:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5237:4:8",
														"nodeType": "YulTypedName",
														"src": "5237:4:8",
														"type": ""
													}
												],
												"src": "5161:295:8"
											},
											{
												"body": {
													"nativeSrc": "5553:1303:8",
													"nodeType": "YulBlock",
													"src": "5553:1303:8",
													"statements": [
														{
															"nativeSrc": "5564:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5611:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5578:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:8"
																},
																"nativeSrc": "5578:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5578:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5568:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5700:22:8",
																"nodeType": "YulBlock",
																"src": "5700:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5702:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:8"
																			},
																			"nativeSrc": "5702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:8"
																		},
																		"nativeSrc": "5702:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5672:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5669:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:8"
																},
																"nativeSrc": "5669:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5669:30:8"
															},
															"nativeSrc": "5666:56:8",
															"nodeType": "YulIf",
															"src": "5666:56:8"
														},
														{
															"nativeSrc": "5732:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5778:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5772:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:8"
																		},
																		"nativeSrc": "5772:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5746:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:8"
																},
																"nativeSrc": "5746:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5746:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5736:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5877:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5891:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5831:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:8"
																},
																"nativeSrc": "5831:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5831:67:8"
															},
															"nativeSrc": "5831:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:8"
														},
														{
															"nativeSrc": "5908:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5925:1:8",
																"nodeType": "YulLiteral",
																"src": "5925:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5912:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:17:8",
															"nodeType": "YulAssignment",
															"src": "5936:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5949:4:8",
																"nodeType": "YulLiteral",
																"src": "5949:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5936:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6000:611:8",
																		"nodeType": "YulBlock",
																		"src": "6000:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6014:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6045:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6041:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:8"
																							},
																							"nativeSrc": "6041:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6029:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:8"
																					},
																					"nativeSrc": "6029:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6018:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6065:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6111:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6079:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:8"
																					},
																					"nativeSrc": "6079:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6069:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6129:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6138:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6133:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6197:163:8",
																					"nodeType": "YulBlock",
																					"src": "6197:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6222:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6240:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6245:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6236:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:8"
																												},
																												"nativeSrc": "6236:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6230:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:8"
																										},
																										"nativeSrc": "6230:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6215:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:8"
																								},
																								"nativeSrc": "6215:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:8"
																							},
																							"nativeSrc": "6215:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:8"
																						},
																						{
																							"nativeSrc": "6274:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6274:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6288:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6296:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6284:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:8"
																								},
																								"nativeSrc": "6284:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6274:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6315:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6315:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6332:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6343:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6328:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:8"
																								},
																								"nativeSrc": "6328:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6315:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6163:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6166:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6160:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:8"
																					},
																					"nativeSrc": "6160:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:8"
																				},
																				"nativeSrc": "6152:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6175:21:8",
																					"nodeType": "YulBlock",
																					"src": "6175:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6177:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6177:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6186:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6189:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6182:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:8"
																								},
																								"nativeSrc": "6182:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6177:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6156:3:8",
																					"nodeType": "YulBlock",
																					"src": "6156:3:8",
																					"statements": []
																				},
																				"src": "6152:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6396:156:8",
																					"nodeType": "YulBlock",
																					"src": "6396:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6414:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6441:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6446:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6437:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:8"
																										},
																										"nativeSrc": "6437:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6431:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:8"
																								},
																								"nativeSrc": "6431:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6418:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6481:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6508:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6523:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6531:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6519:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:8"
																												},
																												"nativeSrc": "6519:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6489:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:8"
																										},
																										"nativeSrc": "6489:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6474:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:8"
																								},
																								"nativeSrc": "6474:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:8"
																							},
																							"nativeSrc": "6474:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6379:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6388:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6376:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:8"
																					},
																					"nativeSrc": "6376:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:8"
																				},
																				"nativeSrc": "6373:179:8",
																				"nodeType": "YulIf",
																				"src": "6373:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6572:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6586:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6594:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6582:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:8"
																									},
																									"nativeSrc": "6582:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6598:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6578:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:8"
																							},
																							"nativeSrc": "6578:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6565:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:8"
																					},
																					"nativeSrc": "6565:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:8"
																				},
																				"nativeSrc": "6565:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5993:618:8",
																	"nodeType": "YulCase",
																	"src": "5993:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6628:222:8",
																		"nodeType": "YulBlock",
																		"src": "6628:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6642:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6655:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6646:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6679:67:8",
																					"nodeType": "YulBlock",
																					"src": "6679:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6697:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6697:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6716:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6721:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6712:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:8"
																										},
																										"nativeSrc": "6712:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6706:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:8"
																								},
																								"nativeSrc": "6706:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6697:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6672:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:8"
																				},
																				"nativeSrc": "6669:77:8",
																				"nodeType": "YulIf",
																				"src": "6669:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6766:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6825:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6832:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6772:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:8"
																							},
																							"nativeSrc": "6772:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6759:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:8"
																					},
																					"nativeSrc": "6759:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:8"
																				},
																				"nativeSrc": "6759:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6620:230:8",
																	"nodeType": "YulCase",
																	"src": "6620:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5973:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5970:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:8"
																},
																"nativeSrc": "5970:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5970:14:8"
															},
															"nativeSrc": "5963:887:8",
															"nodeType": "YulSwitch",
															"src": "5963:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5461:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5542:4:8",
														"nodeType": "YulTypedName",
														"src": "5542:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5548:3:8",
														"nodeType": "YulTypedName",
														"src": "5548:3:8",
														"type": ""
													}
												],
												"src": "5461:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6927:53:8",
													"nodeType": "YulBlock",
													"src": "6927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6949:17:8"
																		},
																		"nativeSrc": "6949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:8"
																},
																"nativeSrc": "6937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6937:37:8"
															},
															"nativeSrc": "6937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6937:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:8",
														"nodeType": "YulTypedName",
														"src": "6915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:8",
														"nodeType": "YulTypedName",
														"src": "6922:3:8",
														"type": ""
													}
												],
												"src": "6862:118:8"
											},
											{
												"body": {
													"nativeSrc": "7084:124:8",
													"nodeType": "YulBlock",
													"src": "7084:124:8",
													"statements": [
														{
															"nativeSrc": "7094:26:8",
															"nodeType": "YulAssignment",
															"src": "7094:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7106:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7117:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:8"
																},
																"nativeSrc": "7102:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7102:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7094:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7174:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7187:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7198:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7183:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:8"
																		},
																		"nativeSrc": "7183:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7130:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:8"
																},
																"nativeSrc": "7130:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:8"
															},
															"nativeSrc": "7130:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7130:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6986:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:8",
														"nodeType": "YulTypedName",
														"src": "7056:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7068:6:8",
														"nodeType": "YulTypedName",
														"src": "7068:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:8",
														"nodeType": "YulTypedName",
														"src": "7079:4:8",
														"type": ""
													}
												],
												"src": "6986:222:8"
											},
											{
												"body": {
													"nativeSrc": "7242:152:8",
													"nodeType": "YulBlock",
													"src": "7242:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7262:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:8"
																},
																"nativeSrc": "7252:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7252:88:8"
															},
															"nativeSrc": "7252:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7252:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7356:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7356:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7359:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7359:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:8"
																},
																"nativeSrc": "7349:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7349:15:8"
															},
															"nativeSrc": "7349:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7349:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7380:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:8"
																},
																"nativeSrc": "7373:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7373:15:8"
															},
															"nativeSrc": "7373:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7373:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7214:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7214:180:8"
											},
											{
												"body": {
													"nativeSrc": "7444:147:8",
													"nodeType": "YulBlock",
													"src": "7444:147:8",
													"statements": [
														{
															"nativeSrc": "7454:25:8",
															"nodeType": "YulAssignment",
															"src": "7454:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7477:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7477:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7459:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7459:17:8"
																},
																"nativeSrc": "7459:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7459:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7454:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7454:1:8"
																}
															]
														},
														{
															"nativeSrc": "7488:25:8",
															"nodeType": "YulAssignment",
															"src": "7488:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7511:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7511:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7493:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7493:17:8"
																},
																"nativeSrc": "7493:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7493:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7488:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7488:1:8"
																}
															]
														},
														{
															"nativeSrc": "7522:16:8",
															"nodeType": "YulAssignment",
															"src": "7522:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7533:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7533:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7536:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7536:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:3:8"
																},
																"nativeSrc": "7529:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7529:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7522:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7562:22:8",
																"nodeType": "YulBlock",
																"src": "7562:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7564:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7564:16:8"
																			},
																			"nativeSrc": "7564:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7564:18:8"
																		},
																		"nativeSrc": "7564:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7564:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7554:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7554:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7557:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7551:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7551:2:8"
																},
																"nativeSrc": "7551:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7551:10:8"
															},
															"nativeSrc": "7548:36:8",
															"nodeType": "YulIf",
															"src": "7548:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7400:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7431:1:8",
														"nodeType": "YulTypedName",
														"src": "7431:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7434:1:8",
														"nodeType": "YulTypedName",
														"src": "7434:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7440:3:8",
														"nodeType": "YulTypedName",
														"src": "7440:3:8",
														"type": ""
													}
												],
												"src": "7400:191:8"
											},
											{
												"body": {
													"nativeSrc": "7662:53:8",
													"nodeType": "YulBlock",
													"src": "7662:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7679:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7679:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7702:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7702:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7684:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7684:17:8"
																		},
																		"nativeSrc": "7684:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7684:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:8"
																},
																"nativeSrc": "7672:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7672:37:8"
															},
															"nativeSrc": "7672:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7672:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7597:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7650:5:8",
														"nodeType": "YulTypedName",
														"src": "7650:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7657:3:8",
														"nodeType": "YulTypedName",
														"src": "7657:3:8",
														"type": ""
													}
												],
												"src": "7597:118:8"
											},
											{
												"body": {
													"nativeSrc": "7875:288:8",
													"nodeType": "YulBlock",
													"src": "7875:288:8",
													"statements": [
														{
															"nativeSrc": "7885:26:8",
															"nodeType": "YulAssignment",
															"src": "7885:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7897:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7897:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7908:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7893:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7893:3:8"
																},
																"nativeSrc": "7893:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7893:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7885:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7885:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7965:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7989:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7989:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7974:3:8"
																		},
																		"nativeSrc": "7974:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7974:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7921:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7921:43:8"
																},
																"nativeSrc": "7921:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7921:71:8"
															},
															"nativeSrc": "7921:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7921:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8046:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8059:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8070:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8070:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:8"
																		},
																		"nativeSrc": "8055:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8002:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8002:43:8"
																},
																"nativeSrc": "8002:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8002:72:8"
															},
															"nativeSrc": "8002:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8002:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8128:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8128:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8141:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8141:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8152:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8152:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8137:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8137:3:8"
																		},
																		"nativeSrc": "8137:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8137:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8084:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8084:43:8"
																},
																"nativeSrc": "8084:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8084:72:8"
															},
															"nativeSrc": "8084:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8084:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7721:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7831:9:8",
														"nodeType": "YulTypedName",
														"src": "7831:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7843:6:8",
														"nodeType": "YulTypedName",
														"src": "7843:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7851:6:8",
														"nodeType": "YulTypedName",
														"src": "7851:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7859:6:8",
														"nodeType": "YulTypedName",
														"src": "7859:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7870:4:8",
														"nodeType": "YulTypedName",
														"src": "7870:4:8",
														"type": ""
													}
												],
												"src": "7721:442:8"
											},
											{
												"body": {
													"nativeSrc": "8267:124:8",
													"nodeType": "YulBlock",
													"src": "8267:124:8",
													"statements": [
														{
															"nativeSrc": "8277:26:8",
															"nodeType": "YulAssignment",
															"src": "8277:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8289:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8289:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8300:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8300:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8285:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:8"
																},
																"nativeSrc": "8285:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8285:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8277:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8277:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8357:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8357:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8370:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8370:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8381:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8381:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8366:3:8"
																		},
																		"nativeSrc": "8366:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8366:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8313:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8313:43:8"
																},
																"nativeSrc": "8313:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8313:71:8"
															},
															"nativeSrc": "8313:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8313:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8169:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8239:9:8",
														"nodeType": "YulTypedName",
														"src": "8239:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8251:6:8",
														"nodeType": "YulTypedName",
														"src": "8251:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8262:4:8",
														"nodeType": "YulTypedName",
														"src": "8262:4:8",
														"type": ""
													}
												],
												"src": "8169:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x35D3 CODESIZE SUB DUP1 PUSH2 0x35D3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446567656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44474E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x4CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x150 DUP3 DUP3 PUSH2 0x590 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F76696365204E6176696761746F7200000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D7974686963204D6176657269636B0000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BC DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43656C65737469616C2043727573686572000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4B0 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41737472616C2041636500000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x898 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446976696E6520446F6D696E61746F7200000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x960 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0xDCC JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x5B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5AE DUP3 DUP3 PUSH2 0x64B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x6D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E4 PUSH2 0x6D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x649 JUMPI PUSH2 0x60D PUSH2 0x6D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CC PUSH0 DUP4 DUP4 PUSH2 0x6FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x81D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8AE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x90B SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x945 DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x955 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP2 EQ PUSH2 0x95F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x970 DUP2 PUSH2 0x94C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x988 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP2 EQ PUSH2 0x992 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x9A3 DUP2 PUSH2 0x97F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH2 0x918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CC DUP6 DUP3 DUP7 ADD PUSH2 0x962 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9DD DUP6 DUP3 DUP7 ADD PUSH2 0x995 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA62 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xAD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xAE1 DUP7 DUP4 PUSH2 0xA9C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH2 0xB17 PUSH2 0xB12 DUP5 PUSH2 0x976 JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB35 DUP4 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xB49 PUSH2 0xB41 DUP3 PUSH2 0xB23 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xAA8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xB5D PUSH2 0xB51 JUMP JUMPDEST PUSH2 0xB68 DUP2 DUP5 DUP5 PUSH2 0xB2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB80 PUSH0 DUP3 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB6E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBA1 DUP2 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0xBAA DUP5 PUSH2 0xA8D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xBB9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xBCD PUSH2 0xBC5 DUP6 PUSH2 0xA8D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB6D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBF0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xBD5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC08 DUP4 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC21 DUP3 PUSH2 0x9E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH2 0xC44 DUP3 SLOAD PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xC4F DUP3 DUP3 DUP6 PUSH2 0xB8F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC80 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xC6E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC78 DUP6 DUP3 PUSH2 0xBFD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC8E DUP7 PUSH2 0xA7B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCB5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC90 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xCD2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xCCE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xBE1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD09 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD46 DUP3 PUSH2 0x976 JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP4 PUSH2 0x976 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0xD0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD78 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD91 PUSH0 DUP4 ADD DUP7 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xD9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0xDAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27FA DUP1 PUSH2 0xDD9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xEA5E65E0 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0xF5112F87 EQ PUSH2 0x4E8 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xCE6019B4 EQ PUSH2 0x450 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xA10F956D EQ PUSH2 0x3D4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x62D6BBDF EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x326 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x30A86006 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x236 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x87A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A0 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0xE84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F0 PUSH2 0x101B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x58C PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH2 0x599 DUP2 DUP6 DUP6 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x5AE CALLER PUSH2 0x802 JUMP JUMPDEST LT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F9 DUP3 DUP3 PUSH2 0x9AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x608 CALLER PUSH2 0x802 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x632 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH2 0x63F DUP6 DUP3 DUP6 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x64A DUP6 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0x67C SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x120D JUMP JUMPDEST PUSH2 0x715 DUP3 DUP3 PUSH2 0x1294 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x72A PUSH2 0x724 PUSH2 0x1072 JUMP JUMPDEST DUP3 PUSH2 0x1313 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x735 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x20C0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7E5 SWAP1 PUSH2 0x21BC JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F PUSH2 0x120D JUMP JUMPDEST PUSH2 0x858 PUSH0 PUSH2 0x1392 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x86C DUP3 PUSH2 0x866 PUSH2 0x1072 JUMP JUMPDEST DUP4 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x1313 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x884 CALLER PUSH2 0x802 JUMP JUMPDEST LT ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CE DUP2 PUSH2 0x719 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x908 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x934 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x956 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9B6 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C3 DUP2 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xA4E CALLER PUSH2 0x802 JUMP JUMPDEST LT ISZERO PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB2 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xBF3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xD42 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xC8D SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCB9 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD04 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCDB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD04 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCE7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC5D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD96 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDF6 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDB6 JUMPI PUSH2 0xDB5 PUSH2 0x246B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDD5 JUMPI PUSH2 0xDD4 PUSH2 0x246B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD9B JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE9A SWAP3 SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0xF38 JUMPI PUSH2 0xEE2 CALLER PUSH1 0x2 DUP5 PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x1294 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF2B SWAP3 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xF41 DUP3 PUSH2 0x719 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xF89 SWAP3 SWAP2 SWAP1 PUSH2 0x2694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF9F PUSH2 0x120D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1018 DUP2 PUSH2 0x1392 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1025 CALLER PUSH2 0x802 JUMP JUMPDEST EQ PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1070 CALLER PUSH1 0x32 PUSH2 0x1294 JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1086 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1455 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1096 DUP5 DUP5 PUSH2 0xE02 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1117 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1108 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1116 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1455 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1208 DUP4 DUP4 DUP4 PUSH2 0x1624 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1215 PUSH2 0x1072 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1233 PUSH2 0x8D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1292 JUMPI PUSH2 0x1256 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1304 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130F PUSH0 DUP4 DUP4 PUSH2 0x1624 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1383 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138E DUP3 PUSH0 DUP4 PUSH2 0x1624 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BC SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1535 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x161E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1615 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1674 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1668 SWAP2 SWAP1 PUSH2 0x2791 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1742 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16FD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1789 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17D3 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187F DUP3 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x1889 DUP2 DUP6 PUSH2 0x1847 JUMP JUMPDEST SWAP4 POP PUSH2 0x1899 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x18A2 DUP2 PUSH2 0x1865 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C5 DUP2 DUP5 PUSH2 0x1875 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1907 DUP3 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1917 DUP2 PUSH2 0x18FD JUMP JUMPDEST DUP2 EQ PUSH2 0x1921 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1932 DUP2 PUSH2 0x190E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0x1938 JUMP JUMPDEST DUP2 EQ PUSH2 0x1954 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1965 DUP2 PUSH2 0x1941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198E DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199F DUP6 DUP3 DUP7 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BD DUP2 PUSH2 0x19A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x1938 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FE PUSH0 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A32 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A5C DUP7 DUP3 DUP8 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A6D DUP7 DUP3 DUP8 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A7E DUP7 DUP3 DUP8 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AAC DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF2 JUMPI PUSH2 0x1AF1 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFF DUP5 DUP3 DUP6 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B46 DUP3 PUSH2 0x1865 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B77 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1B83 DUP3 DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BA2 JUMPI PUSH2 0x1BA1 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH2 0x1BAB DUP3 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD8 PUSH2 0x1BD3 DUP5 PUSH2 0x1B88 JUMP JUMPDEST PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x1B0C JUMP JUMPDEST JUMPDEST PUSH2 0x1BFF DUP5 DUP3 DUP6 PUSH2 0x1BB8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1B08 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4A JUMPI PUSH2 0x1C49 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C67 JUMPI PUSH2 0x1C66 PUSH2 0x18DA JUMP JUMPDEST JUMPDEST PUSH2 0x1C73 DUP6 DUP3 DUP7 ADD PUSH2 0x1C07 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C84 DUP6 DUP3 DUP7 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC2 DUP2 PUSH2 0x18FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDB PUSH0 DUP4 ADD DUP5 PUSH2 0x1CB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D24 DUP4 DUP4 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D46 DUP3 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x1D50 DUP2 DUP6 PUSH2 0x1CEB JUMP JUMPDEST SWAP4 POP PUSH2 0x1D5B DUP4 PUSH2 0x1CFB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8B JUMPI DUP2 MLOAD PUSH2 0x1D72 DUP9 DUP3 PUSH2 0x1D19 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D7D DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D5E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB0 DUP2 DUP5 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCE JUMPI PUSH2 0x1DCD PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DDB DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DEC DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFF DUP2 PUSH2 0x19A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E1A DUP2 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E43 DUP6 DUP3 DUP7 ADD PUSH2 0x1E0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E54 DUP6 DUP3 DUP7 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EB5 JUMPI PUSH2 0x1EB4 PUSH2 0x1E5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEF PUSH1 0x14 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFA DUP3 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F1C DUP2 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F7F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x1F89 DUP7 DUP4 PUSH2 0x1F44 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC4 PUSH2 0x1FBF PUSH2 0x1FBA DUP5 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDD DUP4 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x1FF1 PUSH2 0x1FE9 DUP3 PUSH2 0x1FCB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F50 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2005 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x2010 DUP2 DUP5 DUP5 PUSH2 0x1FD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2028 PUSH0 DUP3 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2078 JUMPI PUSH2 0x2049 DUP2 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2052 DUP5 PUSH2 0x1F35 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2061 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2075 PUSH2 0x206D DUP6 PUSH2 0x1F35 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2015 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2098 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x207D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B0 DUP4 DUP4 PUSH2 0x2089 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C9 DUP3 PUSH2 0x183D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E2 JUMPI PUSH2 0x20E1 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH2 0x20EC DUP3 SLOAD PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x20F7 DUP3 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2128 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2116 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2120 DUP6 DUP3 PUSH2 0x20A5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2136 DUP7 PUSH2 0x1F23 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x215D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2138 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x217A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2176 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2089 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21C6 DUP3 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x218F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 PUSH1 0x13 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2223 DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2245 DUP2 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 PUSH1 0xE DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AD DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x22C2 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x22D7 JUMPI POP POP PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x22E0 DUP3 PUSH2 0x22B4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F9 JUMPI PUSH2 0x22F8 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH2 0x2303 DUP3 SLOAD PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x230E DUP3 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x233B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2329 JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x2333 DUP6 DUP3 PUSH2 0x20A5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2349 DUP8 PUSH2 0x1F23 JUMP JUMPDEST SWAP7 POP PUSH2 0x2354 DUP7 PUSH2 0x1F23 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x237B JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2356 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2398 JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2394 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2089 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x23BA DUP2 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x23C4 DUP2 DUP7 PUSH2 0x1847 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x23DE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x23F4 JUMPI PUSH2 0x2426 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x2426 JUMP JUMPDEST PUSH2 0x23FD DUP6 PUSH2 0x1F23 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x241E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23FF JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2442 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A10 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2454 DUP2 DUP6 PUSH2 0x23AE JUMP JUMPDEST SWAP1 POP PUSH2 0x2463 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B2 PUSH2 0x24AD DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x2498 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CE DUP3 PUSH2 0x24B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DF DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F7 PUSH2 0x24F2 DUP3 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x24D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2508 DUP3 DUP6 PUSH2 0x24A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2518 DUP3 DUP5 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255F DUP3 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP PUSH2 0x256A DUP4 PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x257A JUMPI PUSH2 0x2579 PUSH2 0x2528 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x258F DUP3 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP PUSH2 0x259A DUP4 PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25A8 DUP2 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x25BF JUMPI PUSH2 0x25BE PUSH2 0x218F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776F6E0000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25FA PUSH1 0x3 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2605 DUP3 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2623 PUSH0 DUP4 ADD DUP6 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x2630 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2641 DUP2 PUSH2 0x25EE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6C6F737400000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x267E PUSH1 0x4 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2689 DUP3 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26A7 PUSH0 DUP4 ADD DUP6 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x26B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x26C5 DUP2 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F7527766520616C726561647920636C61696D656420796F75722077656C63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6D6520626F6E75730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2728 PUSH1 0x29 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2733 DUP3 PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x276F PUSH0 DUP4 ADD DUP7 PUSH2 0x1CB9 JUMP JUMPDEST PUSH2 0x277C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x2789 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x279B DUP3 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A6 DUP4 PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27BE JUMPI PUSH2 0x27BD PUSH2 0x218F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND REVERT 0xB7 SGT SHR DUP1 0xEF DUP8 0xA9 PUSH25 0x434497A9FA06B2DC96B92F7640A1179FDED40A98E9F664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "785:3502:7:-:0;;;1236:437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1319:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1344:31:7::2;1349:12;1363:11;1344:4;;;:31;;:::i;:::-;1407;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1431:1;1407:31;;;;;;1434:3;1407:31;;::::0;1396:5:::2;:8;1402:1;1396:8;;;;;;;;;;;;;:42;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1458:31;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1482:1;1458:31;;;;;;1485:3;1458:31;;::::0;1449:5:::2;:8;1455:1;1449:8;;;;;;;;;;;;;:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1509:34;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1535:1;1509:34;;;;;;1538:4;1509:34;;::::0;1500:5:::2;:8;1506:1;1500:8;;;;;;;;;;;;;:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1563:27;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1582:1;1563:27;;;;;;1585:4;1563:27;;::::0;1554:5:::2;:8;1560:1;1554:8;;;;;;;;;;;;;:36;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1610:33;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1635:1;1610:33;;;;;;1638:4;1610:33;;::::0;1601:5:::2;:8;1607:1;1601:8;;;;;;;;;;;;;:42;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1662:1;1654:7;;:9;;;;;;;;;;;;;;;;;;1236:437:::0;;785:3502;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1797:95:7:-;1531:13:0;:11;;;:13;;:::i;:::-;1867:17:7::1;1873:2;1877:6;1867:5;;;:17;;:::i;:::-;1797:95:::0;;:::o;1796:162:0:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:180::-;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:191;7440:3;7459:20;7477:1;7459:20;:::i;:::-;7454:25;;7493:20;7511:1;7493:20;:::i;:::-;7488:25;;7536:1;7533;7529:9;7522:16;;7557:3;7554:1;7551:10;7548:36;;;7564:18;;:::i;:::-;7548:36;7400:191;;;;:::o;7597:118::-;7684:24;7702:5;7684:24;:::i;:::-;7679:3;7672:37;7597:118;;:::o;7721:442::-;7870:4;7908:2;7897:9;7893:18;7885:26;;7921:71;7989:1;7978:9;7974:17;7965:6;7921:71;:::i;:::-;8002:72;8070:2;8059:9;8055:18;8046:6;8002:72;:::i;:::-;8084;8152:2;8141:9;8137:18;8128:6;8084:72;:::i;:::-;7721:442;;;;;;:::o;8169:222::-;8262:4;8300:2;8289:9;8285:18;8277:26;;8313:71;8381:1;8370:9;8366:17;8357:6;8313:71;:::i;:::-;8169:222;;;;:::o;785:3502:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 4217,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5205,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4883,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4621,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4756,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 4210,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 4235,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5010,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4381,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5668,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addItem_1194": {
									"entryPoint": 1837,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3586,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1410,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2050,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 2138,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnToken_1430": {
									"entryPoint": 2170,
									"id": 1430,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1817,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1113": {
									"entryPoint": 1791,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalance_1410": {
									"entryPoint": 1534,
									"id": 1410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getItemName_1386": {
									"entryPoint": 1622,
									"id": 1386,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getItemPrice_1399": {
									"entryPoint": 2441,
									"id": 1399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserItems_1373": {
									"entryPoint": 3070,
									"id": 1373,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLessThanFive_1256": {
									"entryPoint": 3716,
									"id": 1256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_1128": {
									"entryPoint": 1795,
									"id": 1128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1266,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2257,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@purchaseItem_1316": {
									"entryPoint": 2510,
									"id": 1316,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2119,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2297,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenId_1010": {
									"entryPoint": 1549,
									"id": 1010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1567,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1576,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3991,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferToken_1151": {
									"entryPoint": 1444,
									"id": 1151,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2476,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@welcomeBonus_1171": {
									"entryPoint": 4123,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 7712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint8_to_t_uint8": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 9446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 9377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 7434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10076,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint8_$dyn_memory_ptr__to_t_array$_t_uint8_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9744,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9876,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 9263,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 7393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_storage": {
									"entryPoint": 8884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint8_$dyn_memory_ptr": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8247,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 9368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8591,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98": {
									"entryPoint": 9934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 7867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427": {
									"entryPoint": 9670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:29527:8",
										"nodeType": "YulBlock",
										"src": "0:29527:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3734:43:8",
													"nodeType": "YulBlock",
													"src": "3734:43:8",
													"statements": [
														{
															"nativeSrc": "3744:27:8",
															"nodeType": "YulAssignment",
															"src": "3744:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3759:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3759:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3766:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3766:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3755:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3755:3:8"
																},
																"nativeSrc": "3755:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3755:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3744:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3744:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3691:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3716:5:8",
														"nodeType": "YulTypedName",
														"src": "3716:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3726:7:8",
														"nodeType": "YulTypedName",
														"src": "3726:7:8",
														"type": ""
													}
												],
												"src": "3691:86:8"
											},
											{
												"body": {
													"nativeSrc": "3844:51:8",
													"nodeType": "YulBlock",
													"src": "3844:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3861:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3882:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3882:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "3866:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "3866:15:8"
																		},
																		"nativeSrc": "3866:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3866:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3854:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:8"
																},
																"nativeSrc": "3854:35:8",
																"nodeType": "YulFunctionCall",
																"src": "3854:35:8"
															},
															"nativeSrc": "3854:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "3854:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "3783:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3832:5:8",
														"nodeType": "YulTypedName",
														"src": "3832:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3839:3:8",
														"nodeType": "YulTypedName",
														"src": "3839:3:8",
														"type": ""
													}
												],
												"src": "3783:112:8"
											},
											{
												"body": {
													"nativeSrc": "3995:120:8",
													"nodeType": "YulBlock",
													"src": "3995:120:8",
													"statements": [
														{
															"nativeSrc": "4005:26:8",
															"nodeType": "YulAssignment",
															"src": "4005:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4017:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4017:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4028:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4013:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																},
																"nativeSrc": "4013:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4013:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4005:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4081:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4081:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4094:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4105:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4105:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4090:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4090:3:8"
																		},
																		"nativeSrc": "4090:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4090:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4041:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:39:8"
																},
																"nativeSrc": "4041:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:67:8"
															},
															"nativeSrc": "4041:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4041:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3901:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3967:9:8",
														"nodeType": "YulTypedName",
														"src": "3967:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3979:6:8",
														"nodeType": "YulTypedName",
														"src": "3979:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3990:4:8",
														"nodeType": "YulTypedName",
														"src": "3990:4:8",
														"type": ""
													}
												],
												"src": "3901:214:8"
											},
											{
												"body": {
													"nativeSrc": "4221:519:8",
													"nodeType": "YulBlock",
													"src": "4221:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4267:83:8",
																"nodeType": "YulBlock",
																"src": "4267:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4269:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4269:77:8"
																			},
																			"nativeSrc": "4269:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:79:8"
																		},
																		"nativeSrc": "4269:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4269:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4242:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4242:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4251:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4251:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4238:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4238:3:8"
																		},
																		"nativeSrc": "4238:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4234:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4234:3:8"
																},
																"nativeSrc": "4234:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4234:32:8"
															},
															"nativeSrc": "4231:119:8",
															"nodeType": "YulIf",
															"src": "4231:119:8"
														},
														{
															"nativeSrc": "4360:117:8",
															"nodeType": "YulBlock",
															"src": "4360:117:8",
															"statements": [
																{
																	"nativeSrc": "4375:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4375:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4389:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4389:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4379:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4379:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4404:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4404:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4439:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4439:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4450:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4435:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4435:3:8"
																				},
																				"nativeSrc": "4435:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4435:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4459:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4459:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4414:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4414:20:8"
																		},
																		"nativeSrc": "4414:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4414:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4404:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4404:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4487:118:8",
															"nodeType": "YulBlock",
															"src": "4487:118:8",
															"statements": [
																{
																	"nativeSrc": "4502:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4502:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4516:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4506:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4506:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4532:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4532:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4567:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4567:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4578:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4578:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4563:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:8"
																				},
																				"nativeSrc": "4563:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4587:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4587:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4542:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4542:20:8"
																		},
																		"nativeSrc": "4542:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4542:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4532:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4532:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4615:118:8",
															"nodeType": "YulBlock",
															"src": "4615:118:8",
															"statements": [
																{
																	"nativeSrc": "4630:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4630:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4644:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4634:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4634:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4660:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4660:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4695:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4695:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4706:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4706:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4691:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4691:3:8"
																				},
																				"nativeSrc": "4691:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4691:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4715:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4715:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4670:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4670:20:8"
																		},
																		"nativeSrc": "4670:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4660:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4660:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4121:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4175:9:8",
														"nodeType": "YulTypedName",
														"src": "4175:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4186:7:8",
														"nodeType": "YulTypedName",
														"src": "4186:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4198:6:8",
														"nodeType": "YulTypedName",
														"src": "4198:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4206:6:8",
														"nodeType": "YulTypedName",
														"src": "4206:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4214:6:8",
														"nodeType": "YulTypedName",
														"src": "4214:6:8",
														"type": ""
													}
												],
												"src": "4121:619:8"
											},
											{
												"body": {
													"nativeSrc": "4787:77:8",
													"nodeType": "YulBlock",
													"src": "4787:77:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4842:16:8",
																"nodeType": "YulBlock",
																"src": "4842:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4851:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4851:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4854:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4854:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4844:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4844:6:8"
																			},
																			"nativeSrc": "4844:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4844:12:8"
																		},
																		"nativeSrc": "4844:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4844:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4810:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4810:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4833:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4833:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "4817:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "4817:15:8"
																				},
																				"nativeSrc": "4817:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4817:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4807:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4807:2:8"
																		},
																		"nativeSrc": "4807:33:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4807:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4800:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4800:6:8"
																},
																"nativeSrc": "4800:41:8",
																"nodeType": "YulFunctionCall",
																"src": "4800:41:8"
															},
															"nativeSrc": "4797:61:8",
															"nodeType": "YulIf",
															"src": "4797:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "4746:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4780:5:8",
														"nodeType": "YulTypedName",
														"src": "4780:5:8",
														"type": ""
													}
												],
												"src": "4746:118:8"
											},
											{
												"body": {
													"nativeSrc": "4920:85:8",
													"nodeType": "YulBlock",
													"src": "4920:85:8",
													"statements": [
														{
															"nativeSrc": "4930:29:8",
															"nodeType": "YulAssignment",
															"src": "4930:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4952:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4952:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4939:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4939:12:8"
																},
																"nativeSrc": "4939:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4939:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4930:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4930:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4993:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4993:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "4968:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "4968:24:8"
																},
																"nativeSrc": "4968:31:8",
																"nodeType": "YulFunctionCall",
																"src": "4968:31:8"
															},
															"nativeSrc": "4968:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "4968:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "4870:135:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4898:6:8",
														"nodeType": "YulTypedName",
														"src": "4898:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4906:3:8",
														"nodeType": "YulTypedName",
														"src": "4906:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4914:5:8",
														"nodeType": "YulTypedName",
														"src": "4914:5:8",
														"type": ""
													}
												],
												"src": "4870:135:8"
											},
											{
												"body": {
													"nativeSrc": "5075:261:8",
													"nodeType": "YulBlock",
													"src": "5075:261:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5121:83:8",
																"nodeType": "YulBlock",
																"src": "5121:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5123:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5123:77:8"
																			},
																			"nativeSrc": "5123:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5123:79:8"
																		},
																		"nativeSrc": "5123:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5123:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5096:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5096:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5105:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5105:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5092:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5092:3:8"
																		},
																		"nativeSrc": "5092:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5117:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5088:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5088:3:8"
																},
																"nativeSrc": "5088:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5088:32:8"
															},
															"nativeSrc": "5085:119:8",
															"nodeType": "YulIf",
															"src": "5085:119:8"
														},
														{
															"nativeSrc": "5214:115:8",
															"nodeType": "YulBlock",
															"src": "5214:115:8",
															"statements": [
																{
																	"nativeSrc": "5229:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5229:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5243:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5243:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5233:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5233:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5258:61:8",
																	"nodeType": "YulAssignment",
																	"src": "5258:61:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5291:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5291:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5302:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5302:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5287:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5287:3:8"
																				},
																				"nativeSrc": "5287:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5287:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5311:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5311:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "5268:18:8",
																			"nodeType": "YulIdentifier",
																			"src": "5268:18:8"
																		},
																		"nativeSrc": "5268:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5268:51:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5258:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5258:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "5011:325:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5045:9:8",
														"nodeType": "YulTypedName",
														"src": "5045:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5056:7:8",
														"nodeType": "YulTypedName",
														"src": "5056:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5068:6:8",
														"nodeType": "YulTypedName",
														"src": "5068:6:8",
														"type": ""
													}
												],
												"src": "5011:325:8"
											},
											{
												"body": {
													"nativeSrc": "5408:263:8",
													"nodeType": "YulBlock",
													"src": "5408:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5454:83:8",
																"nodeType": "YulBlock",
																"src": "5454:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5456:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5456:77:8"
																			},
																			"nativeSrc": "5456:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5456:79:8"
																		},
																		"nativeSrc": "5456:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5456:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5429:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5429:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5438:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5438:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5425:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:8"
																		},
																		"nativeSrc": "5425:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5450:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5450:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5421:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:3:8"
																},
																"nativeSrc": "5421:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5421:32:8"
															},
															"nativeSrc": "5418:119:8",
															"nodeType": "YulIf",
															"src": "5418:119:8"
														},
														{
															"nativeSrc": "5547:117:8",
															"nodeType": "YulBlock",
															"src": "5547:117:8",
															"statements": [
																{
																	"nativeSrc": "5562:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5562:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5576:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5576:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5566:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5566:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5591:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5591:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5626:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5626:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5637:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5637:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5622:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5622:3:8"
																				},
																				"nativeSrc": "5622:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5622:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5646:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5646:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5601:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5601:20:8"
																		},
																		"nativeSrc": "5601:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5601:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5591:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5591:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5342:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5378:9:8",
														"nodeType": "YulTypedName",
														"src": "5378:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5389:7:8",
														"nodeType": "YulTypedName",
														"src": "5389:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5401:6:8",
														"nodeType": "YulTypedName",
														"src": "5401:6:8",
														"type": ""
													}
												],
												"src": "5342:329:8"
											},
											{
												"body": {
													"nativeSrc": "5766:28:8",
													"nodeType": "YulBlock",
													"src": "5766:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5783:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5783:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5786:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5786:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5776:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:8"
																},
																"nativeSrc": "5776:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5776:12:8"
															},
															"nativeSrc": "5776:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5776:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5677:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5677:117:8"
											},
											{
												"body": {
													"nativeSrc": "5889:28:8",
													"nodeType": "YulBlock",
													"src": "5889:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5906:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5906:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5909:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5909:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5899:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5899:6:8"
																},
																"nativeSrc": "5899:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5899:12:8"
															},
															"nativeSrc": "5899:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5899:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5800:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5800:117:8"
											},
											{
												"body": {
													"nativeSrc": "5951:152:8",
													"nodeType": "YulBlock",
													"src": "5951:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5968:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5968:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5971:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5971:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5961:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5961:6:8"
																},
																"nativeSrc": "5961:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5961:88:8"
															},
															"nativeSrc": "5961:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5961:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6065:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6068:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6058:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:8"
																},
																"nativeSrc": "6058:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6058:15:8"
															},
															"nativeSrc": "6058:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6058:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6089:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6089:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6092:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6092:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6082:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6082:6:8"
																},
																"nativeSrc": "6082:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6082:15:8"
															},
															"nativeSrc": "6082:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6082:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5923:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5923:180:8"
											},
											{
												"body": {
													"nativeSrc": "6152:238:8",
													"nodeType": "YulBlock",
													"src": "6152:238:8",
													"statements": [
														{
															"nativeSrc": "6162:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6162:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6184:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6184:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6214:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6192:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "6192:21:8"
																		},
																		"nativeSrc": "6192:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6180:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6180:3:8"
																},
																"nativeSrc": "6180:40:8",
																"nodeType": "YulFunctionCall",
																"src": "6180:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6166:10:8",
																	"nodeType": "YulTypedName",
																	"src": "6166:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6331:22:8",
																"nodeType": "YulBlock",
																"src": "6331:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6333:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6333:16:8"
																			},
																			"nativeSrc": "6333:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6333:18:8"
																		},
																		"nativeSrc": "6333:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6333:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6274:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "6274:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6286:18:8",
																				"nodeType": "YulLiteral",
																				"src": "6286:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6271:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6271:2:8"
																		},
																		"nativeSrc": "6271:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6271:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6310:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "6310:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6322:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6322:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6307:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6307:2:8"
																		},
																		"nativeSrc": "6307:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6307:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6268:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6268:2:8"
																},
																"nativeSrc": "6268:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6268:62:8"
															},
															"nativeSrc": "6265:88:8",
															"nodeType": "YulIf",
															"src": "6265:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6369:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6369:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6373:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "6373:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6362:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:8"
																},
																"nativeSrc": "6362:22:8",
																"nodeType": "YulFunctionCall",
																"src": "6362:22:8"
															},
															"nativeSrc": "6362:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "6362:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6109:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6138:6:8",
														"nodeType": "YulTypedName",
														"src": "6138:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6146:4:8",
														"nodeType": "YulTypedName",
														"src": "6146:4:8",
														"type": ""
													}
												],
												"src": "6109:281:8"
											},
											{
												"body": {
													"nativeSrc": "6437:88:8",
													"nodeType": "YulBlock",
													"src": "6437:88:8",
													"statements": [
														{
															"nativeSrc": "6447:30:8",
															"nodeType": "YulAssignment",
															"src": "6447:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6457:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6457:18:8"
																},
																"nativeSrc": "6457:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6457:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6447:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6447:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6506:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6506:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6514:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6514:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6486:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "6486:19:8"
																},
																"nativeSrc": "6486:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6486:33:8"
															},
															"nativeSrc": "6486:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6486:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6396:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6421:4:8",
														"nodeType": "YulTypedName",
														"src": "6421:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6430:6:8",
														"nodeType": "YulTypedName",
														"src": "6430:6:8",
														"type": ""
													}
												],
												"src": "6396:129:8"
											},
											{
												"body": {
													"nativeSrc": "6598:241:8",
													"nodeType": "YulBlock",
													"src": "6598:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6703:22:8",
																"nodeType": "YulBlock",
																"src": "6703:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6705:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6705:16:8"
																			},
																			"nativeSrc": "6705:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6705:18:8"
																		},
																		"nativeSrc": "6705:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6705:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6675:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6675:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6683:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6683:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6672:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6672:2:8"
																},
																"nativeSrc": "6672:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6672:30:8"
															},
															"nativeSrc": "6669:56:8",
															"nodeType": "YulIf",
															"src": "6669:56:8"
														},
														{
															"nativeSrc": "6735:37:8",
															"nodeType": "YulAssignment",
															"src": "6735:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6765:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6765:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6743:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "6743:21:8"
																},
																"nativeSrc": "6743:29:8",
																"nodeType": "YulFunctionCall",
																"src": "6743:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6735:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6735:4:8"
																}
															]
														},
														{
															"nativeSrc": "6809:23:8",
															"nodeType": "YulAssignment",
															"src": "6809:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6821:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6821:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6827:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6827:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6817:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6817:3:8"
																},
																"nativeSrc": "6817:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6817:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6809:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6531:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6582:6:8",
														"nodeType": "YulTypedName",
														"src": "6582:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6593:4:8",
														"nodeType": "YulTypedName",
														"src": "6593:4:8",
														"type": ""
													}
												],
												"src": "6531:308:8"
											},
											{
												"body": {
													"nativeSrc": "6909:84:8",
													"nodeType": "YulBlock",
													"src": "6909:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6933:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6933:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6938:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6938:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6943:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6943:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6920:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6920:12:8"
																},
																"nativeSrc": "6920:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6920:30:8"
															},
															"nativeSrc": "6920:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6920:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6970:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6970:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6975:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6975:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6966:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:8"
																		},
																		"nativeSrc": "6966:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6966:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6984:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6984:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6959:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:8"
																},
																"nativeSrc": "6959:27:8",
																"nodeType": "YulFunctionCall",
																"src": "6959:27:8"
															},
															"nativeSrc": "6959:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "6959:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6845:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6891:3:8",
														"nodeType": "YulTypedName",
														"src": "6891:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6896:3:8",
														"nodeType": "YulTypedName",
														"src": "6896:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6901:6:8",
														"nodeType": "YulTypedName",
														"src": "6901:6:8",
														"type": ""
													}
												],
												"src": "6845:148:8"
											},
											{
												"body": {
													"nativeSrc": "7083:341:8",
													"nodeType": "YulBlock",
													"src": "7083:341:8",
													"statements": [
														{
															"nativeSrc": "7093:75:8",
															"nodeType": "YulAssignment",
															"src": "7093:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7160:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7160:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7118:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "7118:41:8"
																		},
																		"nativeSrc": "7118:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7118:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7102:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "7102:15:8"
																},
																"nativeSrc": "7102:66:8",
																"nodeType": "YulFunctionCall",
																"src": "7102:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7093:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7093:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7184:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7184:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7191:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7191:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7177:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7177:6:8"
																},
																"nativeSrc": "7177:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7177:21:8"
															},
															"nativeSrc": "7177:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7177:21:8"
														},
														{
															"nativeSrc": "7207:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7207:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7222:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7222:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7229:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7229:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7218:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7218:3:8"
																},
																"nativeSrc": "7218:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7218:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7211:3:8",
																	"nodeType": "YulTypedName",
																	"src": "7211:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7272:83:8",
																"nodeType": "YulBlock",
																"src": "7272:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7274:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7274:77:8"
																			},
																			"nativeSrc": "7274:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7274:79:8"
																		},
																		"nativeSrc": "7274:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7274:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7253:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7253:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7258:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7258:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7249:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:8"
																		},
																		"nativeSrc": "7249:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7267:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7267:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7246:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7246:2:8"
																},
																"nativeSrc": "7246:25:8",
																"nodeType": "YulFunctionCall",
																"src": "7246:25:8"
															},
															"nativeSrc": "7243:112:8",
															"nodeType": "YulIf",
															"src": "7243:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7401:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7401:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7406:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7406:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7411:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7411:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7364:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "7364:36:8"
																},
																"nativeSrc": "7364:54:8",
																"nodeType": "YulFunctionCall",
																"src": "7364:54:8"
															},
															"nativeSrc": "7364:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "7364:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6999:425:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7056:3:8",
														"nodeType": "YulTypedName",
														"src": "7056:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7061:6:8",
														"nodeType": "YulTypedName",
														"src": "7061:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7069:3:8",
														"nodeType": "YulTypedName",
														"src": "7069:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7077:5:8",
														"nodeType": "YulTypedName",
														"src": "7077:5:8",
														"type": ""
													}
												],
												"src": "6999:425:8"
											},
											{
												"body": {
													"nativeSrc": "7506:278:8",
													"nodeType": "YulBlock",
													"src": "7506:278:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7555:83:8",
																"nodeType": "YulBlock",
																"src": "7555:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7557:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7557:77:8"
																			},
																			"nativeSrc": "7557:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7557:79:8"
																		},
																		"nativeSrc": "7557:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7557:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7534:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7534:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7542:4:8",
																						"nodeType": "YulLiteral",
																						"src": "7542:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7530:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7530:3:8"
																				},
																				"nativeSrc": "7530:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7530:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7549:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7549:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7526:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7526:3:8"
																		},
																		"nativeSrc": "7526:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7526:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7519:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7519:6:8"
																},
																"nativeSrc": "7519:35:8",
																"nodeType": "YulFunctionCall",
																"src": "7519:35:8"
															},
															"nativeSrc": "7516:122:8",
															"nodeType": "YulIf",
															"src": "7516:122:8"
														},
														{
															"nativeSrc": "7647:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7647:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7674:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7674:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7661:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7661:12:8"
																},
																"nativeSrc": "7661:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7661:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7651:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7651:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7690:88:8",
															"nodeType": "YulAssignment",
															"src": "7690:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7751:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7751:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7759:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7759:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7747:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7747:3:8"
																		},
																		"nativeSrc": "7747:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7747:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7766:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7774:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7774:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7699:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "7699:47:8"
																},
																"nativeSrc": "7699:79:8",
																"nodeType": "YulFunctionCall",
																"src": "7699:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7690:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7690:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7444:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7484:6:8",
														"nodeType": "YulTypedName",
														"src": "7484:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7492:3:8",
														"nodeType": "YulTypedName",
														"src": "7492:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7500:5:8",
														"nodeType": "YulTypedName",
														"src": "7500:5:8",
														"type": ""
													}
												],
												"src": "7444:340:8"
											},
											{
												"body": {
													"nativeSrc": "7883:561:8",
													"nodeType": "YulBlock",
													"src": "7883:561:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7929:83:8",
																"nodeType": "YulBlock",
																"src": "7929:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7931:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7931:77:8"
																			},
																			"nativeSrc": "7931:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7931:79:8"
																		},
																		"nativeSrc": "7931:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7931:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7904:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7904:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7913:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7913:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7900:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7900:3:8"
																		},
																		"nativeSrc": "7900:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7900:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7925:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7925:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7896:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7896:3:8"
																},
																"nativeSrc": "7896:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7896:32:8"
															},
															"nativeSrc": "7893:119:8",
															"nodeType": "YulIf",
															"src": "7893:119:8"
														},
														{
															"nativeSrc": "8022:287:8",
															"nodeType": "YulBlock",
															"src": "8022:287:8",
															"statements": [
																{
																	"nativeSrc": "8037:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8037:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8068:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8068:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8079:1:8",
																						"nodeType": "YulLiteral",
																						"src": "8079:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8064:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8064:3:8"
																				},
																				"nativeSrc": "8064:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8064:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8051:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "8051:12:8"
																		},
																		"nativeSrc": "8051:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8051:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8041:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8041:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8129:83:8",
																		"nodeType": "YulBlock",
																		"src": "8129:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8131:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "8131:77:8"
																					},
																					"nativeSrc": "8131:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8131:79:8"
																				},
																				"nativeSrc": "8131:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8131:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8101:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8101:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8109:18:8",
																				"nodeType": "YulLiteral",
																				"src": "8109:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8098:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8098:2:8"
																		},
																		"nativeSrc": "8098:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8098:30:8"
																	},
																	"nativeSrc": "8095:117:8",
																	"nodeType": "YulIf",
																	"src": "8095:117:8"
																},
																{
																	"nativeSrc": "8226:73:8",
																	"nodeType": "YulAssignment",
																	"src": "8226:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8271:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8271:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8282:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8282:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8267:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8267:3:8"
																				},
																				"nativeSrc": "8267:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8267:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8291:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8291:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8236:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "8236:30:8"
																		},
																		"nativeSrc": "8236:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8236:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8226:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8226:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8319:118:8",
															"nodeType": "YulBlock",
															"src": "8319:118:8",
															"statements": [
																{
																	"nativeSrc": "8334:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8334:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8348:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8348:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8338:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8338:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8364:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8364:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8399:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8399:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8410:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8410:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8395:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8395:3:8"
																				},
																				"nativeSrc": "8395:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8395:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8419:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8419:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8374:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8374:20:8"
																		},
																		"nativeSrc": "8374:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8364:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8364:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "7790:654:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7845:9:8",
														"nodeType": "YulTypedName",
														"src": "7845:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7856:7:8",
														"nodeType": "YulTypedName",
														"src": "7856:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7868:6:8",
														"nodeType": "YulTypedName",
														"src": "7868:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7876:6:8",
														"nodeType": "YulTypedName",
														"src": "7876:6:8",
														"type": ""
													}
												],
												"src": "7790:654:8"
											},
											{
												"body": {
													"nativeSrc": "8516:263:8",
													"nodeType": "YulBlock",
													"src": "8516:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8562:83:8",
																"nodeType": "YulBlock",
																"src": "8562:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8564:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8564:77:8"
																			},
																			"nativeSrc": "8564:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8564:79:8"
																		},
																		"nativeSrc": "8564:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8564:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8533:3:8"
																		},
																		"nativeSrc": "8533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8558:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:8"
																},
																"nativeSrc": "8529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8529:32:8"
															},
															"nativeSrc": "8526:119:8",
															"nodeType": "YulIf",
															"src": "8526:119:8"
														},
														{
															"nativeSrc": "8655:117:8",
															"nodeType": "YulBlock",
															"src": "8655:117:8",
															"statements": [
																{
																	"nativeSrc": "8670:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8670:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8684:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8674:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8699:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8699:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8734:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8734:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8730:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8730:3:8"
																				},
																				"nativeSrc": "8730:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8754:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8709:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8709:20:8"
																		},
																		"nativeSrc": "8709:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8709:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8699:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8699:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8450:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8486:9:8",
														"nodeType": "YulTypedName",
														"src": "8486:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8497:7:8",
														"nodeType": "YulTypedName",
														"src": "8497:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8509:6:8",
														"nodeType": "YulTypedName",
														"src": "8509:6:8",
														"type": ""
													}
												],
												"src": "8450:329:8"
											},
											{
												"body": {
													"nativeSrc": "8850:53:8",
													"nodeType": "YulBlock",
													"src": "8850:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8867:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8867:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8890:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8890:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8872:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8872:17:8"
																		},
																		"nativeSrc": "8872:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8872:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8860:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:8"
																},
																"nativeSrc": "8860:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8860:37:8"
															},
															"nativeSrc": "8860:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8860:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8785:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8838:5:8",
														"nodeType": "YulTypedName",
														"src": "8838:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8845:3:8",
														"nodeType": "YulTypedName",
														"src": "8845:3:8",
														"type": ""
													}
												],
												"src": "8785:118:8"
											},
											{
												"body": {
													"nativeSrc": "9007:124:8",
													"nodeType": "YulBlock",
													"src": "9007:124:8",
													"statements": [
														{
															"nativeSrc": "9017:26:8",
															"nodeType": "YulAssignment",
															"src": "9017:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9029:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9029:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9040:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9025:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9025:3:8"
																},
																"nativeSrc": "9025:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9025:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9017:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9017:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9097:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9097:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9110:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9110:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9121:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9121:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9106:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9106:3:8"
																		},
																		"nativeSrc": "9106:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9106:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9053:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9053:43:8"
																},
																"nativeSrc": "9053:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9053:71:8"
															},
															"nativeSrc": "9053:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9053:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8909:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8979:9:8",
														"nodeType": "YulTypedName",
														"src": "8979:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8991:6:8",
														"nodeType": "YulTypedName",
														"src": "8991:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9002:4:8",
														"nodeType": "YulTypedName",
														"src": "9002:4:8",
														"type": ""
													}
												],
												"src": "8909:222:8"
											},
											{
												"body": {
													"nativeSrc": "9209:40:8",
													"nodeType": "YulBlock",
													"src": "9209:40:8",
													"statements": [
														{
															"nativeSrc": "9220:22:8",
															"nodeType": "YulAssignment",
															"src": "9220:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9236:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9236:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9230:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9230:5:8"
																},
																"nativeSrc": "9230:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9230:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9220:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9220:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint8_$dyn_memory_ptr",
												"nativeSrc": "9137:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9192:5:8",
														"nodeType": "YulTypedName",
														"src": "9192:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9202:6:8",
														"nodeType": "YulTypedName",
														"src": "9202:6:8",
														"type": ""
													}
												],
												"src": "9137:112:8"
											},
											{
												"body": {
													"nativeSrc": "9364:73:8",
													"nodeType": "YulBlock",
													"src": "9364:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9381:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9381:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9386:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9386:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9374:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9374:6:8"
																},
																"nativeSrc": "9374:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9374:19:8"
															},
															"nativeSrc": "9374:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "9374:19:8"
														},
														{
															"nativeSrc": "9402:29:8",
															"nodeType": "YulAssignment",
															"src": "9402:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9421:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9426:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9426:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9417:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9417:3:8"
																},
																"nativeSrc": "9417:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9417:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9402:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9402:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9255:182:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9336:3:8",
														"nodeType": "YulTypedName",
														"src": "9336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9341:6:8",
														"nodeType": "YulTypedName",
														"src": "9341:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9352:11:8",
														"nodeType": "YulTypedName",
														"src": "9352:11:8",
														"type": ""
													}
												],
												"src": "9255:182:8"
											},
											{
												"body": {
													"nativeSrc": "9513:60:8",
													"nodeType": "YulBlock",
													"src": "9513:60:8",
													"statements": [
														{
															"nativeSrc": "9523:11:8",
															"nodeType": "YulAssignment",
															"src": "9523:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "9531:3:8",
																"nodeType": "YulIdentifier",
																"src": "9531:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9523:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9523:4:8"
																}
															]
														},
														{
															"nativeSrc": "9544:22:8",
															"nodeType": "YulAssignment",
															"src": "9544:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9556:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9556:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9561:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9561:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9552:3:8"
																},
																"nativeSrc": "9552:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9552:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9544:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9544:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint8_$dyn_memory_ptr",
												"nativeSrc": "9443:130:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9500:3:8",
														"nodeType": "YulTypedName",
														"src": "9500:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9508:4:8",
														"nodeType": "YulTypedName",
														"src": "9508:4:8",
														"type": ""
													}
												],
												"src": "9443:130:8"
											},
											{
												"body": {
													"nativeSrc": "9630:51:8",
													"nodeType": "YulBlock",
													"src": "9630:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9647:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9647:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9668:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9668:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "9652:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "9652:15:8"
																		},
																		"nativeSrc": "9652:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9652:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9640:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9640:6:8"
																},
																"nativeSrc": "9640:35:8",
																"nodeType": "YulFunctionCall",
																"src": "9640:35:8"
															},
															"nativeSrc": "9640:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "9640:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nativeSrc": "9579:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9618:5:8",
														"nodeType": "YulTypedName",
														"src": "9618:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9625:3:8",
														"nodeType": "YulTypedName",
														"src": "9625:3:8",
														"type": ""
													}
												],
												"src": "9579:102:8"
											},
											{
												"body": {
													"nativeSrc": "9763:95:8",
													"nodeType": "YulBlock",
													"src": "9763:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9803:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9803:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9811:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9811:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8",
																	"nativeSrc": "9773:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "9773:29:8"
																},
																"nativeSrc": "9773:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9773:42:8"
															},
															"nativeSrc": "9773:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "9773:42:8"
														},
														{
															"nativeSrc": "9824:28:8",
															"nodeType": "YulAssignment",
															"src": "9824:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9842:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9842:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9847:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9847:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9838:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9838:3:8"
																},
																"nativeSrc": "9838:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9838:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "9824:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9824:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint8_to_t_uint8",
												"nativeSrc": "9687:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "9736:6:8",
														"nodeType": "YulTypedName",
														"src": "9736:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9744:3:8",
														"nodeType": "YulTypedName",
														"src": "9744:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "9752:10:8",
														"nodeType": "YulTypedName",
														"src": "9752:10:8",
														"type": ""
													}
												],
												"src": "9687:171:8"
											},
											{
												"body": {
													"nativeSrc": "9937:38:8",
													"nodeType": "YulBlock",
													"src": "9937:38:8",
													"statements": [
														{
															"nativeSrc": "9947:22:8",
															"nodeType": "YulAssignment",
															"src": "9947:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9959:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9959:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9964:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9964:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9955:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9955:3:8"
																},
																"nativeSrc": "9955:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9955:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "9947:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9947:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint8_$dyn_memory_ptr",
												"nativeSrc": "9864:111:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9924:3:8",
														"nodeType": "YulTypedName",
														"src": "9924:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "9932:4:8",
														"nodeType": "YulTypedName",
														"src": "9932:4:8",
														"type": ""
													}
												],
												"src": "9864:111:8"
											},
											{
												"body": {
													"nativeSrc": "10127:596:8",
													"nodeType": "YulBlock",
													"src": "10127:596:8",
													"statements": [
														{
															"nativeSrc": "10137:66:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10137:66:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10197:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10197:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint8_$dyn_memory_ptr",
																	"nativeSrc": "10151:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "10151:45:8"
																},
																"nativeSrc": "10151:52:8",
																"nodeType": "YulFunctionCall",
																"src": "10151:52:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10141:6:8",
																	"nodeType": "YulTypedName",
																	"src": "10141:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10212:91:8",
															"nodeType": "YulAssignment",
															"src": "10212:91:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10291:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10291:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10296:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10296:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10219:71:8",
																	"nodeType": "YulIdentifier",
																	"src": "10219:71:8"
																},
																"nativeSrc": "10219:84:8",
																"nodeType": "YulFunctionCall",
																"src": "10219:84:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10212:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10212:3:8"
																}
															]
														},
														{
															"nativeSrc": "10312:69:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10312:69:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10375:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10375:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint8_$dyn_memory_ptr",
																	"nativeSrc": "10327:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "10327:47:8"
																},
																"nativeSrc": "10327:54:8",
																"nodeType": "YulFunctionCall",
																"src": "10327:54:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "10316:7:8",
																	"nodeType": "YulTypedName",
																	"src": "10316:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10390:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10390:21:8",
															"value": {
																"name": "baseRef",
																"nativeSrc": "10404:7:8",
																"nodeType": "YulIdentifier",
																"src": "10404:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "10394:6:8",
																	"nodeType": "YulTypedName",
																	"src": "10394:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10480:218:8",
																"nodeType": "YulBlock",
																"src": "10480:218:8",
																"statements": [
																	{
																		"nativeSrc": "10494:34:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10494:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10521:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10521:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "10515:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10515:5:8"
																			},
																			"nativeSrc": "10515:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10515:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "10498:13:8",
																				"nodeType": "YulTypedName",
																				"src": "10498:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10541:66:8",
																		"nodeType": "YulAssignment",
																		"src": "10541:66:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "10588:13:8",
																					"nodeType": "YulIdentifier",
																					"src": "10588:13:8"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "10603:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10603:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint8_to_t_uint8",
																				"nativeSrc": "10548:39:8",
																				"nodeType": "YulIdentifier",
																				"src": "10548:39:8"
																			},
																			"nativeSrc": "10548:59:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10548:59:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "10541:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10541:3:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10620:68:8",
																		"nodeType": "YulAssignment",
																		"src": "10620:68:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10681:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10681:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint8_$dyn_memory_ptr",
																				"nativeSrc": "10630:50:8",
																				"nodeType": "YulIdentifier",
																				"src": "10630:50:8"
																			},
																			"nativeSrc": "10630:58:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10630:58:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "10620:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10620:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10442:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10442:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10445:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10445:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10439:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10439:2:8"
																},
																"nativeSrc": "10439:13:8",
																"nodeType": "YulFunctionCall",
																"src": "10439:13:8"
															},
															"nativeSrc": "10420:278:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10453:18:8",
																"nodeType": "YulBlock",
																"src": "10453:18:8",
																"statements": [
																	{
																		"nativeSrc": "10455:14:8",
																		"nodeType": "YulAssignment",
																		"src": "10455:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10464:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "10464:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10467:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10467:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10460:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10460:3:8"
																			},
																			"nativeSrc": "10460:9:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10460:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10455:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "10455:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10424:14:8",
																"nodeType": "YulBlock",
																"src": "10424:14:8",
																"statements": [
																	{
																		"nativeSrc": "10426:10:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10426:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10435:1:8",
																			"nodeType": "YulLiteral",
																			"src": "10435:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "10430:1:8",
																				"nodeType": "YulTypedName",
																				"src": "10430:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10420:278:8"
														},
														{
															"nativeSrc": "10707:10:8",
															"nodeType": "YulAssignment",
															"src": "10707:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "10714:3:8",
																"nodeType": "YulIdentifier",
																"src": "10714:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10707:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10707:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
												"nativeSrc": "10007:716:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10106:5:8",
														"nodeType": "YulTypedName",
														"src": "10106:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10113:3:8",
														"nodeType": "YulTypedName",
														"src": "10113:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10122:3:8",
														"nodeType": "YulTypedName",
														"src": "10122:3:8",
														"type": ""
													}
												],
												"src": "10007:716:8"
											},
											{
												"body": {
													"nativeSrc": "10873:221:8",
													"nodeType": "YulBlock",
													"src": "10873:221:8",
													"statements": [
														{
															"nativeSrc": "10883:26:8",
															"nodeType": "YulAssignment",
															"src": "10883:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10895:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10895:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10906:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10906:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10891:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10891:3:8"
																},
																"nativeSrc": "10891:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10891:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10883:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10883:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10930:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10930:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10941:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10941:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10926:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:8"
																		},
																		"nativeSrc": "10926:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10926:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10949:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10949:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10955:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10955:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10945:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10945:3:8"
																		},
																		"nativeSrc": "10945:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10945:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10919:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10919:6:8"
																},
																"nativeSrc": "10919:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10919:47:8"
															},
															"nativeSrc": "10919:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10919:47:8"
														},
														{
															"nativeSrc": "10975:112:8",
															"nodeType": "YulAssignment",
															"src": "10975:112:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11073:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11073:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11082:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11082:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10983:89:8",
																	"nodeType": "YulIdentifier",
																	"src": "10983:89:8"
																},
																"nativeSrc": "10983:104:8",
																"nodeType": "YulFunctionCall",
																"src": "10983:104:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10975:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10975:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint8_$dyn_memory_ptr__to_t_array$_t_uint8_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "10729:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10845:9:8",
														"nodeType": "YulTypedName",
														"src": "10845:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10857:6:8",
														"nodeType": "YulTypedName",
														"src": "10857:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10868:4:8",
														"nodeType": "YulTypedName",
														"src": "10868:4:8",
														"type": ""
													}
												],
												"src": "10729:365:8"
											},
											{
												"body": {
													"nativeSrc": "11183:391:8",
													"nodeType": "YulBlock",
													"src": "11183:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11229:83:8",
																"nodeType": "YulBlock",
																"src": "11229:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11231:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11231:77:8"
																			},
																			"nativeSrc": "11231:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11231:79:8"
																		},
																		"nativeSrc": "11231:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11231:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11204:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11204:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11213:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11213:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11200:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11200:3:8"
																		},
																		"nativeSrc": "11200:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11200:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11225:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11225:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11196:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11196:3:8"
																},
																"nativeSrc": "11196:32:8",
																"nodeType": "YulFunctionCall",
																"src": "11196:32:8"
															},
															"nativeSrc": "11193:119:8",
															"nodeType": "YulIf",
															"src": "11193:119:8"
														},
														{
															"nativeSrc": "11322:117:8",
															"nodeType": "YulBlock",
															"src": "11322:117:8",
															"statements": [
																{
																	"nativeSrc": "11337:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11337:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11351:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11351:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11341:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11341:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11366:63:8",
																	"nodeType": "YulAssignment",
																	"src": "11366:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11401:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11401:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11412:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11412:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11397:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11397:3:8"
																				},
																				"nativeSrc": "11397:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11397:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11421:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11421:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11376:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "11376:20:8"
																		},
																		"nativeSrc": "11376:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11376:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11366:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11366:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11449:118:8",
															"nodeType": "YulBlock",
															"src": "11449:118:8",
															"statements": [
																{
																	"nativeSrc": "11464:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11464:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11478:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11478:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11468:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11468:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11494:63:8",
																	"nodeType": "YulAssignment",
																	"src": "11494:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11529:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "11529:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11540:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "11540:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11525:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11525:3:8"
																				},
																				"nativeSrc": "11525:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11525:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11549:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11549:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11504:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "11504:20:8"
																		},
																		"nativeSrc": "11504:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11504:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11494:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11494:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11100:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11145:9:8",
														"nodeType": "YulTypedName",
														"src": "11145:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11156:7:8",
														"nodeType": "YulTypedName",
														"src": "11156:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11168:6:8",
														"nodeType": "YulTypedName",
														"src": "11168:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11176:6:8",
														"nodeType": "YulTypedName",
														"src": "11176:6:8",
														"type": ""
													}
												],
												"src": "11100:474:8"
											},
											{
												"body": {
													"nativeSrc": "11620:76:8",
													"nodeType": "YulBlock",
													"src": "11620:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11674:16:8",
																"nodeType": "YulBlock",
																"src": "11674:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11683:1:8",
																					"nodeType": "YulLiteral",
																					"src": "11683:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11686:1:8",
																					"nodeType": "YulLiteral",
																					"src": "11686:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11676:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11676:6:8"
																			},
																			"nativeSrc": "11676:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11676:12:8"
																		},
																		"nativeSrc": "11676:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11676:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11643:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "11643:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11665:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11665:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11650:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "11650:14:8"
																				},
																				"nativeSrc": "11650:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11650:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11640:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "11640:2:8"
																		},
																		"nativeSrc": "11640:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11640:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11633:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11633:6:8"
																},
																"nativeSrc": "11633:40:8",
																"nodeType": "YulFunctionCall",
																"src": "11633:40:8"
															},
															"nativeSrc": "11630:60:8",
															"nodeType": "YulIf",
															"src": "11630:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11580:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11613:5:8",
														"nodeType": "YulTypedName",
														"src": "11613:5:8",
														"type": ""
													}
												],
												"src": "11580:116:8"
											},
											{
												"body": {
													"nativeSrc": "11751:84:8",
													"nodeType": "YulBlock",
													"src": "11751:84:8",
													"statements": [
														{
															"nativeSrc": "11761:29:8",
															"nodeType": "YulAssignment",
															"src": "11761:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11783:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11783:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11770:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "11770:12:8"
																},
																"nativeSrc": "11770:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11770:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11761:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11761:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11823:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11799:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "11799:23:8"
																},
																"nativeSrc": "11799:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11799:30:8"
															},
															"nativeSrc": "11799:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11799:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "11702:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11729:6:8",
														"nodeType": "YulTypedName",
														"src": "11729:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11737:3:8",
														"nodeType": "YulTypedName",
														"src": "11737:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11745:5:8",
														"nodeType": "YulTypedName",
														"src": "11745:5:8",
														"type": ""
													}
												],
												"src": "11702:133:8"
											},
											{
												"body": {
													"nativeSrc": "11921:388:8",
													"nodeType": "YulBlock",
													"src": "11921:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11967:83:8",
																"nodeType": "YulBlock",
																"src": "11967:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11969:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11969:77:8"
																			},
																			"nativeSrc": "11969:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11969:79:8"
																		},
																		"nativeSrc": "11969:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11969:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11942:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11942:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11951:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11938:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11938:3:8"
																		},
																		"nativeSrc": "11938:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11938:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11963:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11963:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11934:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11934:3:8"
																},
																"nativeSrc": "11934:32:8",
																"nodeType": "YulFunctionCall",
																"src": "11934:32:8"
															},
															"nativeSrc": "11931:119:8",
															"nodeType": "YulIf",
															"src": "11931:119:8"
														},
														{
															"nativeSrc": "12060:114:8",
															"nodeType": "YulBlock",
															"src": "12060:114:8",
															"statements": [
																{
																	"nativeSrc": "12075:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12075:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12089:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12089:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12079:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12079:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12104:60:8",
																	"nodeType": "YulAssignment",
																	"src": "12104:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12136:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12136:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12147:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12147:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12132:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12132:3:8"
																				},
																				"nativeSrc": "12132:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12132:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12156:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12156:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "12114:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "12114:17:8"
																		},
																		"nativeSrc": "12114:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12114:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12104:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12104:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12184:118:8",
															"nodeType": "YulBlock",
															"src": "12184:118:8",
															"statements": [
																{
																	"nativeSrc": "12199:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12199:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12213:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12213:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12203:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12203:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12229:63:8",
																	"nodeType": "YulAssignment",
																	"src": "12229:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12264:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12264:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12275:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12275:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12260:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12260:3:8"
																				},
																				"nativeSrc": "12260:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12260:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12284:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12284:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12239:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "12239:20:8"
																		},
																		"nativeSrc": "12239:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12239:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12229:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12229:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nativeSrc": "11841:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11883:9:8",
														"nodeType": "YulTypedName",
														"src": "11883:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11894:7:8",
														"nodeType": "YulTypedName",
														"src": "11894:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11906:6:8",
														"nodeType": "YulTypedName",
														"src": "11906:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11914:6:8",
														"nodeType": "YulTypedName",
														"src": "11914:6:8",
														"type": ""
													}
												],
												"src": "11841:468:8"
											},
											{
												"body": {
													"nativeSrc": "12343:152:8",
													"nodeType": "YulBlock",
													"src": "12343:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12360:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12360:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12363:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12363:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12353:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12353:6:8"
																},
																"nativeSrc": "12353:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12353:88:8"
															},
															"nativeSrc": "12353:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12353:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12457:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12457:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12460:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12460:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12450:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12450:6:8"
																},
																"nativeSrc": "12450:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12450:15:8"
															},
															"nativeSrc": "12450:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12450:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12481:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12481:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12484:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12484:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12474:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:8"
																},
																"nativeSrc": "12474:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12474:15:8"
															},
															"nativeSrc": "12474:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12474:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12315:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12315:180:8"
											},
											{
												"body": {
													"nativeSrc": "12552:269:8",
													"nodeType": "YulBlock",
													"src": "12552:269:8",
													"statements": [
														{
															"nativeSrc": "12562:22:8",
															"nodeType": "YulAssignment",
															"src": "12562:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12576:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12576:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12582:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12582:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12572:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:8"
																},
																"nativeSrc": "12572:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12572:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12562:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12562:6:8"
																}
															]
														},
														{
															"nativeSrc": "12593:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12593:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12623:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12623:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12629:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12629:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12619:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12619:3:8"
																},
																"nativeSrc": "12619:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12619:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12597:18:8",
																	"nodeType": "YulTypedName",
																	"src": "12597:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12670:51:8",
																"nodeType": "YulBlock",
																"src": "12670:51:8",
																"statements": [
																	{
																		"nativeSrc": "12684:27:8",
																		"nodeType": "YulAssignment",
																		"src": "12684:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12698:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "12698:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12706:4:8",
																					"nodeType": "YulLiteral",
																					"src": "12706:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12694:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12694:3:8"
																			},
																			"nativeSrc": "12694:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12694:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12684:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12684:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12650:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "12650:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12643:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12643:6:8"
																},
																"nativeSrc": "12643:26:8",
																"nodeType": "YulFunctionCall",
																"src": "12643:26:8"
															},
															"nativeSrc": "12640:81:8",
															"nodeType": "YulIf",
															"src": "12640:81:8"
														},
														{
															"body": {
																"nativeSrc": "12773:42:8",
																"nodeType": "YulBlock",
																"src": "12773:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12787:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12787:16:8"
																			},
																			"nativeSrc": "12787:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12787:18:8"
																		},
																		"nativeSrc": "12787:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12787:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12737:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "12737:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12760:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12760:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12768:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12768:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12757:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12757:2:8"
																		},
																		"nativeSrc": "12757:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12757:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12734:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12734:2:8"
																},
																"nativeSrc": "12734:38:8",
																"nodeType": "YulFunctionCall",
																"src": "12734:38:8"
															},
															"nativeSrc": "12731:84:8",
															"nodeType": "YulIf",
															"src": "12731:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12501:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12536:4:8",
														"nodeType": "YulTypedName",
														"src": "12536:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12545:6:8",
														"nodeType": "YulTypedName",
														"src": "12545:6:8",
														"type": ""
													}
												],
												"src": "12501:320:8"
											},
											{
												"body": {
													"nativeSrc": "12933:64:8",
													"nodeType": "YulBlock",
													"src": "12933:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12955:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12955:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12963:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12963:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12951:3:8"
																		},
																		"nativeSrc": "12951:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12951:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12967:22:8",
																		"nodeType": "YulLiteral",
																		"src": "12967:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12944:6:8"
																},
																"nativeSrc": "12944:46:8",
																"nodeType": "YulFunctionCall",
																"src": "12944:46:8"
															},
															"nativeSrc": "12944:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "12944:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "12827:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12925:6:8",
														"nodeType": "YulTypedName",
														"src": "12925:6:8",
														"type": ""
													}
												],
												"src": "12827:170:8"
											},
											{
												"body": {
													"nativeSrc": "13149:220:8",
													"nodeType": "YulBlock",
													"src": "13149:220:8",
													"statements": [
														{
															"nativeSrc": "13159:74:8",
															"nodeType": "YulAssignment",
															"src": "13159:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13225:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13230:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13230:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13166:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13166:58:8"
																},
																"nativeSrc": "13166:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13166:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13159:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13159:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13331:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13331:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "13242:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13242:88:8"
																},
																"nativeSrc": "13242:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13242:93:8"
															},
															"nativeSrc": "13242:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13242:93:8"
														},
														{
															"nativeSrc": "13344:19:8",
															"nodeType": "YulAssignment",
															"src": "13344:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13355:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13355:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13360:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13360:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13351:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13351:3:8"
																},
																"nativeSrc": "13351:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13351:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13344:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13344:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13003:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13137:3:8",
														"nodeType": "YulTypedName",
														"src": "13137:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13145:3:8",
														"nodeType": "YulTypedName",
														"src": "13145:3:8",
														"type": ""
													}
												],
												"src": "13003:366:8"
											},
											{
												"body": {
													"nativeSrc": "13546:248:8",
													"nodeType": "YulBlock",
													"src": "13546:248:8",
													"statements": [
														{
															"nativeSrc": "13556:26:8",
															"nodeType": "YulAssignment",
															"src": "13556:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13568:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13568:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13579:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13579:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13564:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13564:3:8"
																},
																"nativeSrc": "13564:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13564:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13556:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13556:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13603:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13603:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13614:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13614:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13599:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13599:3:8"
																		},
																		"nativeSrc": "13599:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13599:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13622:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13622:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13628:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13628:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13618:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13618:3:8"
																		},
																		"nativeSrc": "13618:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13618:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13592:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13592:6:8"
																},
																"nativeSrc": "13592:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13592:47:8"
															},
															"nativeSrc": "13592:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13592:47:8"
														},
														{
															"nativeSrc": "13648:139:8",
															"nodeType": "YulAssignment",
															"src": "13648:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13782:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13782:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13656:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13656:124:8"
																},
																"nativeSrc": "13656:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13656:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13648:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13648:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13375:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13526:9:8",
														"nodeType": "YulTypedName",
														"src": "13526:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13541:4:8",
														"nodeType": "YulTypedName",
														"src": "13541:4:8",
														"type": ""
													}
												],
												"src": "13375:419:8"
											},
											{
												"body": {
													"nativeSrc": "13854:87:8",
													"nodeType": "YulBlock",
													"src": "13854:87:8",
													"statements": [
														{
															"nativeSrc": "13864:11:8",
															"nodeType": "YulAssignment",
															"src": "13864:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "13872:3:8",
																"nodeType": "YulIdentifier",
																"src": "13872:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13864:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13864:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13892:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13892:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13895:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13895:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13885:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13885:6:8"
																},
																"nativeSrc": "13885:14:8",
																"nodeType": "YulFunctionCall",
																"src": "13885:14:8"
															},
															"nativeSrc": "13885:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "13885:14:8"
														},
														{
															"nativeSrc": "13908:26:8",
															"nodeType": "YulAssignment",
															"src": "13908:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13926:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13926:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13929:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13929:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13916:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "13916:9:8"
																},
																"nativeSrc": "13916:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13916:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13908:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13908:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13800:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13841:3:8",
														"nodeType": "YulTypedName",
														"src": "13841:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13849:4:8",
														"nodeType": "YulTypedName",
														"src": "13849:4:8",
														"type": ""
													}
												],
												"src": "13800:141:8"
											},
											{
												"body": {
													"nativeSrc": "13991:49:8",
													"nodeType": "YulBlock",
													"src": "13991:49:8",
													"statements": [
														{
															"nativeSrc": "14001:33:8",
															"nodeType": "YulAssignment",
															"src": "14001:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14019:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "14019:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14026:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14026:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14015:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14015:3:8"
																		},
																		"nativeSrc": "14015:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14015:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14031:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14031:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14011:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14011:3:8"
																},
																"nativeSrc": "14011:23:8",
																"nodeType": "YulFunctionCall",
																"src": "14011:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14001:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14001:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13947:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13974:5:8",
														"nodeType": "YulTypedName",
														"src": "13974:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13984:6:8",
														"nodeType": "YulTypedName",
														"src": "13984:6:8",
														"type": ""
													}
												],
												"src": "13947:93:8"
											},
											{
												"body": {
													"nativeSrc": "14099:54:8",
													"nodeType": "YulBlock",
													"src": "14099:54:8",
													"statements": [
														{
															"nativeSrc": "14109:37:8",
															"nodeType": "YulAssignment",
															"src": "14109:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14134:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14134:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14140:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14140:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14130:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14130:3:8"
																},
																"nativeSrc": "14130:16:8",
																"nodeType": "YulFunctionCall",
																"src": "14130:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14109:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "14109:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14046:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14074:4:8",
														"nodeType": "YulTypedName",
														"src": "14074:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14080:5:8",
														"nodeType": "YulTypedName",
														"src": "14080:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14090:8:8",
														"nodeType": "YulTypedName",
														"src": "14090:8:8",
														"type": ""
													}
												],
												"src": "14046:107:8"
											},
											{
												"body": {
													"nativeSrc": "14235:317:8",
													"nodeType": "YulBlock",
													"src": "14235:317:8",
													"statements": [
														{
															"nativeSrc": "14245:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14245:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14266:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "14266:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14278:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14262:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14262:3:8"
																},
																"nativeSrc": "14262:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14262:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14249:9:8",
																	"nodeType": "YulTypedName",
																	"src": "14249:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14289:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14289:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14320:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14320:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14331:66:8",
																		"nodeType": "YulLiteral",
																		"src": "14331:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14301:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "14301:18:8"
																},
																"nativeSrc": "14301:97:8",
																"nodeType": "YulFunctionCall",
																"src": "14301:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14293:4:8",
																	"nodeType": "YulTypedName",
																	"src": "14293:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14407:51:8",
															"nodeType": "YulAssignment",
															"src": "14407:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14438:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14438:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14449:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "14449:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14419:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "14419:18:8"
																},
																"nativeSrc": "14419:39:8",
																"nodeType": "YulFunctionCall",
																"src": "14419:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14407:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "14407:8:8"
																}
															]
														},
														{
															"nativeSrc": "14467:30:8",
															"nodeType": "YulAssignment",
															"src": "14467:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14480:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14480:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14491:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14491:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14487:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14487:3:8"
																		},
																		"nativeSrc": "14487:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14487:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14476:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14476:3:8"
																},
																"nativeSrc": "14476:21:8",
																"nodeType": "YulFunctionCall",
																"src": "14476:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14467:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14467:5:8"
																}
															]
														},
														{
															"nativeSrc": "14506:40:8",
															"nodeType": "YulAssignment",
															"src": "14506:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14519:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14519:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14530:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "14530:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14540:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14540:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14526:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14526:3:8"
																		},
																		"nativeSrc": "14526:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14526:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14516:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14516:2:8"
																},
																"nativeSrc": "14516:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14516:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14506:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14506:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14159:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14196:5:8",
														"nodeType": "YulTypedName",
														"src": "14196:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14203:10:8",
														"nodeType": "YulTypedName",
														"src": "14203:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14215:8:8",
														"nodeType": "YulTypedName",
														"src": "14215:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14228:6:8",
														"nodeType": "YulTypedName",
														"src": "14228:6:8",
														"type": ""
													}
												],
												"src": "14159:393:8"
											},
											{
												"body": {
													"nativeSrc": "14590:28:8",
													"nodeType": "YulBlock",
													"src": "14590:28:8",
													"statements": [
														{
															"nativeSrc": "14600:12:8",
															"nodeType": "YulAssignment",
															"src": "14600:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "14607:5:8",
																"nodeType": "YulIdentifier",
																"src": "14607:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14600:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14600:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14558:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14576:5:8",
														"nodeType": "YulTypedName",
														"src": "14576:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14586:3:8",
														"nodeType": "YulTypedName",
														"src": "14586:3:8",
														"type": ""
													}
												],
												"src": "14558:60:8"
											},
											{
												"body": {
													"nativeSrc": "14684:82:8",
													"nodeType": "YulBlock",
													"src": "14684:82:8",
													"statements": [
														{
															"nativeSrc": "14694:66:8",
															"nodeType": "YulAssignment",
															"src": "14694:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14752:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "14752:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14734:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "14734:17:8"
																				},
																				"nativeSrc": "14734:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14734:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14725:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "14725:8:8"
																		},
																		"nativeSrc": "14725:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14725:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14707:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14707:17:8"
																},
																"nativeSrc": "14707:53:8",
																"nodeType": "YulFunctionCall",
																"src": "14707:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14694:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "14694:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14624:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14664:5:8",
														"nodeType": "YulTypedName",
														"src": "14664:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14674:9:8",
														"nodeType": "YulTypedName",
														"src": "14674:9:8",
														"type": ""
													}
												],
												"src": "14624:142:8"
											},
											{
												"body": {
													"nativeSrc": "14819:28:8",
													"nodeType": "YulBlock",
													"src": "14819:28:8",
													"statements": [
														{
															"nativeSrc": "14829:12:8",
															"nodeType": "YulAssignment",
															"src": "14829:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "14836:5:8",
																"nodeType": "YulIdentifier",
																"src": "14836:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14829:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14772:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14805:5:8",
														"nodeType": "YulTypedName",
														"src": "14805:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14815:3:8",
														"nodeType": "YulTypedName",
														"src": "14815:3:8",
														"type": ""
													}
												],
												"src": "14772:75:8"
											},
											{
												"body": {
													"nativeSrc": "14929:193:8",
													"nodeType": "YulBlock",
													"src": "14929:193:8",
													"statements": [
														{
															"nativeSrc": "14939:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14939:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14994:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "14994:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14963:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "14963:30:8"
																},
																"nativeSrc": "14963:39:8",
																"nodeType": "YulFunctionCall",
																"src": "14963:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14943:16:8",
																	"nodeType": "YulTypedName",
																	"src": "14943:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15018:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15018:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15058:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "15058:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15052:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15052:5:8"
																				},
																				"nativeSrc": "15052:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15052:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15065:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15065:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15097:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "15097:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15073:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "15073:23:8"
																				},
																				"nativeSrc": "15073:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15073:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15024:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "15024:27:8"
																		},
																		"nativeSrc": "15024:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15024:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15011:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15011:6:8"
																},
																"nativeSrc": "15011:105:8",
																"nodeType": "YulFunctionCall",
																"src": "15011:105:8"
															},
															"nativeSrc": "15011:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "15011:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14853:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14906:4:8",
														"nodeType": "YulTypedName",
														"src": "14906:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14912:6:8",
														"nodeType": "YulTypedName",
														"src": "14912:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14920:7:8",
														"nodeType": "YulTypedName",
														"src": "14920:7:8",
														"type": ""
													}
												],
												"src": "14853:269:8"
											},
											{
												"body": {
													"nativeSrc": "15177:24:8",
													"nodeType": "YulBlock",
													"src": "15177:24:8",
													"statements": [
														{
															"nativeSrc": "15187:8:8",
															"nodeType": "YulAssignment",
															"src": "15187:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "15194:1:8",
																"nodeType": "YulLiteral",
																"src": "15194:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15187:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15187:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15128:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15173:3:8",
														"nodeType": "YulTypedName",
														"src": "15173:3:8",
														"type": ""
													}
												],
												"src": "15128:73:8"
											},
											{
												"body": {
													"nativeSrc": "15260:136:8",
													"nodeType": "YulBlock",
													"src": "15260:136:8",
													"statements": [
														{
															"nativeSrc": "15270:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15270:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15284:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "15284:30:8"
																},
																"nativeSrc": "15284:32:8",
																"nodeType": "YulFunctionCall",
																"src": "15284:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15274:6:8",
																	"nodeType": "YulTypedName",
																	"src": "15274:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15369:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15369:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15375:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15375:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15383:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15383:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15325:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15325:43:8"
																},
																"nativeSrc": "15325:65:8",
																"nodeType": "YulFunctionCall",
																"src": "15325:65:8"
															},
															"nativeSrc": "15325:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "15325:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15207:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15246:4:8",
														"nodeType": "YulTypedName",
														"src": "15246:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15252:6:8",
														"nodeType": "YulTypedName",
														"src": "15252:6:8",
														"type": ""
													}
												],
												"src": "15207:189:8"
											},
											{
												"body": {
													"nativeSrc": "15452:136:8",
													"nodeType": "YulBlock",
													"src": "15452:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15519:63:8",
																"nodeType": "YulBlock",
																"src": "15519:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15563:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15563:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15570:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15570:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15533:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "15533:29:8"
																			},
																			"nativeSrc": "15533:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15533:39:8"
																		},
																		"nativeSrc": "15533:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15533:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15472:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15472:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15479:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15479:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15469:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15469:2:8"
																},
																"nativeSrc": "15469:14:8",
																"nodeType": "YulFunctionCall",
																"src": "15469:14:8"
															},
															"nativeSrc": "15462:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15484:26:8",
																"nodeType": "YulBlock",
																"src": "15484:26:8",
																"statements": [
																	{
																		"nativeSrc": "15486:22:8",
																		"nodeType": "YulAssignment",
																		"src": "15486:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15499:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15499:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15506:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15506:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15495:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15495:3:8"
																			},
																			"nativeSrc": "15495:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15495:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15486:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15486:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15466:2:8",
																"nodeType": "YulBlock",
																"src": "15466:2:8",
																"statements": []
															},
															"src": "15462:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15402:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15440:5:8",
														"nodeType": "YulTypedName",
														"src": "15440:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15447:3:8",
														"nodeType": "YulTypedName",
														"src": "15447:3:8",
														"type": ""
													}
												],
												"src": "15402:186:8"
											},
											{
												"body": {
													"nativeSrc": "15673:464:8",
													"nodeType": "YulBlock",
													"src": "15673:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15699:431:8",
																"nodeType": "YulBlock",
																"src": "15699:431:8",
																"statements": [
																	{
																		"nativeSrc": "15713:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15713:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15761:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "15761:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15729:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "15729:31:8"
																			},
																			"nativeSrc": "15729:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15729:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15717:8:8",
																				"nodeType": "YulTypedName",
																				"src": "15717:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15780:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15780:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15803:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "15803:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15831:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "15831:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15813:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "15813:17:8"
																					},
																					"nativeSrc": "15813:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "15813:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15799:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15799:3:8"
																			},
																			"nativeSrc": "15799:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15799:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15784:11:8",
																				"nodeType": "YulTypedName",
																				"src": "15784:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16000:27:8",
																			"nodeType": "YulBlock",
																			"src": "16000:27:8",
																			"statements": [
																				{
																					"nativeSrc": "16002:23:8",
																					"nodeType": "YulAssignment",
																					"src": "16002:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16017:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "16017:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16002:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "16002:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15984:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "15984:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15996:2:8",
																					"nodeType": "YulLiteral",
																					"src": "15996:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15981:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "15981:2:8"
																			},
																			"nativeSrc": "15981:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15981:18:8"
																		},
																		"nativeSrc": "15978:49:8",
																		"nodeType": "YulIf",
																		"src": "15978:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16069:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "16069:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16086:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "16086:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16114:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16114:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16096:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "16096:17:8"
																							},
																							"nativeSrc": "16096:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "16096:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16082:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "16082:3:8"
																					},
																					"nativeSrc": "16082:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16082:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16040:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "16040:28:8"
																			},
																			"nativeSrc": "16040:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16040:80:8"
																		},
																		"nativeSrc": "16040:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16040:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15690:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15690:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15695:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15695:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15687:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15687:2:8"
																},
																"nativeSrc": "15687:11:8",
																"nodeType": "YulFunctionCall",
																"src": "15687:11:8"
															},
															"nativeSrc": "15684:446:8",
															"nodeType": "YulIf",
															"src": "15684:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15594:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15649:5:8",
														"nodeType": "YulTypedName",
														"src": "15649:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15656:3:8",
														"nodeType": "YulTypedName",
														"src": "15656:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15661:10:8",
														"nodeType": "YulTypedName",
														"src": "15661:10:8",
														"type": ""
													}
												],
												"src": "15594:543:8"
											},
											{
												"body": {
													"nativeSrc": "16206:54:8",
													"nodeType": "YulBlock",
													"src": "16206:54:8",
													"statements": [
														{
															"nativeSrc": "16216:37:8",
															"nodeType": "YulAssignment",
															"src": "16216:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16241:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16241:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16247:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16247:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16237:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16237:3:8"
																},
																"nativeSrc": "16237:16:8",
																"nodeType": "YulFunctionCall",
																"src": "16237:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16216:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "16216:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16143:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16181:4:8",
														"nodeType": "YulTypedName",
														"src": "16181:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16187:5:8",
														"nodeType": "YulTypedName",
														"src": "16187:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16197:8:8",
														"nodeType": "YulTypedName",
														"src": "16197:8:8",
														"type": ""
													}
												],
												"src": "16143:117:8"
											},
											{
												"body": {
													"nativeSrc": "16317:118:8",
													"nodeType": "YulBlock",
													"src": "16317:118:8",
													"statements": [
														{
															"nativeSrc": "16327:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16327:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16376:1:8",
																						"nodeType": "YulLiteral",
																						"src": "16376:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16379:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "16379:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16372:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16372:3:8"
																				},
																				"nativeSrc": "16372:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16372:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16391:1:8",
																						"nodeType": "YulLiteral",
																						"src": "16391:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16387:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16387:3:8"
																				},
																				"nativeSrc": "16387:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16387:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16343:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "16343:28:8"
																		},
																		"nativeSrc": "16343:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16343:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16339:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16339:3:8"
																},
																"nativeSrc": "16339:56:8",
																"nodeType": "YulFunctionCall",
																"src": "16339:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16331:4:8",
																	"nodeType": "YulTypedName",
																	"src": "16331:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16404:25:8",
															"nodeType": "YulAssignment",
															"src": "16404:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16418:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16418:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16424:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16424:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16414:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16414:3:8"
																},
																"nativeSrc": "16414:15:8",
																"nodeType": "YulFunctionCall",
																"src": "16414:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16404:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16404:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16266:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16294:4:8",
														"nodeType": "YulTypedName",
														"src": "16294:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16300:5:8",
														"nodeType": "YulTypedName",
														"src": "16300:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16310:6:8",
														"nodeType": "YulTypedName",
														"src": "16310:6:8",
														"type": ""
													}
												],
												"src": "16266:169:8"
											},
											{
												"body": {
													"nativeSrc": "16521:214:8",
													"nodeType": "YulBlock",
													"src": "16521:214:8",
													"statements": [
														{
															"nativeSrc": "16654:37:8",
															"nodeType": "YulAssignment",
															"src": "16654:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16681:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16681:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16687:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16687:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16662:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "16662:18:8"
																},
																"nativeSrc": "16662:29:8",
																"nodeType": "YulFunctionCall",
																"src": "16662:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16654:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16654:4:8"
																}
															]
														},
														{
															"nativeSrc": "16700:29:8",
															"nodeType": "YulAssignment",
															"src": "16700:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16711:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16711:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16721:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16721:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16724:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "16724:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16717:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16717:3:8"
																		},
																		"nativeSrc": "16717:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16717:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16708:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16708:2:8"
																},
																"nativeSrc": "16708:21:8",
																"nodeType": "YulFunctionCall",
																"src": "16708:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16700:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16700:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16440:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16502:4:8",
														"nodeType": "YulTypedName",
														"src": "16502:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16508:3:8",
														"nodeType": "YulTypedName",
														"src": "16508:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16516:4:8",
														"nodeType": "YulTypedName",
														"src": "16516:4:8",
														"type": ""
													}
												],
												"src": "16440:295:8"
											},
											{
												"body": {
													"nativeSrc": "16832:1303:8",
													"nodeType": "YulBlock",
													"src": "16832:1303:8",
													"statements": [
														{
															"nativeSrc": "16843:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16843:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16890:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16890:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16857:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "16857:32:8"
																},
																"nativeSrc": "16857:37:8",
																"nodeType": "YulFunctionCall",
																"src": "16857:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16847:6:8",
																	"nodeType": "YulTypedName",
																	"src": "16847:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16979:22:8",
																"nodeType": "YulBlock",
																"src": "16979:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16981:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "16981:16:8"
																			},
																			"nativeSrc": "16981:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16981:18:8"
																		},
																		"nativeSrc": "16981:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16981:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16951:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16951:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16959:18:8",
																		"nodeType": "YulLiteral",
																		"src": "16959:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16948:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16948:2:8"
																},
																"nativeSrc": "16948:30:8",
																"nodeType": "YulFunctionCall",
																"src": "16948:30:8"
															},
															"nativeSrc": "16945:56:8",
															"nodeType": "YulIf",
															"src": "16945:56:8"
														},
														{
															"nativeSrc": "17011:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17011:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17057:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17057:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17051:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "17051:5:8"
																		},
																		"nativeSrc": "17051:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17051:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17025:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "17025:25:8"
																},
																"nativeSrc": "17025:38:8",
																"nodeType": "YulFunctionCall",
																"src": "17025:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17015:6:8",
																	"nodeType": "YulTypedName",
																	"src": "17015:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17156:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17156:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17162:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17162:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17170:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17170:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17110:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "17110:45:8"
																},
																"nativeSrc": "17110:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17110:67:8"
															},
															"nativeSrc": "17110:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "17110:67:8"
														},
														{
															"nativeSrc": "17187:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17187:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "17204:1:8",
																"nodeType": "YulLiteral",
																"src": "17204:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17191:9:8",
																	"nodeType": "YulTypedName",
																	"src": "17191:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17215:17:8",
															"nodeType": "YulAssignment",
															"src": "17215:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "17228:4:8",
																"nodeType": "YulLiteral",
																"src": "17228:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17215:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "17215:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17279:611:8",
																		"nodeType": "YulBlock",
																		"src": "17279:611:8",
																		"statements": [
																			{
																				"nativeSrc": "17293:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17293:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17312:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "17312:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17324:4:8",
																									"nodeType": "YulLiteral",
																									"src": "17324:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17320:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "17320:3:8"
																							},
																							"nativeSrc": "17320:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "17320:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17308:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "17308:3:8"
																					},
																					"nativeSrc": "17308:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17308:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17297:7:8",
																						"nodeType": "YulTypedName",
																						"src": "17297:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17344:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17344:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17390:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "17390:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17358:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "17358:31:8"
																					},
																					"nativeSrc": "17358:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17358:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17348:6:8",
																						"nodeType": "YulTypedName",
																						"src": "17348:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17408:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17408:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17417:1:8",
																					"nodeType": "YulLiteral",
																					"src": "17417:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17412:1:8",
																						"nodeType": "YulTypedName",
																						"src": "17412:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17476:163:8",
																					"nodeType": "YulBlock",
																					"src": "17476:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17501:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "17501:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17519:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "17519:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17524:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "17524:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17515:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "17515:3:8"
																												},
																												"nativeSrc": "17515:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "17515:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17509:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "17509:5:8"
																										},
																										"nativeSrc": "17509:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "17509:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17494:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "17494:6:8"
																								},
																								"nativeSrc": "17494:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17494:42:8"
																							},
																							"nativeSrc": "17494:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "17494:42:8"
																						},
																						{
																							"nativeSrc": "17553:24:8",
																							"nodeType": "YulAssignment",
																							"src": "17553:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17567:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "17567:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17575:1:8",
																										"nodeType": "YulLiteral",
																										"src": "17575:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17563:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "17563:3:8"
																								},
																								"nativeSrc": "17563:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17563:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17553:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "17553:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17594:31:8",
																							"nodeType": "YulAssignment",
																							"src": "17594:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17611:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "17611:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17622:2:8",
																										"nodeType": "YulLiteral",
																										"src": "17622:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17607:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "17607:3:8"
																								},
																								"nativeSrc": "17607:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17607:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17594:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "17594:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17442:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "17442:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17445:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "17445:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17439:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "17439:2:8"
																					},
																					"nativeSrc": "17439:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17439:14:8"
																				},
																				"nativeSrc": "17431:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17454:21:8",
																					"nodeType": "YulBlock",
																					"src": "17454:21:8",
																					"statements": [
																						{
																							"nativeSrc": "17456:17:8",
																							"nodeType": "YulAssignment",
																							"src": "17456:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17465:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "17465:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17468:4:8",
																										"nodeType": "YulLiteral",
																										"src": "17468:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17461:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "17461:3:8"
																								},
																								"nativeSrc": "17461:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17461:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17456:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "17456:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17435:3:8",
																					"nodeType": "YulBlock",
																					"src": "17435:3:8",
																					"statements": []
																				},
																				"src": "17431:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "17675:156:8",
																					"nodeType": "YulBlock",
																					"src": "17675:156:8",
																					"statements": [
																						{
																							"nativeSrc": "17693:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17693:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17720:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "17720:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17725:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "17725:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17716:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "17716:3:8"
																										},
																										"nativeSrc": "17716:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "17716:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17710:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "17710:5:8"
																								},
																								"nativeSrc": "17710:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17710:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17697:9:8",
																									"nodeType": "YulTypedName",
																									"src": "17697:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17760:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "17760:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17787:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "17787:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17802:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "17802:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17810:4:8",
																														"nodeType": "YulLiteral",
																														"src": "17810:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17798:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "17798:3:8"
																												},
																												"nativeSrc": "17798:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "17798:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17768:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "17768:18:8"
																										},
																										"nativeSrc": "17768:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "17768:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17753:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "17753:6:8"
																								},
																								"nativeSrc": "17753:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17753:64:8"
																							},
																							"nativeSrc": "17753:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "17753:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17658:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "17658:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17667:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "17667:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17655:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "17655:2:8"
																					},
																					"nativeSrc": "17655:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17655:19:8"
																				},
																				"nativeSrc": "17652:179:8",
																				"nodeType": "YulIf",
																				"src": "17652:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17851:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "17851:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17865:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "17865:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17873:1:8",
																											"nodeType": "YulLiteral",
																											"src": "17873:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17861:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "17861:3:8"
																									},
																									"nativeSrc": "17861:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "17861:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17877:1:8",
																									"nodeType": "YulLiteral",
																									"src": "17877:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17857:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "17857:3:8"
																							},
																							"nativeSrc": "17857:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "17857:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17844:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "17844:6:8"
																					},
																					"nativeSrc": "17844:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "17844:36:8"
																				},
																				"nativeSrc": "17844:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "17844:36:8"
																			}
																		]
																	},
																	"nativeSrc": "17272:618:8",
																	"nodeType": "YulCase",
																	"src": "17272:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17277:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17277:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17907:222:8",
																		"nodeType": "YulBlock",
																		"src": "17907:222:8",
																		"statements": [
																			{
																				"nativeSrc": "17921:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17921:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17934:1:8",
																					"nodeType": "YulLiteral",
																					"src": "17934:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17925:5:8",
																						"nodeType": "YulTypedName",
																						"src": "17925:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17958:67:8",
																					"nodeType": "YulBlock",
																					"src": "17958:67:8",
																					"statements": [
																						{
																							"nativeSrc": "17976:35:8",
																							"nodeType": "YulAssignment",
																							"src": "17976:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17995:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "17995:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18000:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "18000:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17991:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "17991:3:8"
																										},
																										"nativeSrc": "17991:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "17991:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17985:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "17985:5:8"
																								},
																								"nativeSrc": "17985:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "17985:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17976:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "17976:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17951:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "17951:6:8"
																				},
																				"nativeSrc": "17948:77:8",
																				"nodeType": "YulIf",
																				"src": "17948:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18045:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "18045:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18104:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "18104:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18111:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "18111:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18051:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "18051:52:8"
																							},
																							"nativeSrc": "18051:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "18051:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18038:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "18038:6:8"
																					},
																					"nativeSrc": "18038:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18038:81:8"
																				},
																				"nativeSrc": "18038:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "18038:81:8"
																			}
																		]
																	},
																	"nativeSrc": "17899:230:8",
																	"nodeType": "YulCase",
																	"src": "17899:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17252:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17252:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17260:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17260:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17249:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17249:2:8"
																},
																"nativeSrc": "17249:14:8",
																"nodeType": "YulFunctionCall",
																"src": "17249:14:8"
															},
															"nativeSrc": "17242:887:8",
															"nodeType": "YulSwitch",
															"src": "17242:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16740:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16821:4:8",
														"nodeType": "YulTypedName",
														"src": "16821:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16827:3:8",
														"nodeType": "YulTypedName",
														"src": "16827:3:8",
														"type": ""
													}
												],
												"src": "16740:1395:8"
											},
											{
												"body": {
													"nativeSrc": "18169:152:8",
													"nodeType": "YulBlock",
													"src": "18169:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18186:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18186:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18189:77:8",
																		"nodeType": "YulLiteral",
																		"src": "18189:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18179:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18179:6:8"
																},
																"nativeSrc": "18179:88:8",
																"nodeType": "YulFunctionCall",
																"src": "18179:88:8"
															},
															"nativeSrc": "18179:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "18179:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18283:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18283:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18286:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18286:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18276:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18276:6:8"
																},
																"nativeSrc": "18276:15:8",
																"nodeType": "YulFunctionCall",
																"src": "18276:15:8"
															},
															"nativeSrc": "18276:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "18276:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18307:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18307:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18310:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18310:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18300:6:8"
																},
																"nativeSrc": "18300:15:8",
																"nodeType": "YulFunctionCall",
																"src": "18300:15:8"
															},
															"nativeSrc": "18300:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "18300:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18141:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "18141:180:8"
											},
											{
												"body": {
													"nativeSrc": "18368:126:8",
													"nodeType": "YulBlock",
													"src": "18368:126:8",
													"statements": [
														{
															"nativeSrc": "18378:31:8",
															"nodeType": "YulAssignment",
															"src": "18378:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18403:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18403:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "18387:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "18387:15:8"
																},
																"nativeSrc": "18387:22:8",
																"nodeType": "YulFunctionCall",
																"src": "18387:22:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18378:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "18378:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18437:22:8",
																"nodeType": "YulBlock",
																"src": "18437:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18439:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "18439:16:8"
																			},
																			"nativeSrc": "18439:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18439:18:8"
																		},
																		"nativeSrc": "18439:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "18439:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18424:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18424:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18431:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18431:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18421:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18421:2:8"
																},
																"nativeSrc": "18421:15:8",
																"nodeType": "YulFunctionCall",
																"src": "18421:15:8"
															},
															"nativeSrc": "18418:41:8",
															"nodeType": "YulIf",
															"src": "18418:41:8"
														},
														{
															"nativeSrc": "18468:20:8",
															"nodeType": "YulAssignment",
															"src": "18468:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18479:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18479:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18486:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18486:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18475:3:8"
																},
																"nativeSrc": "18475:13:8",
																"nodeType": "YulFunctionCall",
																"src": "18475:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18468:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18468:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "18327:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18354:5:8",
														"nodeType": "YulTypedName",
														"src": "18354:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18364:3:8",
														"nodeType": "YulTypedName",
														"src": "18364:3:8",
														"type": ""
													}
												],
												"src": "18327:167:8"
											},
											{
												"body": {
													"nativeSrc": "18606:63:8",
													"nodeType": "YulBlock",
													"src": "18606:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18628:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18628:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18636:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18636:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18624:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18624:3:8"
																		},
																		"nativeSrc": "18624:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18624:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18640:21:8",
																		"nodeType": "YulLiteral",
																		"src": "18640:21:8",
																		"type": "",
																		"value": "Insufficient amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18617:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18617:6:8"
																},
																"nativeSrc": "18617:45:8",
																"nodeType": "YulFunctionCall",
																"src": "18617:45:8"
															},
															"nativeSrc": "18617:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "18617:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
												"nativeSrc": "18500:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18598:6:8",
														"nodeType": "YulTypedName",
														"src": "18598:6:8",
														"type": ""
													}
												],
												"src": "18500:169:8"
											},
											{
												"body": {
													"nativeSrc": "18821:220:8",
													"nodeType": "YulBlock",
													"src": "18821:220:8",
													"statements": [
														{
															"nativeSrc": "18831:74:8",
															"nodeType": "YulAssignment",
															"src": "18831:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18897:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18897:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18902:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18902:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18838:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18838:58:8"
																},
																"nativeSrc": "18838:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18838:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18831:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18831:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19003:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19003:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																	"nativeSrc": "18914:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "18914:88:8"
																},
																"nativeSrc": "18914:93:8",
																"nodeType": "YulFunctionCall",
																"src": "18914:93:8"
															},
															"nativeSrc": "18914:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "18914:93:8"
														},
														{
															"nativeSrc": "19016:19:8",
															"nodeType": "YulAssignment",
															"src": "19016:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19027:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19027:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19032:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19032:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19023:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19023:3:8"
																},
																"nativeSrc": "19023:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19023:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19016:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19016:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18675:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18809:3:8",
														"nodeType": "YulTypedName",
														"src": "18809:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18817:3:8",
														"nodeType": "YulTypedName",
														"src": "18817:3:8",
														"type": ""
													}
												],
												"src": "18675:366:8"
											},
											{
												"body": {
													"nativeSrc": "19218:248:8",
													"nodeType": "YulBlock",
													"src": "19218:248:8",
													"statements": [
														{
															"nativeSrc": "19228:26:8",
															"nodeType": "YulAssignment",
															"src": "19228:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19240:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19240:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19251:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19251:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19236:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19236:3:8"
																},
																"nativeSrc": "19236:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19236:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19228:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19228:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19275:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19275:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19286:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19286:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19271:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19271:3:8"
																		},
																		"nativeSrc": "19271:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19271:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19294:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19294:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19300:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19300:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19290:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19290:3:8"
																		},
																		"nativeSrc": "19290:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19290:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19264:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19264:6:8"
																},
																"nativeSrc": "19264:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19264:47:8"
															},
															"nativeSrc": "19264:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "19264:47:8"
														},
														{
															"nativeSrc": "19320:139:8",
															"nodeType": "YulAssignment",
															"src": "19320:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19454:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19454:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19328:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "19328:124:8"
																},
																"nativeSrc": "19328:131:8",
																"nodeType": "YulFunctionCall",
																"src": "19328:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19320:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19320:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19047:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19198:9:8",
														"nodeType": "YulTypedName",
														"src": "19198:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19213:4:8",
														"nodeType": "YulTypedName",
														"src": "19213:4:8",
														"type": ""
													}
												],
												"src": "19047:419:8"
											},
											{
												"body": {
													"nativeSrc": "19578:58:8",
													"nodeType": "YulBlock",
													"src": "19578:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19600:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19600:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19608:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19608:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19596:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19596:3:8"
																		},
																		"nativeSrc": "19596:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19596:14:8"
																	},
																	{
																		"hexValue": "4974656d206e6f7420666f756e64",
																		"kind": "string",
																		"nativeSrc": "19612:16:8",
																		"nodeType": "YulLiteral",
																		"src": "19612:16:8",
																		"type": "",
																		"value": "Item not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19589:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19589:6:8"
																},
																"nativeSrc": "19589:40:8",
																"nodeType": "YulFunctionCall",
																"src": "19589:40:8"
															},
															"nativeSrc": "19589:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "19589:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
												"nativeSrc": "19472:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19570:6:8",
														"nodeType": "YulTypedName",
														"src": "19570:6:8",
														"type": ""
													}
												],
												"src": "19472:164:8"
											},
											{
												"body": {
													"nativeSrc": "19788:220:8",
													"nodeType": "YulBlock",
													"src": "19788:220:8",
													"statements": [
														{
															"nativeSrc": "19798:74:8",
															"nodeType": "YulAssignment",
															"src": "19798:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19864:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19864:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19869:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19869:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19805:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "19805:58:8"
																},
																"nativeSrc": "19805:67:8",
																"nodeType": "YulFunctionCall",
																"src": "19805:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19798:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19798:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19970:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19970:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																	"nativeSrc": "19881:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "19881:88:8"
																},
																"nativeSrc": "19881:93:8",
																"nodeType": "YulFunctionCall",
																"src": "19881:93:8"
															},
															"nativeSrc": "19881:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "19881:93:8"
														},
														{
															"nativeSrc": "19983:19:8",
															"nodeType": "YulAssignment",
															"src": "19983:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19994:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19994:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19999:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19999:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19990:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19990:3:8"
																},
																"nativeSrc": "19990:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19990:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19983:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19642:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19776:3:8",
														"nodeType": "YulTypedName",
														"src": "19776:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19784:3:8",
														"nodeType": "YulTypedName",
														"src": "19784:3:8",
														"type": ""
													}
												],
												"src": "19642:366:8"
											},
											{
												"body": {
													"nativeSrc": "20185:248:8",
													"nodeType": "YulBlock",
													"src": "20185:248:8",
													"statements": [
														{
															"nativeSrc": "20195:26:8",
															"nodeType": "YulAssignment",
															"src": "20195:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20207:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20207:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20218:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20218:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20203:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20203:3:8"
																},
																"nativeSrc": "20203:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20203:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20195:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20195:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20242:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20242:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20253:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20253:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20238:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20238:3:8"
																		},
																		"nativeSrc": "20238:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20238:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20261:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20261:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20267:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20267:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20257:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20257:3:8"
																		},
																		"nativeSrc": "20257:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20257:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20231:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20231:6:8"
																},
																"nativeSrc": "20231:47:8",
																"nodeType": "YulFunctionCall",
																"src": "20231:47:8"
															},
															"nativeSrc": "20231:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "20231:47:8"
														},
														{
															"nativeSrc": "20287:139:8",
															"nodeType": "YulAssignment",
															"src": "20287:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20421:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20421:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20295:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "20295:124:8"
																},
																"nativeSrc": "20295:131:8",
																"nodeType": "YulFunctionCall",
																"src": "20295:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20287:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20287:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20014:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20165:9:8",
														"nodeType": "YulTypedName",
														"src": "20165:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20180:4:8",
														"nodeType": "YulTypedName",
														"src": "20180:4:8",
														"type": ""
													}
												],
												"src": "20014:419:8"
											},
											{
												"body": {
													"nativeSrc": "20495:93:8",
													"nodeType": "YulBlock",
													"src": "20495:93:8",
													"statements": [
														{
															"nativeSrc": "20506:22:8",
															"nodeType": "YulAssignment",
															"src": "20506:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20522:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "20522:5:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "20516:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "20516:5:8"
																},
																"nativeSrc": "20516:12:8",
																"nodeType": "YulFunctionCall",
																"src": "20516:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20506:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20506:6:8"
																}
															]
														},
														{
															"nativeSrc": "20538:43:8",
															"nodeType": "YulAssignment",
															"src": "20538:43:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "20574:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20574:6:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "20548:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "20548:25:8"
																},
																"nativeSrc": "20548:33:8",
																"nodeType": "YulFunctionCall",
																"src": "20548:33:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20538:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20538:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_storage",
												"nativeSrc": "20439:149:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20478:5:8",
														"nodeType": "YulTypedName",
														"src": "20478:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20488:6:8",
														"nodeType": "YulTypedName",
														"src": "20488:6:8",
														"type": ""
													}
												],
												"src": "20439:149:8"
											},
											{
												"body": {
													"nativeSrc": "20683:1362:8",
													"nodeType": "YulBlock",
													"src": "20683:1362:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "20710:9:8",
																"nodeType": "YulBlock",
																"src": "20710:9:8",
																"statements": [
																	{
																		"nativeSrc": "20712:5:8",
																		"nodeType": "YulLeave",
																		"src": "20712:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20699:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20699:4:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "20705:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20705:3:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20696:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "20696:2:8"
																},
																"nativeSrc": "20696:13:8",
																"nodeType": "YulFunctionCall",
																"src": "20696:13:8"
															},
															"nativeSrc": "20693:26:8",
															"nodeType": "YulIf",
															"src": "20693:26:8"
														},
														{
															"nativeSrc": "20729:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "20729:48:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "20773:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "20773:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_storage",
																	"nativeSrc": "20743:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "20743:29:8"
																},
																"nativeSrc": "20743:34:8",
																"nodeType": "YulFunctionCall",
																"src": "20743:34:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "20733:6:8",
																	"nodeType": "YulTypedName",
																	"src": "20733:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20862:22:8",
																"nodeType": "YulBlock",
																"src": "20862:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "20864:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "20864:16:8"
																			},
																			"nativeSrc": "20864:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "20864:18:8"
																		},
																		"nativeSrc": "20864:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "20864:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20834:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20834:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20842:18:8",
																		"nodeType": "YulLiteral",
																		"src": "20842:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20831:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "20831:2:8"
																},
																"nativeSrc": "20831:30:8",
																"nodeType": "YulFunctionCall",
																"src": "20831:30:8"
															},
															"nativeSrc": "20828:56:8",
															"nodeType": "YulIf",
															"src": "20828:56:8"
														},
														{
															"nativeSrc": "20894:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "20894:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "20940:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20940:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "20934:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "20934:5:8"
																		},
																		"nativeSrc": "20934:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20934:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "20908:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "20908:25:8"
																},
																"nativeSrc": "20908:38:8",
																"nodeType": "YulFunctionCall",
																"src": "20908:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "20898:6:8",
																	"nodeType": "YulTypedName",
																	"src": "20898:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21039:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "21039:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "21045:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21045:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "21053:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21053:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "20993:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "20993:45:8"
																},
																"nativeSrc": "20993:67:8",
																"nodeType": "YulFunctionCall",
																"src": "20993:67:8"
															},
															"nativeSrc": "20993:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "20993:67:8"
														},
														{
															"nativeSrc": "21070:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "21070:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "21087:1:8",
																"nodeType": "YulLiteral",
																"src": "21087:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21074:9:8",
																	"nodeType": "YulTypedName",
																	"src": "21074:9:8",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "21135:665:8",
																		"nodeType": "YulBlock",
																		"src": "21135:665:8",
																		"statements": [
																			{
																				"nativeSrc": "21149:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21149:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "21168:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "21168:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "21180:4:8",
																									"nodeType": "YulLiteral",
																									"src": "21180:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "21176:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "21176:3:8"
																							},
																							"nativeSrc": "21176:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "21176:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "21164:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "21164:3:8"
																					},
																					"nativeSrc": "21164:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21164:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "21153:7:8",
																						"nodeType": "YulTypedName",
																						"src": "21153:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21199:43:8",
																				"nodeType": "YulAssignment",
																				"src": "21199:43:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "21238:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "21238:3:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "21206:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "21206:31:8"
																					},
																					"nativeSrc": "21206:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21206:36:8"
																				},
																				"variableNames": [
																					{
																						"name": "src",
																						"nativeSrc": "21199:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "21199:3:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "21255:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21255:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21301:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "21301:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "21269:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "21269:31:8"
																					},
																					"nativeSrc": "21269:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21269:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "21259:6:8",
																						"nodeType": "YulTypedName",
																						"src": "21259:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21319:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21319:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21328:1:8",
																					"nodeType": "YulLiteral",
																					"src": "21328:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "21323:1:8",
																						"nodeType": "YulTypedName",
																						"src": "21323:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21387:162:8",
																					"nodeType": "YulBlock",
																					"src": "21387:162:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21412:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "21412:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "21430:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "21430:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "21435:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "21435:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "21426:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "21426:3:8"
																												},
																												"nativeSrc": "21426:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "21426:19:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "21420:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "21420:5:8"
																										},
																										"nativeSrc": "21420:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "21420:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21405:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "21405:6:8"
																								},
																								"nativeSrc": "21405:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "21405:42:8"
																							},
																							"nativeSrc": "21405:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "21405:42:8"
																						},
																						{
																							"nativeSrc": "21464:24:8",
																							"nodeType": "YulAssignment",
																							"src": "21464:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21478:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "21478:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21486:1:8",
																										"nodeType": "YulLiteral",
																										"src": "21486:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21474:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "21474:3:8"
																								},
																								"nativeSrc": "21474:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "21474:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "21464:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "21464:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "21505:30:8",
																							"nodeType": "YulAssignment",
																							"src": "21505:30:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "21522:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "21522:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21533:1:8",
																										"nodeType": "YulLiteral",
																										"src": "21533:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21518:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "21518:3:8"
																								},
																								"nativeSrc": "21518:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "21518:17:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "21505:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "21505:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "21353:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "21353:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21356:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "21356:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21350:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "21350:2:8"
																					},
																					"nativeSrc": "21350:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21350:14:8"
																				},
																				"nativeSrc": "21342:207:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "21365:21:8",
																					"nodeType": "YulBlock",
																					"src": "21365:21:8",
																					"statements": [
																						{
																							"nativeSrc": "21367:17:8",
																							"nodeType": "YulAssignment",
																							"src": "21367:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "21376:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "21376:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21379:4:8",
																										"nodeType": "YulLiteral",
																										"src": "21379:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21372:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "21372:3:8"
																								},
																								"nativeSrc": "21372:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "21372:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "21367:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "21367:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "21346:3:8",
																					"nodeType": "YulBlock",
																					"src": "21346:3:8",
																					"statements": []
																				},
																				"src": "21342:207:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "21585:156:8",
																					"nodeType": "YulBlock",
																					"src": "21585:156:8",
																					"statements": [
																						{
																							"nativeSrc": "21603:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "21603:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21630:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "21630:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "21635:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "21635:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21626:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "21626:3:8"
																										},
																										"nativeSrc": "21626:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "21626:19:8"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "21620:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "21620:5:8"
																								},
																								"nativeSrc": "21620:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "21620:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "21607:9:8",
																									"nodeType": "YulTypedName",
																									"src": "21607:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21670:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "21670:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "21697:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "21697:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "21712:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "21712:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "21720:4:8",
																														"nodeType": "YulLiteral",
																														"src": "21720:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "21708:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "21708:3:8"
																												},
																												"nativeSrc": "21708:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "21708:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "21678:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "21678:18:8"
																										},
																										"nativeSrc": "21678:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "21678:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21663:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "21663:6:8"
																								},
																								"nativeSrc": "21663:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "21663:64:8"
																							},
																							"nativeSrc": "21663:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "21663:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21568:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "21568:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "21577:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "21577:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21565:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "21565:2:8"
																					},
																					"nativeSrc": "21565:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21565:19:8"
																				},
																				"nativeSrc": "21562:179:8",
																				"nodeType": "YulIf",
																				"src": "21562:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21761:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "21761:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "21775:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "21775:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "21783:1:8",
																											"nodeType": "YulLiteral",
																											"src": "21783:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "21771:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "21771:3:8"
																									},
																									"nativeSrc": "21771:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "21771:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "21787:1:8",
																									"nodeType": "YulLiteral",
																									"src": "21787:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "21767:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "21767:3:8"
																							},
																							"nativeSrc": "21767:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "21767:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21754:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "21754:6:8"
																					},
																					"nativeSrc": "21754:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21754:36:8"
																				},
																				"nativeSrc": "21754:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "21754:36:8"
																			}
																		]
																	},
																	"nativeSrc": "21128:672:8",
																	"nodeType": "YulCase",
																	"src": "21128:672:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21133:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21133:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "21817:222:8",
																		"nodeType": "YulBlock",
																		"src": "21817:222:8",
																		"statements": [
																			{
																				"nativeSrc": "21831:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21831:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21844:1:8",
																					"nodeType": "YulLiteral",
																					"src": "21844:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "21835:5:8",
																						"nodeType": "YulTypedName",
																						"src": "21835:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21868:67:8",
																					"nodeType": "YulBlock",
																					"src": "21868:67:8",
																					"statements": [
																						{
																							"nativeSrc": "21886:35:8",
																							"nodeType": "YulAssignment",
																							"src": "21886:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21905:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "21905:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "21910:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "21910:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21901:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "21901:3:8"
																										},
																										"nativeSrc": "21901:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "21901:19:8"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "21895:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "21895:5:8"
																								},
																								"nativeSrc": "21895:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "21895:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "21886:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "21886:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "21861:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "21861:6:8"
																				},
																				"nativeSrc": "21858:77:8",
																				"nodeType": "YulIf",
																				"src": "21858:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21955:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "21955:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "22014:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "22014:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "22021:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "22021:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "21961:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "21961:52:8"
																							},
																							"nativeSrc": "21961:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "21961:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21948:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "21948:6:8"
																					},
																					"nativeSrc": "21948:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "21948:81:8"
																				},
																				"nativeSrc": "21948:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "21948:81:8"
																			}
																		]
																	},
																	"nativeSrc": "21809:230:8",
																	"nodeType": "YulCase",
																	"src": "21809:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21108:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "21108:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21116:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21116:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21105:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "21105:2:8"
																},
																"nativeSrc": "21105:14:8",
																"nodeType": "YulFunctionCall",
																"src": "21105:14:8"
															},
															"nativeSrc": "21098:941:8",
															"nodeType": "YulSwitch",
															"src": "21098:941:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage",
												"nativeSrc": "20594:1451:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20672:4:8",
														"nodeType": "YulTypedName",
														"src": "20672:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "20678:3:8",
														"nodeType": "YulTypedName",
														"src": "20678:3:8",
														"type": ""
													}
												],
												"src": "20594:1451:8"
											},
											{
												"body": {
													"nativeSrc": "22164:742:8",
													"nodeType": "YulBlock",
													"src": "22164:742:8",
													"statements": [
														{
															"nativeSrc": "22174:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22174:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22197:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "22197:5:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "22191:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "22191:5:8"
																},
																"nativeSrc": "22191:12:8",
																"nodeType": "YulFunctionCall",
																"src": "22191:12:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "22178:9:8",
																	"nodeType": "YulTypedName",
																	"src": "22178:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22212:50:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22212:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "22252:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "22252:9:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "22226:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "22226:25:8"
																},
																"nativeSrc": "22226:36:8",
																"nodeType": "YulFunctionCall",
																"src": "22226:36:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "22216:6:8",
																	"nodeType": "YulTypedName",
																	"src": "22216:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22271:78:8",
															"nodeType": "YulAssignment",
															"src": "22271:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22337:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22337:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22342:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "22342:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22278:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "22278:58:8"
																},
																"nativeSrc": "22278:71:8",
																"nodeType": "YulFunctionCall",
																"src": "22278:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22271:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22271:3:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22398:157:8",
																		"nodeType": "YulBlock",
																		"src": "22398:157:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "22451:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "22451:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "22460:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "22460:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "22475:4:8",
																											"nodeType": "YulLiteral",
																											"src": "22475:4:8",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "22471:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "22471:3:8"
																									},
																									"nativeSrc": "22471:9:8",
																									"nodeType": "YulFunctionCall",
																									"src": "22471:9:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "22456:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "22456:3:8"
																							},
																							"nativeSrc": "22456:25:8",
																							"nodeType": "YulFunctionCall",
																							"src": "22456:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "22444:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "22444:6:8"
																					},
																					"nativeSrc": "22444:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "22444:38:8"
																				},
																				"nativeSrc": "22444:38:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "22444:38:8"
																			},
																			{
																				"nativeSrc": "22495:50:8",
																				"nodeType": "YulAssignment",
																				"src": "22495:50:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "22506:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "22506:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "22515:4:8",
																									"nodeType": "YulLiteral",
																									"src": "22515:4:8",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "22535:6:8",
																													"nodeType": "YulIdentifier",
																													"src": "22535:6:8"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "22528:6:8",
																												"nodeType": "YulIdentifier",
																												"src": "22528:6:8"
																											},
																											"nativeSrc": "22528:14:8",
																											"nodeType": "YulFunctionCall",
																											"src": "22528:14:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "22521:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "22521:6:8"
																									},
																									"nativeSrc": "22521:22:8",
																									"nodeType": "YulFunctionCall",
																									"src": "22521:22:8"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "22511:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "22511:3:8"
																							},
																							"nativeSrc": "22511:33:8",
																							"nodeType": "YulFunctionCall",
																							"src": "22511:33:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "22502:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "22502:3:8"
																					},
																					"nativeSrc": "22502:43:8",
																					"nodeType": "YulFunctionCall",
																					"src": "22502:43:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "22495:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "22495:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "22391:164:8",
																	"nodeType": "YulCase",
																	"src": "22391:164:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22396:1:8",
																		"nodeType": "YulLiteral",
																		"src": "22396:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "22571:329:8",
																		"nodeType": "YulBlock",
																		"src": "22571:329:8",
																		"statements": [
																			{
																				"nativeSrc": "22616:53:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22616:53:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "22663:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "22663:5:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "22631:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "22631:31:8"
																					},
																					"nativeSrc": "22631:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "22631:38:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "22620:7:8",
																						"nodeType": "YulTypedName",
																						"src": "22620:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22682:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22682:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22691:1:8",
																					"nodeType": "YulLiteral",
																					"src": "22691:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "22686:1:8",
																						"nodeType": "YulTypedName",
																						"src": "22686:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22749:110:8",
																					"nodeType": "YulBlock",
																					"src": "22749:110:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "22778:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "22778:3:8"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "22783:1:8",
																												"nodeType": "YulIdentifier",
																												"src": "22783:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22774:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "22774:3:8"
																										},
																										"nativeSrc": "22774:11:8",
																										"nodeType": "YulFunctionCall",
																										"src": "22774:11:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "22793:7:8",
																												"nodeType": "YulIdentifier",
																												"src": "22793:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "22787:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "22787:5:8"
																										},
																										"nativeSrc": "22787:14:8",
																										"nodeType": "YulFunctionCall",
																										"src": "22787:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "22767:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "22767:6:8"
																								},
																								"nativeSrc": "22767:35:8",
																								"nodeType": "YulFunctionCall",
																								"src": "22767:35:8"
																							},
																							"nativeSrc": "22767:35:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "22767:35:8"
																						},
																						{
																							"nativeSrc": "22819:26:8",
																							"nodeType": "YulAssignment",
																							"src": "22819:26:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "22834:7:8",
																										"nodeType": "YulIdentifier",
																										"src": "22834:7:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22843:1:8",
																										"nodeType": "YulLiteral",
																										"src": "22843:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22830:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "22830:3:8"
																								},
																								"nativeSrc": "22830:15:8",
																								"nodeType": "YulFunctionCall",
																								"src": "22830:15:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "22819:7:8",
																									"nodeType": "YulIdentifier",
																									"src": "22819:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "22716:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "22716:1:8"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "22719:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "22719:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22713:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "22713:2:8"
																					},
																					"nativeSrc": "22713:13:8",
																					"nodeType": "YulFunctionCall",
																					"src": "22713:13:8"
																				},
																				"nativeSrc": "22705:154:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "22727:21:8",
																					"nodeType": "YulBlock",
																					"src": "22727:21:8",
																					"statements": [
																						{
																							"nativeSrc": "22729:17:8",
																							"nodeType": "YulAssignment",
																							"src": "22729:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "22738:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "22738:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22741:4:8",
																										"nodeType": "YulLiteral",
																										"src": "22741:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22734:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "22734:3:8"
																								},
																								"nativeSrc": "22734:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "22734:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "22729:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "22729:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "22709:3:8",
																					"nodeType": "YulBlock",
																					"src": "22709:3:8",
																					"statements": []
																				},
																				"src": "22705:154:8"
																			},
																			{
																				"nativeSrc": "22872:18:8",
																				"nodeType": "YulAssignment",
																				"src": "22872:18:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "22883:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "22883:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "22888:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "22888:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "22879:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "22879:3:8"
																					},
																					"nativeSrc": "22879:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "22879:11:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "22872:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "22872:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "22564:336:8",
																	"nodeType": "YulCase",
																	"src": "22564:336:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22569:1:8",
																		"nodeType": "YulLiteral",
																		"src": "22569:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "22369:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "22369:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22380:1:8",
																		"nodeType": "YulLiteral",
																		"src": "22380:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22365:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22365:3:8"
																},
																"nativeSrc": "22365:17:8",
																"nodeType": "YulFunctionCall",
																"src": "22365:17:8"
															},
															"nativeSrc": "22358:542:8",
															"nodeType": "YulSwitch",
															"src": "22358:542:8"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22075:831:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22145:5:8",
														"nodeType": "YulTypedName",
														"src": "22145:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "22152:3:8",
														"nodeType": "YulTypedName",
														"src": "22152:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22160:3:8",
														"nodeType": "YulTypedName",
														"src": "22160:3:8",
														"type": ""
													}
												],
												"src": "22075:831:8"
											},
											{
												"body": {
													"nativeSrc": "23079:352:8",
													"nodeType": "YulBlock",
													"src": "23079:352:8",
													"statements": [
														{
															"nativeSrc": "23089:26:8",
															"nodeType": "YulAssignment",
															"src": "23089:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23101:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "23101:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23112:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23112:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23097:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23097:3:8"
																},
																"nativeSrc": "23097:18:8",
																"nodeType": "YulFunctionCall",
																"src": "23097:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23089:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "23089:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23165:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23165:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23178:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23178:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23189:1:8",
																				"nodeType": "YulLiteral",
																				"src": "23189:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23174:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23174:3:8"
																		},
																		"nativeSrc": "23174:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23174:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "23125:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "23125:39:8"
																},
																"nativeSrc": "23125:67:8",
																"nodeType": "YulFunctionCall",
																"src": "23125:67:8"
															},
															"nativeSrc": "23125:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "23125:67:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23213:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23213:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23224:2:8",
																				"nodeType": "YulLiteral",
																				"src": "23224:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23209:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23209:3:8"
																		},
																		"nativeSrc": "23209:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23209:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "23233:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23239:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23239:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23229:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23229:3:8"
																		},
																		"nativeSrc": "23229:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23229:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23202:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23202:6:8"
																},
																"nativeSrc": "23202:48:8",
																"nodeType": "YulFunctionCall",
																"src": "23202:48:8"
															},
															"nativeSrc": "23202:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "23202:48:8"
														},
														{
															"nativeSrc": "23259:83:8",
															"nodeType": "YulAssignment",
															"src": "23259:83:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23328:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23328:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "23337:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23337:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23267:60:8",
																	"nodeType": "YulIdentifier",
																	"src": "23267:60:8"
																},
																"nativeSrc": "23267:75:8",
																"nodeType": "YulFunctionCall",
																"src": "23267:75:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23259:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "23259:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23396:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23396:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23409:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "23409:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23420:2:8",
																				"nodeType": "YulLiteral",
																				"src": "23420:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23405:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "23405:3:8"
																		},
																		"nativeSrc": "23405:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23405:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23352:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "23352:43:8"
																},
																"nativeSrc": "23352:72:8",
																"nodeType": "YulFunctionCall",
																"src": "23352:72:8"
															},
															"nativeSrc": "23352:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "23352:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "22912:519:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23035:9:8",
														"nodeType": "YulTypedName",
														"src": "23035:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23047:6:8",
														"nodeType": "YulTypedName",
														"src": "23047:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23055:6:8",
														"nodeType": "YulTypedName",
														"src": "23055:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23063:6:8",
														"nodeType": "YulTypedName",
														"src": "23063:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23074:4:8",
														"nodeType": "YulTypedName",
														"src": "23074:4:8",
														"type": ""
													}
												],
												"src": "22912:519:8"
											},
											{
												"body": {
													"nativeSrc": "23465:152:8",
													"nodeType": "YulBlock",
													"src": "23465:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23482:1:8",
																		"nodeType": "YulLiteral",
																		"src": "23482:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23485:77:8",
																		"nodeType": "YulLiteral",
																		"src": "23485:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23475:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23475:6:8"
																},
																"nativeSrc": "23475:88:8",
																"nodeType": "YulFunctionCall",
																"src": "23475:88:8"
															},
															"nativeSrc": "23475:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "23475:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23579:1:8",
																		"nodeType": "YulLiteral",
																		"src": "23579:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23582:4:8",
																		"nodeType": "YulLiteral",
																		"src": "23582:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23572:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23572:6:8"
																},
																"nativeSrc": "23572:15:8",
																"nodeType": "YulFunctionCall",
																"src": "23572:15:8"
															},
															"nativeSrc": "23572:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "23572:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23603:1:8",
																		"nodeType": "YulLiteral",
																		"src": "23603:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23606:4:8",
																		"nodeType": "YulLiteral",
																		"src": "23606:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23596:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23596:6:8"
																},
																"nativeSrc": "23596:15:8",
																"nodeType": "YulFunctionCall",
																"src": "23596:15:8"
															},
															"nativeSrc": "23596:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "23596:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "23437:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "23437:180:8"
											},
											{
												"body": {
													"nativeSrc": "23670:32:8",
													"nodeType": "YulBlock",
													"src": "23670:32:8",
													"statements": [
														{
															"nativeSrc": "23680:16:8",
															"nodeType": "YulAssignment",
															"src": "23680:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "23691:5:8",
																"nodeType": "YulIdentifier",
																"src": "23691:5:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "23680:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "23680:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "23623:79:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23652:5:8",
														"nodeType": "YulTypedName",
														"src": "23652:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "23662:7:8",
														"nodeType": "YulTypedName",
														"src": "23662:7:8",
														"type": ""
													}
												],
												"src": "23623:79:8"
											},
											{
												"body": {
													"nativeSrc": "23791:74:8",
													"nodeType": "YulBlock",
													"src": "23791:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23808:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23808:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23851:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "23851:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "23833:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "23833:17:8"
																				},
																				"nativeSrc": "23833:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "23833:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "23813:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "23813:19:8"
																		},
																		"nativeSrc": "23813:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23813:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23801:6:8"
																},
																"nativeSrc": "23801:58:8",
																"nodeType": "YulFunctionCall",
																"src": "23801:58:8"
															},
															"nativeSrc": "23801:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "23801:58:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "23708:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23779:5:8",
														"nodeType": "YulTypedName",
														"src": "23779:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23786:3:8",
														"nodeType": "YulTypedName",
														"src": "23786:3:8",
														"type": ""
													}
												],
												"src": "23708:157:8"
											},
											{
												"body": {
													"nativeSrc": "23913:52:8",
													"nodeType": "YulBlock",
													"src": "23913:52:8",
													"statements": [
														{
															"nativeSrc": "23923:35:8",
															"nodeType": "YulAssignment",
															"src": "23923:35:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23948:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23948:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23952:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "23952:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "23944:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23944:3:8"
																},
																"nativeSrc": "23944:14:8",
																"nodeType": "YulFunctionCall",
																"src": "23944:14:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23923:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "23923:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "23871:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23894:5:8",
														"nodeType": "YulTypedName",
														"src": "23894:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23904:8:8",
														"nodeType": "YulTypedName",
														"src": "23904:8:8",
														"type": ""
													}
												],
												"src": "23871:94:8"
											},
											{
												"body": {
													"nativeSrc": "24018:47:8",
													"nodeType": "YulBlock",
													"src": "24018:47:8",
													"statements": [
														{
															"nativeSrc": "24028:31:8",
															"nodeType": "YulAssignment",
															"src": "24028:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24053:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "24053:5:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "24039:13:8",
																	"nodeType": "YulIdentifier",
																	"src": "24039:13:8"
																},
																"nativeSrc": "24039:20:8",
																"nodeType": "YulFunctionCall",
																"src": "24039:20:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "24028:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "24028:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "23971:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24000:5:8",
														"nodeType": "YulTypedName",
														"src": "24000:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "24010:7:8",
														"nodeType": "YulTypedName",
														"src": "24010:7:8",
														"type": ""
													}
												],
												"src": "23971:94:8"
											},
											{
												"body": {
													"nativeSrc": "24118:53:8",
													"nodeType": "YulBlock",
													"src": "24118:53:8",
													"statements": [
														{
															"nativeSrc": "24128:37:8",
															"nodeType": "YulAssignment",
															"src": "24128:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24159:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "24159:5:8"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "24139:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "24139:19:8"
																},
																"nativeSrc": "24139:26:8",
																"nodeType": "YulFunctionCall",
																"src": "24139:26:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "24128:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "24128:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "24071:100:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24100:5:8",
														"nodeType": "YulTypedName",
														"src": "24100:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "24110:7:8",
														"nodeType": "YulTypedName",
														"src": "24110:7:8",
														"type": ""
													}
												],
												"src": "24071:100:8"
											},
											{
												"body": {
													"nativeSrc": "24260:74:8",
													"nodeType": "YulBlock",
													"src": "24260:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24277:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24277:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24320:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "24320:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "24302:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "24302:17:8"
																				},
																				"nativeSrc": "24302:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "24302:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "24282:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "24282:19:8"
																		},
																		"nativeSrc": "24282:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24282:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24270:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24270:6:8"
																},
																"nativeSrc": "24270:58:8",
																"nodeType": "YulFunctionCall",
																"src": "24270:58:8"
															},
															"nativeSrc": "24270:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "24270:58:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "24177:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24248:5:8",
														"nodeType": "YulTypedName",
														"src": "24248:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24255:3:8",
														"nodeType": "YulTypedName",
														"src": "24255:3:8",
														"type": ""
													}
												],
												"src": "24177:157:8"
											},
											{
												"body": {
													"nativeSrc": "24484:253:8",
													"nodeType": "YulBlock",
													"src": "24484:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24557:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "24557:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24566:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24566:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "24495:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "24495:61:8"
																},
																"nativeSrc": "24495:75:8",
																"nodeType": "YulFunctionCall",
																"src": "24495:75:8"
															},
															"nativeSrc": "24495:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "24495:75:8"
														},
														{
															"nativeSrc": "24579:19:8",
															"nodeType": "YulAssignment",
															"src": "24579:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24590:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24590:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24595:2:8",
																		"nodeType": "YulLiteral",
																		"src": "24595:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24586:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24586:3:8"
																},
																"nativeSrc": "24586:12:8",
																"nodeType": "YulFunctionCall",
																"src": "24586:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24579:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24670:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "24670:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24679:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24679:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "24608:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "24608:61:8"
																},
																"nativeSrc": "24608:75:8",
																"nodeType": "YulFunctionCall",
																"src": "24608:75:8"
															},
															"nativeSrc": "24608:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "24608:75:8"
														},
														{
															"nativeSrc": "24692:19:8",
															"nodeType": "YulAssignment",
															"src": "24692:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24703:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24703:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24708:2:8",
																		"nodeType": "YulLiteral",
																		"src": "24708:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24699:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24699:3:8"
																},
																"nativeSrc": "24699:12:8",
																"nodeType": "YulFunctionCall",
																"src": "24699:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24692:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24692:3:8"
																}
															]
														},
														{
															"nativeSrc": "24721:10:8",
															"nodeType": "YulAssignment",
															"src": "24721:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "24728:3:8",
																"nodeType": "YulIdentifier",
																"src": "24728:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24721:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24721:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "24340:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24455:3:8",
														"nodeType": "YulTypedName",
														"src": "24455:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24461:6:8",
														"nodeType": "YulTypedName",
														"src": "24461:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24469:6:8",
														"nodeType": "YulTypedName",
														"src": "24469:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24480:3:8",
														"nodeType": "YulTypedName",
														"src": "24480:3:8",
														"type": ""
													}
												],
												"src": "24340:397:8"
											},
											{
												"body": {
													"nativeSrc": "24771:152:8",
													"nodeType": "YulBlock",
													"src": "24771:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24788:1:8",
																		"nodeType": "YulLiteral",
																		"src": "24788:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24791:77:8",
																		"nodeType": "YulLiteral",
																		"src": "24791:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24781:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24781:6:8"
																},
																"nativeSrc": "24781:88:8",
																"nodeType": "YulFunctionCall",
																"src": "24781:88:8"
															},
															"nativeSrc": "24781:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "24781:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24885:1:8",
																		"nodeType": "YulLiteral",
																		"src": "24885:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24888:4:8",
																		"nodeType": "YulLiteral",
																		"src": "24888:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24878:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24878:6:8"
																},
																"nativeSrc": "24878:15:8",
																"nodeType": "YulFunctionCall",
																"src": "24878:15:8"
															},
															"nativeSrc": "24878:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "24878:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24909:1:8",
																		"nodeType": "YulLiteral",
																		"src": "24909:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24912:4:8",
																		"nodeType": "YulLiteral",
																		"src": "24912:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24902:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24902:6:8"
																},
																"nativeSrc": "24902:15:8",
																"nodeType": "YulFunctionCall",
																"src": "24902:15:8"
															},
															"nativeSrc": "24902:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "24902:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "24743:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "24743:180:8"
											},
											{
												"body": {
													"nativeSrc": "24963:142:8",
													"nodeType": "YulBlock",
													"src": "24963:142:8",
													"statements": [
														{
															"nativeSrc": "24973:25:8",
															"nodeType": "YulAssignment",
															"src": "24973:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24996:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "24996:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24978:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "24978:17:8"
																},
																"nativeSrc": "24978:20:8",
																"nodeType": "YulFunctionCall",
																"src": "24978:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24973:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "24973:1:8"
																}
															]
														},
														{
															"nativeSrc": "25007:25:8",
															"nodeType": "YulAssignment",
															"src": "25007:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25030:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25030:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25012:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "25012:17:8"
																},
																"nativeSrc": "25012:20:8",
																"nodeType": "YulFunctionCall",
																"src": "25012:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25007:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "25007:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25054:22:8",
																"nodeType": "YulBlock",
																"src": "25054:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "25056:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "25056:16:8"
																			},
																			"nativeSrc": "25056:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "25056:18:8"
																		},
																		"nativeSrc": "25056:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "25056:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25051:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25051:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25044:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "25044:6:8"
																},
																"nativeSrc": "25044:9:8",
																"nodeType": "YulFunctionCall",
																"src": "25044:9:8"
															},
															"nativeSrc": "25041:35:8",
															"nodeType": "YulIf",
															"src": "25041:35:8"
														},
														{
															"nativeSrc": "25085:14:8",
															"nodeType": "YulAssignment",
															"src": "25085:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25094:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25094:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25097:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25097:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "25090:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25090:3:8"
																},
																"nativeSrc": "25090:9:8",
																"nodeType": "YulFunctionCall",
																"src": "25090:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "25085:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "25085:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "24929:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24952:1:8",
														"nodeType": "YulTypedName",
														"src": "24952:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24955:1:8",
														"nodeType": "YulTypedName",
														"src": "24955:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "24961:1:8",
														"nodeType": "YulTypedName",
														"src": "24961:1:8",
														"type": ""
													}
												],
												"src": "24929:176:8"
											},
											{
												"body": {
													"nativeSrc": "25159:362:8",
													"nodeType": "YulBlock",
													"src": "25159:362:8",
													"statements": [
														{
															"nativeSrc": "25169:25:8",
															"nodeType": "YulAssignment",
															"src": "25169:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25192:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25192:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25174:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "25174:17:8"
																},
																"nativeSrc": "25174:20:8",
																"nodeType": "YulFunctionCall",
																"src": "25174:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25169:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "25169:1:8"
																}
															]
														},
														{
															"nativeSrc": "25203:25:8",
															"nodeType": "YulAssignment",
															"src": "25203:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25226:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25226:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25208:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "25208:17:8"
																},
																"nativeSrc": "25208:20:8",
																"nodeType": "YulFunctionCall",
																"src": "25208:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25203:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "25203:1:8"
																}
															]
														},
														{
															"nativeSrc": "25237:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "25237:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25260:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25260:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25263:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "25263:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "25256:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25256:3:8"
																},
																"nativeSrc": "25256:9:8",
																"nodeType": "YulFunctionCall",
																"src": "25256:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "25241:11:8",
																	"nodeType": "YulTypedName",
																	"src": "25241:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25274:41:8",
															"nodeType": "YulAssignment",
															"src": "25274:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "25303:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "25303:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25285:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "25285:17:8"
																},
																"nativeSrc": "25285:30:8",
																"nodeType": "YulFunctionCall",
																"src": "25285:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "25274:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "25274:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25492:22:8",
																"nodeType": "YulBlock",
																"src": "25492:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25494:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "25494:16:8"
																			},
																			"nativeSrc": "25494:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "25494:18:8"
																		},
																		"nativeSrc": "25494:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "25494:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "25425:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "25425:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "25418:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "25418:6:8"
																				},
																				"nativeSrc": "25418:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "25418:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "25448:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "25448:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "25455:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "25455:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "25464:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "25464:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "25451:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "25451:3:8"
																						},
																						"nativeSrc": "25451:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "25451:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "25445:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "25445:2:8"
																				},
																				"nativeSrc": "25445:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "25445:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "25398:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "25398:2:8"
																		},
																		"nativeSrc": "25398:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25398:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25378:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "25378:6:8"
																},
																"nativeSrc": "25378:113:8",
																"nodeType": "YulFunctionCall",
																"src": "25378:113:8"
															},
															"nativeSrc": "25375:139:8",
															"nodeType": "YulIf",
															"src": "25375:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "25111:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25142:1:8",
														"nodeType": "YulTypedName",
														"src": "25142:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25145:1:8",
														"nodeType": "YulTypedName",
														"src": "25145:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "25151:7:8",
														"nodeType": "YulTypedName",
														"src": "25151:7:8",
														"type": ""
													}
												],
												"src": "25111:410:8"
											},
											{
												"body": {
													"nativeSrc": "25633:47:8",
													"nodeType": "YulBlock",
													"src": "25633:47:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25655:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "25655:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25663:1:8",
																				"nodeType": "YulLiteral",
																				"src": "25663:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25651:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25651:3:8"
																		},
																		"nativeSrc": "25651:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25651:14:8"
																	},
																	{
																		"hexValue": "776f6e",
																		"kind": "string",
																		"nativeSrc": "25667:5:8",
																		"nodeType": "YulLiteral",
																		"src": "25667:5:8",
																		"type": "",
																		"value": "won"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25644:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "25644:6:8"
																},
																"nativeSrc": "25644:29:8",
																"nodeType": "YulFunctionCall",
																"src": "25644:29:8"
															},
															"nativeSrc": "25644:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "25644:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
												"nativeSrc": "25527:153:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25625:6:8",
														"nodeType": "YulTypedName",
														"src": "25625:6:8",
														"type": ""
													}
												],
												"src": "25527:153:8"
											},
											{
												"body": {
													"nativeSrc": "25832:219:8",
													"nodeType": "YulBlock",
													"src": "25832:219:8",
													"statements": [
														{
															"nativeSrc": "25842:73:8",
															"nodeType": "YulAssignment",
															"src": "25842:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25908:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "25908:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25913:1:8",
																		"nodeType": "YulLiteral",
																		"src": "25913:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25849:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "25849:58:8"
																},
																"nativeSrc": "25849:66:8",
																"nodeType": "YulFunctionCall",
																"src": "25849:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25842:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25842:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26013:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "26013:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																	"nativeSrc": "25924:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "25924:88:8"
																},
																"nativeSrc": "25924:93:8",
																"nodeType": "YulFunctionCall",
																"src": "25924:93:8"
															},
															"nativeSrc": "25924:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "25924:93:8"
														},
														{
															"nativeSrc": "26026:19:8",
															"nodeType": "YulAssignment",
															"src": "26026:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26037:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "26037:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26042:2:8",
																		"nodeType": "YulLiteral",
																		"src": "26042:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26033:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26033:3:8"
																},
																"nativeSrc": "26033:12:8",
																"nodeType": "YulFunctionCall",
																"src": "26033:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26026:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26026:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25686:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25820:3:8",
														"nodeType": "YulTypedName",
														"src": "25820:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25828:3:8",
														"nodeType": "YulTypedName",
														"src": "25828:3:8",
														"type": ""
													}
												],
												"src": "25686:365:8"
											},
											{
												"body": {
													"nativeSrc": "26278:406:8",
													"nodeType": "YulBlock",
													"src": "26278:406:8",
													"statements": [
														{
															"nativeSrc": "26288:26:8",
															"nodeType": "YulAssignment",
															"src": "26288:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26300:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "26300:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26311:2:8",
																		"nodeType": "YulLiteral",
																		"src": "26311:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26296:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26296:3:8"
																},
																"nativeSrc": "26296:18:8",
																"nodeType": "YulFunctionCall",
																"src": "26296:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26288:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "26288:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26368:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "26368:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26381:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26381:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26392:1:8",
																				"nodeType": "YulLiteral",
																				"src": "26392:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26377:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26377:3:8"
																		},
																		"nativeSrc": "26377:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26377:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26324:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "26324:43:8"
																},
																"nativeSrc": "26324:71:8",
																"nodeType": "YulFunctionCall",
																"src": "26324:71:8"
															},
															"nativeSrc": "26324:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "26324:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26443:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "26443:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26456:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26456:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26467:2:8",
																				"nodeType": "YulLiteral",
																				"src": "26467:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26452:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26452:3:8"
																		},
																		"nativeSrc": "26452:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26452:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "26405:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "26405:37:8"
																},
																"nativeSrc": "26405:66:8",
																"nodeType": "YulFunctionCall",
																"src": "26405:66:8"
															},
															"nativeSrc": "26405:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "26405:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26492:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26492:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26503:2:8",
																				"nodeType": "YulLiteral",
																				"src": "26503:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26488:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26488:3:8"
																		},
																		"nativeSrc": "26488:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26488:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26512:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "26512:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26518:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26518:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26508:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26508:3:8"
																		},
																		"nativeSrc": "26508:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26508:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26481:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26481:6:8"
																},
																"nativeSrc": "26481:48:8",
																"nodeType": "YulFunctionCall",
																"src": "26481:48:8"
															},
															"nativeSrc": "26481:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "26481:48:8"
														},
														{
															"nativeSrc": "26538:139:8",
															"nodeType": "YulAssignment",
															"src": "26538:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26672:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "26672:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26546:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "26546:124:8"
																},
																"nativeSrc": "26546:131:8",
																"nodeType": "YulFunctionCall",
																"src": "26546:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26538:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "26538:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26057:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26242:9:8",
														"nodeType": "YulTypedName",
														"src": "26242:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26254:6:8",
														"nodeType": "YulTypedName",
														"src": "26254:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26262:6:8",
														"nodeType": "YulTypedName",
														"src": "26262:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26273:4:8",
														"nodeType": "YulTypedName",
														"src": "26273:4:8",
														"type": ""
													}
												],
												"src": "26057:627:8"
											},
											{
												"body": {
													"nativeSrc": "26796:48:8",
													"nodeType": "YulBlock",
													"src": "26796:48:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26818:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "26818:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26826:1:8",
																				"nodeType": "YulLiteral",
																				"src": "26826:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26814:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26814:3:8"
																		},
																		"nativeSrc": "26814:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26814:14:8"
																	},
																	{
																		"hexValue": "6c6f7374",
																		"kind": "string",
																		"nativeSrc": "26830:6:8",
																		"nodeType": "YulLiteral",
																		"src": "26830:6:8",
																		"type": "",
																		"value": "lost"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26807:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26807:6:8"
																},
																"nativeSrc": "26807:30:8",
																"nodeType": "YulFunctionCall",
																"src": "26807:30:8"
															},
															"nativeSrc": "26807:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "26807:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
												"nativeSrc": "26690:154:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26788:6:8",
														"nodeType": "YulTypedName",
														"src": "26788:6:8",
														"type": ""
													}
												],
												"src": "26690:154:8"
											},
											{
												"body": {
													"nativeSrc": "26996:219:8",
													"nodeType": "YulBlock",
													"src": "26996:219:8",
													"statements": [
														{
															"nativeSrc": "27006:73:8",
															"nodeType": "YulAssignment",
															"src": "27006:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27072:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27072:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27077:1:8",
																		"nodeType": "YulLiteral",
																		"src": "27077:1:8",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27013:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "27013:58:8"
																},
																"nativeSrc": "27013:66:8",
																"nodeType": "YulFunctionCall",
																"src": "27013:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27006:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27006:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27177:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27177:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																	"nativeSrc": "27088:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "27088:88:8"
																},
																"nativeSrc": "27088:93:8",
																"nodeType": "YulFunctionCall",
																"src": "27088:93:8"
															},
															"nativeSrc": "27088:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "27088:93:8"
														},
														{
															"nativeSrc": "27190:19:8",
															"nodeType": "YulAssignment",
															"src": "27190:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27201:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27201:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27206:2:8",
																		"nodeType": "YulLiteral",
																		"src": "27206:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27197:3:8"
																},
																"nativeSrc": "27197:12:8",
																"nodeType": "YulFunctionCall",
																"src": "27197:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27190:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26850:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26984:3:8",
														"nodeType": "YulTypedName",
														"src": "26984:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26992:3:8",
														"nodeType": "YulTypedName",
														"src": "26992:3:8",
														"type": ""
													}
												],
												"src": "26850:365:8"
											},
											{
												"body": {
													"nativeSrc": "27442:406:8",
													"nodeType": "YulBlock",
													"src": "27442:406:8",
													"statements": [
														{
															"nativeSrc": "27452:26:8",
															"nodeType": "YulAssignment",
															"src": "27452:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27464:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "27464:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27475:2:8",
																		"nodeType": "YulLiteral",
																		"src": "27475:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27460:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27460:3:8"
																},
																"nativeSrc": "27460:18:8",
																"nodeType": "YulFunctionCall",
																"src": "27460:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27452:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "27452:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27532:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27532:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "27545:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27556:1:8",
																				"nodeType": "YulLiteral",
																				"src": "27556:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27541:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "27541:3:8"
																		},
																		"nativeSrc": "27541:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27541:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27488:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "27488:43:8"
																},
																"nativeSrc": "27488:71:8",
																"nodeType": "YulFunctionCall",
																"src": "27488:71:8"
															},
															"nativeSrc": "27488:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "27488:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27607:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27607:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27620:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "27620:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27631:2:8",
																				"nodeType": "YulLiteral",
																				"src": "27631:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27616:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "27616:3:8"
																		},
																		"nativeSrc": "27616:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27616:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "27569:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "27569:37:8"
																},
																"nativeSrc": "27569:66:8",
																"nodeType": "YulFunctionCall",
																"src": "27569:66:8"
															},
															"nativeSrc": "27569:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "27569:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27656:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "27656:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27667:2:8",
																				"nodeType": "YulLiteral",
																				"src": "27667:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "27652:3:8"
																		},
																		"nativeSrc": "27652:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27652:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27676:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "27676:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27682:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "27682:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27672:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "27672:3:8"
																		},
																		"nativeSrc": "27672:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27672:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27645:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "27645:6:8"
																},
																"nativeSrc": "27645:48:8",
																"nodeType": "YulFunctionCall",
																"src": "27645:48:8"
															},
															"nativeSrc": "27645:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "27645:48:8"
														},
														{
															"nativeSrc": "27702:139:8",
															"nodeType": "YulAssignment",
															"src": "27702:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27836:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "27836:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27710:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "27710:124:8"
																},
																"nativeSrc": "27710:131:8",
																"nodeType": "YulFunctionCall",
																"src": "27710:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27702:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "27702:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27221:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27406:9:8",
														"nodeType": "YulTypedName",
														"src": "27406:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27418:6:8",
														"nodeType": "YulTypedName",
														"src": "27418:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27426:6:8",
														"nodeType": "YulTypedName",
														"src": "27426:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27437:4:8",
														"nodeType": "YulTypedName",
														"src": "27437:4:8",
														"type": ""
													}
												],
												"src": "27221:627:8"
											},
											{
												"body": {
													"nativeSrc": "27960:122:8",
													"nodeType": "YulBlock",
													"src": "27960:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27982:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "27982:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27990:1:8",
																				"nodeType": "YulLiteral",
																				"src": "27990:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27978:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "27978:3:8"
																		},
																		"nativeSrc": "27978:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27978:14:8"
																	},
																	{
																		"hexValue": "596f7527766520616c726561647920636c61696d656420796f75722077656c63",
																		"kind": "string",
																		"nativeSrc": "27994:34:8",
																		"nodeType": "YulLiteral",
																		"src": "27994:34:8",
																		"type": "",
																		"value": "You've already claimed your welc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "27971:6:8"
																},
																"nativeSrc": "27971:58:8",
																"nodeType": "YulFunctionCall",
																"src": "27971:58:8"
															},
															"nativeSrc": "27971:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "27971:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28050:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "28050:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28058:2:8",
																				"nodeType": "YulLiteral",
																				"src": "28058:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28046:3:8"
																		},
																		"nativeSrc": "28046:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28046:15:8"
																	},
																	{
																		"hexValue": "6f6d6520626f6e7573",
																		"kind": "string",
																		"nativeSrc": "28063:11:8",
																		"nodeType": "YulLiteral",
																		"src": "28063:11:8",
																		"type": "",
																		"value": "ome bonus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28039:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "28039:6:8"
																},
																"nativeSrc": "28039:36:8",
																"nodeType": "YulFunctionCall",
																"src": "28039:36:8"
															},
															"nativeSrc": "28039:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "28039:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
												"nativeSrc": "27854:228:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27952:6:8",
														"nodeType": "YulTypedName",
														"src": "27952:6:8",
														"type": ""
													}
												],
												"src": "27854:228:8"
											},
											{
												"body": {
													"nativeSrc": "28234:220:8",
													"nodeType": "YulBlock",
													"src": "28234:220:8",
													"statements": [
														{
															"nativeSrc": "28244:74:8",
															"nodeType": "YulAssignment",
															"src": "28244:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28310:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "28310:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28315:2:8",
																		"nodeType": "YulLiteral",
																		"src": "28315:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28251:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "28251:58:8"
																},
																"nativeSrc": "28251:67:8",
																"nodeType": "YulFunctionCall",
																"src": "28251:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28244:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28244:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28416:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "28416:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																	"nativeSrc": "28327:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "28327:88:8"
																},
																"nativeSrc": "28327:93:8",
																"nodeType": "YulFunctionCall",
																"src": "28327:93:8"
															},
															"nativeSrc": "28327:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "28327:93:8"
														},
														{
															"nativeSrc": "28429:19:8",
															"nodeType": "YulAssignment",
															"src": "28429:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28440:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "28440:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28445:2:8",
																		"nodeType": "YulLiteral",
																		"src": "28445:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28436:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28436:3:8"
																},
																"nativeSrc": "28436:12:8",
																"nodeType": "YulFunctionCall",
																"src": "28436:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28429:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28429:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28088:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28222:3:8",
														"nodeType": "YulTypedName",
														"src": "28222:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28230:3:8",
														"nodeType": "YulTypedName",
														"src": "28230:3:8",
														"type": ""
													}
												],
												"src": "28088:366:8"
											},
											{
												"body": {
													"nativeSrc": "28631:248:8",
													"nodeType": "YulBlock",
													"src": "28631:248:8",
													"statements": [
														{
															"nativeSrc": "28641:26:8",
															"nodeType": "YulAssignment",
															"src": "28641:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28653:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "28653:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28664:2:8",
																		"nodeType": "YulLiteral",
																		"src": "28664:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28649:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28649:3:8"
																},
																"nativeSrc": "28649:18:8",
																"nodeType": "YulFunctionCall",
																"src": "28649:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28641:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "28641:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28688:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "28688:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28699:1:8",
																				"nodeType": "YulLiteral",
																				"src": "28699:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28684:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28684:3:8"
																		},
																		"nativeSrc": "28684:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28684:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28707:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "28707:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28713:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "28713:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28703:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28703:3:8"
																		},
																		"nativeSrc": "28703:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28703:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28677:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "28677:6:8"
																},
																"nativeSrc": "28677:47:8",
																"nodeType": "YulFunctionCall",
																"src": "28677:47:8"
															},
															"nativeSrc": "28677:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "28677:47:8"
														},
														{
															"nativeSrc": "28733:139:8",
															"nodeType": "YulAssignment",
															"src": "28733:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28867:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "28867:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28741:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "28741:124:8"
																},
																"nativeSrc": "28741:131:8",
																"nodeType": "YulFunctionCall",
																"src": "28741:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28733:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "28733:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28460:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28611:9:8",
														"nodeType": "YulTypedName",
														"src": "28611:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28626:4:8",
														"nodeType": "YulTypedName",
														"src": "28626:4:8",
														"type": ""
													}
												],
												"src": "28460:419:8"
											},
											{
												"body": {
													"nativeSrc": "29039:288:8",
													"nodeType": "YulBlock",
													"src": "29039:288:8",
													"statements": [
														{
															"nativeSrc": "29049:26:8",
															"nodeType": "YulAssignment",
															"src": "29049:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29061:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "29061:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29072:2:8",
																		"nodeType": "YulLiteral",
																		"src": "29072:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29057:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "29057:3:8"
																},
																"nativeSrc": "29057:18:8",
																"nodeType": "YulFunctionCall",
																"src": "29057:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29049:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "29049:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29129:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "29129:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29142:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "29142:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29153:1:8",
																				"nodeType": "YulLiteral",
																				"src": "29153:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29138:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "29138:3:8"
																		},
																		"nativeSrc": "29138:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "29138:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "29085:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "29085:43:8"
																},
																"nativeSrc": "29085:71:8",
																"nodeType": "YulFunctionCall",
																"src": "29085:71:8"
															},
															"nativeSrc": "29085:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "29085:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29210:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "29210:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29223:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "29223:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29234:2:8",
																				"nodeType": "YulLiteral",
																				"src": "29234:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29219:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "29219:3:8"
																		},
																		"nativeSrc": "29219:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "29219:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "29166:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "29166:43:8"
																},
																"nativeSrc": "29166:72:8",
																"nodeType": "YulFunctionCall",
																"src": "29166:72:8"
															},
															"nativeSrc": "29166:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "29166:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "29292:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "29292:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29305:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "29305:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29316:2:8",
																				"nodeType": "YulLiteral",
																				"src": "29316:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29301:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "29301:3:8"
																		},
																		"nativeSrc": "29301:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "29301:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "29248:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "29248:43:8"
																},
																"nativeSrc": "29248:72:8",
																"nodeType": "YulFunctionCall",
																"src": "29248:72:8"
															},
															"nativeSrc": "29248:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "29248:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "28885:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28995:9:8",
														"nodeType": "YulTypedName",
														"src": "28995:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "29007:6:8",
														"nodeType": "YulTypedName",
														"src": "29007:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29015:6:8",
														"nodeType": "YulTypedName",
														"src": "29015:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29023:6:8",
														"nodeType": "YulTypedName",
														"src": "29023:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29034:4:8",
														"nodeType": "YulTypedName",
														"src": "29034:4:8",
														"type": ""
													}
												],
												"src": "28885:442:8"
											},
											{
												"body": {
													"nativeSrc": "29377:147:8",
													"nodeType": "YulBlock",
													"src": "29377:147:8",
													"statements": [
														{
															"nativeSrc": "29387:25:8",
															"nodeType": "YulAssignment",
															"src": "29387:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29410:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "29410:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29392:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "29392:17:8"
																},
																"nativeSrc": "29392:20:8",
																"nodeType": "YulFunctionCall",
																"src": "29392:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "29387:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "29387:1:8"
																}
															]
														},
														{
															"nativeSrc": "29421:25:8",
															"nodeType": "YulAssignment",
															"src": "29421:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "29444:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "29444:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29426:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "29426:17:8"
																},
																"nativeSrc": "29426:20:8",
																"nodeType": "YulFunctionCall",
																"src": "29426:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "29421:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "29421:1:8"
																}
															]
														},
														{
															"nativeSrc": "29455:16:8",
															"nodeType": "YulAssignment",
															"src": "29455:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29466:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "29466:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "29469:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "29469:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29462:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "29462:3:8"
																},
																"nativeSrc": "29462:9:8",
																"nodeType": "YulFunctionCall",
																"src": "29462:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "29455:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "29455:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29495:22:8",
																"nodeType": "YulBlock",
																"src": "29495:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "29497:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "29497:16:8"
																			},
																			"nativeSrc": "29497:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "29497:18:8"
																		},
																		"nativeSrc": "29497:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "29497:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "29487:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "29487:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "29490:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "29490:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "29484:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "29484:2:8"
																},
																"nativeSrc": "29484:10:8",
																"nodeType": "YulFunctionCall",
																"src": "29484:10:8"
															},
															"nativeSrc": "29481:36:8",
															"nodeType": "YulIf",
															"src": "29481:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "29333:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "29364:1:8",
														"nodeType": "YulTypedName",
														"src": "29364:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "29367:1:8",
														"nodeType": "YulTypedName",
														"src": "29367:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "29373:3:8",
														"nodeType": "YulTypedName",
														"src": "29373:3:8",
														"type": ""
													}
												],
												"src": "29333:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint8_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint8_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint8_to_t_uint8(value0, pos) -> updatedPos {\n        abi_encode_t_uint8_to_t_uint8(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint8_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint8[] -> uint8[]\n    function abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint8_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint8_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint8_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint8_to_t_uint8(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint8_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint8_$dyn_memory_ptr__to_t_array$_t_uint8_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint8_$dyn_memory_ptr_to_t_array$_t_uint8_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Item not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_storage(value) -> length {\n\n        length := sload(value)\n\n        length := extract_byte_array_length(length)\n\n    }\n\n    function copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage(slot, src) {\n        if eq(slot, src) { leave }\n\n        let newLen := array_length_t_string_storage(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n            src := array_dataslot_t_string_storage(src)\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, sload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 1)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := sload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427(memPtr) {\n\n        mstore(add(memPtr, 0), \"won\")\n\n    }\n\n    function abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888(memPtr) {\n\n        mstore(add(memPtr, 0), \"lost\")\n\n    }\n\n    function abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98(memPtr) {\n\n        mstore(add(memPtr, 0), \"You've already claimed your welc\")\n\n        mstore(add(memPtr, 32), \"ome bonus\")\n\n    }\n\n    function abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061018c575f3560e01c8063715018a6116100dc578063a9059cbb11610095578063dd62ed3e1161006f578063dd62ed3e14610480578063ea5e65e0146104b0578063f2fde38b146104cc578063f5112f87146104e85761018c565b8063a9059cbb14610404578063af3bcb7d14610434578063ce6019b4146104505761018c565b8063715018a61461035657806379cc6790146103605780637b47ec1a1461037c5780638da5cb5b1461039857806395d89b41146103b6578063a10f956d146103d45761018c565b806323b872dd1161014957806340c10f191161012357806340c10f19146102d257806342966c68146102ee57806362d6bbdf1461030a57806370a08231146103265761018c565b806323b872dd1461025457806330a8600614610284578063313ce567146102b45761018c565b806306fdde0314610190578063095ea7b3146101ae5780631072cbea146101de57806312065fe0146101fa57806317d70f7c1461021857806318160ddd14610236575b5f80fd5b6101986104f2565b6040516101a591906118ad565b60405180910390f35b6101c860048036038101906101c3919061196b565b610582565b6040516101d591906119c3565b60405180910390f35b6101f860048036038101906101f3919061196b565b6105a4565b005b6102026105fe565b60405161020f91906119eb565b60405180910390f35b61022061060d565b60405161022d9190611a1f565b60405180910390f35b61023e61061f565b60405161024b91906119eb565b60405180910390f35b61026e60048036038101906102699190611a38565b610628565b60405161027b91906119c3565b60405180910390f35b61029e60048036038101906102999190611ab2565b610656565b6040516102ab91906118ad565b60405180910390f35b6102bc6106ff565b6040516102c99190611a1f565b60405180910390f35b6102ec60048036038101906102e7919061196b565b610703565b005b61030860048036038101906103039190611add565b610719565b005b610324600480360381019061031f9190611c34565b61072d565b005b610340600480360381019061033b9190611c8e565b610802565b60405161034d91906119eb565b60405180910390f35b61035e610847565b005b61037a6004803603810190610375919061196b565b61085a565b005b61039660048036038101906103919190611add565b61087a565b005b6103a06108d1565b6040516103ad9190611cc8565b60405180910390f35b6103be6108f9565b6040516103cb91906118ad565b60405180910390f35b6103ee60048036038101906103e99190611ab2565b610989565b6040516103fb91906119eb565b60405180910390f35b61041e6004803603810190610419919061196b565b6109ac565b60405161042b91906119c3565b60405180910390f35b61044e60048036038101906104499190611ab2565b6109ce565b005b61046a60048036038101906104659190611c8e565b610bfe565b6040516104779190611d98565b60405180910390f35b61049a60048036038101906104959190611db8565b610e02565b6040516104a791906119eb565b60405180910390f35b6104ca60048036038101906104c59190611e20565b610e84565b005b6104e660048036038101906104e19190611c8e565b610f97565b005b6104f061101b565b005b60606003805461050190611e8b565b80601f016020809104026020016040519081016040528092919081815260200182805461052d90611e8b565b80156105785780601f1061054f57610100808354040283529160200191610578565b820191905f5260205f20905b81548152906001019060200180831161055b57829003601f168201915b5050505050905090565b5f8061058c611072565b9050610599818585611079565b600191505092915050565b806105ae33610802565b10156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690611f05565b60405180910390fd5b6105f982826109ac565b505050565b5f61060833610802565b905090565b60085f9054906101000a900460ff1681565b5f600254905090565b5f80610632611072565b905061063f85828561108b565b61064a85858561111d565b60019150509392505050565b606060065f8360ff1660ff1681526020019081526020015f205f01805461067c90611e8b565b80601f01602080910402602001604051908101604052809291908181526020018280546106a890611e8b565b80156106f35780601f106106ca576101008083540402835291602001916106f3565b820191905f5260205f20905b8154815290600101906020018083116106d657829003601f168201915b50505050509050919050565b5f90565b61070b61120d565b6107158282611294565b5050565b61072a610724611072565b82611313565b50565b61073561120d565b604051806060016040528083815260200160085f9054906101000a900460ff1660ff1681526020018281525060065f60085f9054906101000a900460ff1660ff1660ff1681526020019081526020015f205f820151815f01908161079991906120c0565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060085f81819054906101000a900460ff16809291906107e5906121bc565b91906101000a81548160ff021916908360ff160217905550505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61084f61120d565b6108585f611392565b565b61086c82610866611072565b8361108b565b6108768282611313565b5050565b8061088433610802565b10156108c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bc9061222e565b60405180910390fd5b6108ce81610719565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461090890611e8b565b80601f016020809104026020016040519081016040528092919081815260200182805461093490611e8b565b801561097f5780601f106109565761010080835404028352916020019161097f565b820191905f5260205f20905b81548152906001019060200180831161096257829003601f168201915b5050505050905090565b5f60065f8360ff1660ff1681526020019081526020015f20600201549050919050565b5f806109b6611072565b90506109c381858561111d565b600191505092915050565b5f60065f8360ff1660ff1681526020019081526020015f206002015403610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2190612296565b60405180910390fd5b60065f8260ff1660ff1681526020019081526020015f2060020154610a4e33610802565b1015610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8690611f05565b60405180910390fd5b610ab260065f8360ff1660ff1681526020019081526020015f2060020154610719565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060065f8360ff1660ff1681526020019081526020015f20908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f8201815f019081610b3e91906122c9565b50600182015f9054906101000a900460ff16816001015f6101000a81548160ff021916908360ff1602179055506002820154816002015550503373ffffffffffffffffffffffffffffffffffffffff167f8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e8260065f8560ff1660ff1681526020019081526020015f205f0160065f8660ff1660ff1681526020019081526020015f2060020154604051610bf39392919061242f565b60405180910390a250565b60605f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610d42578382905f5260205f2090600302016040518060600160405290815f82018054610c8d90611e8b565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb990611e8b565b8015610d045780601f10610cdb57610100808354040283529160200191610d04565b820191905f5260205f20905b815481529060010190602001808311610ce757829003601f168201915b50505050508152602001600182015f9054906101000a900460ff1660ff1660ff16815260200160028201548152505081526020019060010190610c5d565b5050505090505f815190505f8167ffffffffffffffff811115610d6857610d67611b10565b5b604051908082528060200260200182016040528015610d965781602001602082028036833780820191505090505b5090505f5b82811015610df657838181518110610db657610db561246b565b5b602002602001015160200151828281518110610dd557610dd461246b565b5b602002602001019060ff16908160ff16815250508080600101915050610d9b565b50809350505050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600a4233604051602001610e9a9291906124fd565b604051602081830303815290604052805190602001205f1c610ebc9190612555565b905060058110151583151503610f3857610ee233600284610edd9190612585565b611294565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587826001604051610f2b929190612610565b60405180910390a2610f92565b610f4182610719565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587825f604051610f89929190612694565b60405180910390a25b505050565b610f9f61120d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361100f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110069190611cc8565b60405180910390fd5b61101881611392565b50565b5f61102533610802565b14611065576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105c9061273e565b60405180910390fd5b611070336032611294565b565b5f33905090565b6110868383836001611455565b505050565b5f6110968484610e02565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111175781811015611108578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110ff9392919061275c565b60405180910390fd5b61111684848484035f611455565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361118d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111849190611cc8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111fd575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111f49190611cc8565b60405180910390fd5b611208838383611624565b505050565b611215611072565b73ffffffffffffffffffffffffffffffffffffffff166112336108d1565b73ffffffffffffffffffffffffffffffffffffffff161461129257611256611072565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112899190611cc8565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611304575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112fb9190611cc8565b60405180910390fd5b61130f5f8383611624565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611383575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161137a9190611cc8565b60405180910390fd5b61138e825f83611624565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114c5575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114bc9190611cc8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611535575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161152c9190611cc8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561161e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161161591906119eb565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611674578060025f8282546116689190612791565b92505081905550611742565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116fd578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016116f49392919061275c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611789578060025f82825403925050819055506117d3565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161183091906119eb565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61187f8261183d565b6118898185611847565b9350611899818560208601611857565b6118a281611865565b840191505092915050565b5f6020820190508181035f8301526118c58184611875565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611907826118de565b9050919050565b611917816118fd565b8114611921575f80fd5b50565b5f813590506119328161190e565b92915050565b5f819050919050565b61194a81611938565b8114611954575f80fd5b50565b5f8135905061196581611941565b92915050565b5f8060408385031215611981576119806118d6565b5b5f61198e85828601611924565b925050602061199f85828601611957565b9150509250929050565b5f8115159050919050565b6119bd816119a9565b82525050565b5f6020820190506119d65f8301846119b4565b92915050565b6119e581611938565b82525050565b5f6020820190506119fe5f8301846119dc565b92915050565b5f60ff82169050919050565b611a1981611a04565b82525050565b5f602082019050611a325f830184611a10565b92915050565b5f805f60608486031215611a4f57611a4e6118d6565b5b5f611a5c86828701611924565b9350506020611a6d86828701611924565b9250506040611a7e86828701611957565b9150509250925092565b611a9181611a04565b8114611a9b575f80fd5b50565b5f81359050611aac81611a88565b92915050565b5f60208284031215611ac757611ac66118d6565b5b5f611ad484828501611a9e565b91505092915050565b5f60208284031215611af257611af16118d6565b5b5f611aff84828501611957565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b4682611865565b810181811067ffffffffffffffff82111715611b6557611b64611b10565b5b80604052505050565b5f611b776118cd565b9050611b838282611b3d565b919050565b5f67ffffffffffffffff821115611ba257611ba1611b10565b5b611bab82611865565b9050602081019050919050565b828183375f83830152505050565b5f611bd8611bd384611b88565b611b6e565b905082815260208101848484011115611bf457611bf3611b0c565b5b611bff848285611bb8565b509392505050565b5f82601f830112611c1b57611c1a611b08565b5b8135611c2b848260208601611bc6565b91505092915050565b5f8060408385031215611c4a57611c496118d6565b5b5f83013567ffffffffffffffff811115611c6757611c666118da565b5b611c7385828601611c07565b9250506020611c8485828601611957565b9150509250929050565b5f60208284031215611ca357611ca26118d6565b5b5f611cb084828501611924565b91505092915050565b611cc2816118fd565b82525050565b5f602082019050611cdb5f830184611cb9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611d1381611a04565b82525050565b5f611d248383611d0a565b60208301905092915050565b5f602082019050919050565b5f611d4682611ce1565b611d508185611ceb565b9350611d5b83611cfb565b805f5b83811015611d8b578151611d728882611d19565b9750611d7d83611d30565b925050600181019050611d5e565b5085935050505092915050565b5f6020820190508181035f830152611db08184611d3c565b905092915050565b5f8060408385031215611dce57611dcd6118d6565b5b5f611ddb85828601611924565b9250506020611dec85828601611924565b9150509250929050565b611dff816119a9565b8114611e09575f80fd5b50565b5f81359050611e1a81611df6565b92915050565b5f8060408385031215611e3657611e356118d6565b5b5f611e4385828601611e0c565b9250506020611e5485828601611957565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ea257607f821691505b602082108103611eb557611eb4611e5e565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611eef601483611847565b9150611efa82611ebb565b602082019050919050565b5f6020820190508181035f830152611f1c81611ee3565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611f7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f44565b611f898683611f44565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611fc4611fbf611fba84611938565b611fa1565b611938565b9050919050565b5f819050919050565b611fdd83611faa565b611ff1611fe982611fcb565b848454611f50565b825550505050565b5f90565b612005611ff9565b612010818484611fd4565b505050565b5b81811015612033576120285f82611ffd565b600181019050612016565b5050565b601f8211156120785761204981611f23565b61205284611f35565b81016020851015612061578190505b61207561206d85611f35565b830182612015565b50505b505050565b5f82821c905092915050565b5f6120985f198460080261207d565b1980831691505092915050565b5f6120b08383612089565b9150826002028217905092915050565b6120c98261183d565b67ffffffffffffffff8111156120e2576120e1611b10565b5b6120ec8254611e8b565b6120f7828285612037565b5f60209050601f831160018114612128575f8415612116578287015190505b61212085826120a5565b865550612187565b601f19841661213686611f23565b5f5b8281101561215d57848901518255600182019150602085019450602081019050612138565b8683101561217a5784890151612176601f891682612089565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121c682611a04565b915060ff82036121d9576121d861218f565b5b600182019050919050565b7f496e73756666696369656e7420616d6f756e74000000000000000000000000005f82015250565b5f612218601383611847565b9150612223826121e4565b602082019050919050565b5f6020820190508181035f8301526122458161220c565b9050919050565b7f4974656d206e6f7420666f756e640000000000000000000000000000000000005f82015250565b5f612280600e83611847565b915061228b8261224c565b602082019050919050565b5f6020820190508181035f8301526122ad81612274565b9050919050565b5f815490506122c281611e8b565b9050919050565b8181036122d75750506123ac565b6122e0826122b4565b67ffffffffffffffff8111156122f9576122f8611b10565b5b6123038254611e8b565b61230e828285612037565b5f601f83116001811461233b575f8415612329578287015490505b61233385826120a5565b8655506123a5565b601f19841661234987611f23565b965061235486611f23565b5f5b8281101561237b57848901548255600182019150600185019450602081019050612356565b868310156123985784890154612394601f891682612089565b8355505b6001600288020188555050505b5050505050505b565b5f81546123ba81611e8b565b6123c48186611847565b9450600182165f81146123de57600181146123f457612426565b60ff198316865281151560200286019350612426565b6123fd85611f23565b5f5b8381101561241e578154818901526001820191506020810190506123ff565b808801955050505b50505092915050565b5f6060820190506124425f830186611a10565b818103602083015261245481856123ae565b905061246360408301846119dc565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b6124b26124ad82611938565b612498565b82525050565b5f8160601b9050919050565b5f6124ce826124b8565b9050919050565b5f6124df826124c4565b9050919050565b6124f76124f2826118fd565b6124d5565b82525050565b5f61250882856124a1565b60208201915061251882846124e6565b6014820191508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61255f82611938565b915061256a83611938565b92508261257a57612579612528565b5b828206905092915050565b5f61258f82611938565b915061259a83611938565b92508282026125a881611938565b915082820484148315176125bf576125be61218f565b5b5092915050565b7f776f6e00000000000000000000000000000000000000000000000000000000005f82015250565b5f6125fa600383611847565b9150612605826125c6565b602082019050919050565b5f6060820190506126235f8301856119dc565b61263060208301846119b4565b8181036040830152612641816125ee565b90509392505050565b7f6c6f7374000000000000000000000000000000000000000000000000000000005f82015250565b5f61267e600483611847565b91506126898261264a565b602082019050919050565b5f6060820190506126a75f8301856119dc565b6126b460208301846119b4565b81810360408301526126c581612672565b90509392505050565b7f596f7527766520616c726561647920636c61696d656420796f75722077656c635f8201527f6f6d6520626f6e75730000000000000000000000000000000000000000000000602082015250565b5f612728602983611847565b9150612733826126ce565b604082019050919050565b5f6020820190508181035f8301526127558161271c565b9050919050565b5f60608201905061276f5f830186611cb9565b61277c60208301856119dc565b61278960408301846119dc565b949350505050565b5f61279b82611938565b91506127a683611938565b92508282019050808211156127be576127bd61218f565b5b9291505056fea264697066735822122016fdb7131c80ef87a978434497a9fa06b2dc96b92f7640a1179fded40a98e9f664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xEA5E65E0 EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0xF5112F87 EQ PUSH2 0x4E8 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xCE6019B4 EQ PUSH2 0x450 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xA10F956D EQ PUSH2 0x3D4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x62D6BBDF EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x326 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x30A86006 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x236 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x198 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0x847 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x87A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A0 PUSH2 0x8D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BE PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH2 0xE84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F0 PUSH2 0x101B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x578 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x578 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x58C PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH2 0x599 DUP2 DUP6 DUP6 PUSH2 0x1079 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x5AE CALLER PUSH2 0x802 JUMP JUMPDEST LT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F9 DUP3 DUP3 PUSH2 0x9AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x608 CALLER PUSH2 0x802 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x632 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH2 0x63F DUP6 DUP3 DUP6 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x64A DUP6 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP1 SLOAD PUSH2 0x67C SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x70B PUSH2 0x120D JUMP JUMPDEST PUSH2 0x715 DUP3 DUP3 PUSH2 0x1294 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x72A PUSH2 0x724 PUSH2 0x1072 JUMP JUMPDEST DUP3 PUSH2 0x1313 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x735 PUSH2 0x120D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x20C0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7E5 SWAP1 PUSH2 0x21BC JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F PUSH2 0x120D JUMP JUMPDEST PUSH2 0x858 PUSH0 PUSH2 0x1392 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x86C DUP3 PUSH2 0x866 PUSH2 0x1072 JUMP JUMPDEST DUP4 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x876 DUP3 DUP3 PUSH2 0x1313 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x884 CALLER PUSH2 0x802 JUMP JUMPDEST LT ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CE DUP2 PUSH2 0x719 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x908 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x934 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x956 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x962 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9B6 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C3 DUP2 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xA4E CALLER PUSH2 0x802 JUMP JUMPDEST LT ISZERO PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA86 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB2 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x719 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x22C9 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xBF3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x242F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xD42 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xC8D SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCB9 SWAP1 PUSH2 0x1E8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD04 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCDB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD04 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCE7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC5D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD68 JUMPI PUSH2 0xD67 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD96 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDF6 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDB6 JUMPI PUSH2 0xDB5 PUSH2 0x246B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDD5 JUMPI PUSH2 0xDD4 PUSH2 0x246B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0xFF AND SWAP1 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD9B JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE9A SWAP3 SWAP2 SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0xF38 JUMPI PUSH2 0xEE2 CALLER PUSH1 0x2 DUP5 PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x2585 JUMP JUMPDEST PUSH2 0x1294 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF2B SWAP3 SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xF41 DUP3 PUSH2 0x719 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xF89 SWAP3 SWAP2 SWAP1 PUSH2 0x2694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF9F PUSH2 0x120D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1018 DUP2 PUSH2 0x1392 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1025 CALLER PUSH2 0x802 JUMP JUMPDEST EQ PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1070 CALLER PUSH1 0x32 PUSH2 0x1294 JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1086 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1455 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1096 DUP5 DUP5 PUSH2 0xE02 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1117 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1108 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1116 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1455 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1208 DUP4 DUP4 DUP4 PUSH2 0x1624 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1215 PUSH2 0x1072 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1233 PUSH2 0x8D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1292 JUMPI PUSH2 0x1256 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1304 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x130F PUSH0 DUP4 DUP4 PUSH2 0x1624 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1383 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138E DUP3 PUSH0 DUP4 PUSH2 0x1624 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BC SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1535 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x161E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1615 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1674 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1668 SWAP2 SWAP1 PUSH2 0x2791 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1742 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16FD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x275C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1789 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17D3 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187F DUP3 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x1889 DUP2 DUP6 PUSH2 0x1847 JUMP JUMPDEST SWAP4 POP PUSH2 0x1899 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x18A2 DUP2 PUSH2 0x1865 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C5 DUP2 DUP5 PUSH2 0x1875 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1907 DUP3 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1917 DUP2 PUSH2 0x18FD JUMP JUMPDEST DUP2 EQ PUSH2 0x1921 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1932 DUP2 PUSH2 0x190E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0x1938 JUMP JUMPDEST DUP2 EQ PUSH2 0x1954 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1965 DUP2 PUSH2 0x1941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1980 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198E DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x199F DUP6 DUP3 DUP7 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BD DUP2 PUSH2 0x19A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x19B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x1938 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FE PUSH0 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A32 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH2 0x1A4E PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A5C DUP7 DUP3 DUP8 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A6D DUP7 DUP3 DUP8 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A7E DUP7 DUP3 DUP8 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AAC DUP2 PUSH2 0x1A88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD4 DUP5 DUP3 DUP6 ADD PUSH2 0x1A9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF2 JUMPI PUSH2 0x1AF1 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AFF DUP5 DUP3 DUP6 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B46 DUP3 PUSH2 0x1865 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B65 JUMPI PUSH2 0x1B64 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B77 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP PUSH2 0x1B83 DUP3 DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BA2 JUMPI PUSH2 0x1BA1 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH2 0x1BAB DUP3 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD8 PUSH2 0x1BD3 DUP5 PUSH2 0x1B88 JUMP JUMPDEST PUSH2 0x1B6E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BF4 JUMPI PUSH2 0x1BF3 PUSH2 0x1B0C JUMP JUMPDEST JUMPDEST PUSH2 0x1BFF DUP5 DUP3 DUP6 PUSH2 0x1BB8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C1B JUMPI PUSH2 0x1C1A PUSH2 0x1B08 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C2B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4A JUMPI PUSH2 0x1C49 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C67 JUMPI PUSH2 0x1C66 PUSH2 0x18DA JUMP JUMPDEST JUMPDEST PUSH2 0x1C73 DUP6 DUP3 DUP7 ADD PUSH2 0x1C07 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C84 DUP6 DUP3 DUP7 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CA3 JUMPI PUSH2 0x1CA2 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC2 DUP2 PUSH2 0x18FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CDB PUSH0 DUP4 ADD DUP5 PUSH2 0x1CB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x1A04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D24 DUP4 DUP4 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D46 DUP3 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x1D50 DUP2 DUP6 PUSH2 0x1CEB JUMP JUMPDEST SWAP4 POP PUSH2 0x1D5B DUP4 PUSH2 0x1CFB JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8B JUMPI DUP2 MLOAD PUSH2 0x1D72 DUP9 DUP3 PUSH2 0x1D19 JUMP JUMPDEST SWAP8 POP PUSH2 0x1D7D DUP4 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D5E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB0 DUP2 DUP5 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCE JUMPI PUSH2 0x1DCD PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DDB DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DEC DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFF DUP2 PUSH2 0x19A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E1A DUP2 PUSH2 0x1DF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x18D6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E43 DUP6 DUP3 DUP7 ADD PUSH2 0x1E0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E54 DUP6 DUP3 DUP7 ADD PUSH2 0x1957 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1EA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1EB5 JUMPI PUSH2 0x1EB4 PUSH2 0x1E5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEF PUSH1 0x14 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFA DUP3 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F1C DUP2 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F7F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x1F89 DUP7 DUP4 PUSH2 0x1F44 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC4 PUSH2 0x1FBF PUSH2 0x1FBA DUP5 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDD DUP4 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x1FF1 PUSH2 0x1FE9 DUP3 PUSH2 0x1FCB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F50 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2005 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x2010 DUP2 DUP5 DUP5 PUSH2 0x1FD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2028 PUSH0 DUP3 PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2078 JUMPI PUSH2 0x2049 DUP2 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x2052 DUP5 PUSH2 0x1F35 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2061 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2075 PUSH2 0x206D DUP6 PUSH2 0x1F35 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2015 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2098 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x207D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B0 DUP4 DUP4 PUSH2 0x2089 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C9 DUP3 PUSH2 0x183D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E2 JUMPI PUSH2 0x20E1 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH2 0x20EC DUP3 SLOAD PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x20F7 DUP3 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2128 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2116 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2120 DUP6 DUP3 PUSH2 0x20A5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2136 DUP7 PUSH2 0x1F23 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x215D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2138 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x217A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2176 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2089 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21C6 DUP3 PUSH2 0x1A04 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x21D9 JUMPI PUSH2 0x21D8 PUSH2 0x218F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 PUSH1 0x13 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2223 DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2245 DUP2 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 PUSH1 0xE DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22AD DUP2 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x22C2 DUP2 PUSH2 0x1E8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x22D7 JUMPI POP POP PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x22E0 DUP3 PUSH2 0x22B4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F9 JUMPI PUSH2 0x22F8 PUSH2 0x1B10 JUMP JUMPDEST JUMPDEST PUSH2 0x2303 DUP3 SLOAD PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x230E DUP3 DUP3 DUP6 PUSH2 0x2037 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x233B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2329 JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x2333 DUP6 DUP3 PUSH2 0x20A5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2349 DUP8 PUSH2 0x1F23 JUMP JUMPDEST SWAP7 POP PUSH2 0x2354 DUP7 PUSH2 0x1F23 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x237B JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2356 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2398 JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2394 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2089 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x23BA DUP2 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x23C4 DUP2 DUP7 PUSH2 0x1847 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x23DE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x23F4 JUMPI PUSH2 0x2426 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x2426 JUMP JUMPDEST PUSH2 0x23FD DUP6 PUSH2 0x1F23 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x241E JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23FF JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2442 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A10 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2454 DUP2 DUP6 PUSH2 0x23AE JUMP JUMPDEST SWAP1 POP PUSH2 0x2463 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B2 PUSH2 0x24AD DUP3 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0x2498 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CE DUP3 PUSH2 0x24B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24DF DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F7 PUSH2 0x24F2 DUP3 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x24D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2508 DUP3 DUP6 PUSH2 0x24A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x2518 DUP3 DUP5 PUSH2 0x24E6 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255F DUP3 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP PUSH2 0x256A DUP4 PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x257A JUMPI PUSH2 0x2579 PUSH2 0x2528 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x258F DUP3 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP PUSH2 0x259A DUP4 PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x25A8 DUP2 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x25BF JUMPI PUSH2 0x25BE PUSH2 0x218F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776F6E0000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25FA PUSH1 0x3 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2605 DUP3 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2623 PUSH0 DUP4 ADD DUP6 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x2630 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2641 DUP2 PUSH2 0x25EE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6C6F737400000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x267E PUSH1 0x4 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2689 DUP3 PUSH2 0x264A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26A7 PUSH0 DUP4 ADD DUP6 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x26B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x26C5 DUP2 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F7527766520616C726561647920636C61696D656420796F75722077656C63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6D6520626F6E75730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2728 PUSH1 0x29 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x2733 DUP3 PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x276F PUSH0 DUP4 ADD DUP7 PUSH2 0x1CB9 JUMP JUMPDEST PUSH2 0x277C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x2789 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x279B DUP3 PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A6 DUP4 PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27BE JUMPI PUSH2 0x27BD PUSH2 0x218F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND REVERT 0xB7 SGT SHR DUP1 0xEF DUP8 0xA9 PUSH25 0x434497A9FA06B2DC96B92F7640A1179FDED40A98E9F664736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "785:3502:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1930:188:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4003:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1020:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3739:112:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1681:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1797:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2323:154:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4135:147:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3857:103:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2972:395:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3375:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2486:474:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2153:162:7;;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1930:188:7:-;2038:7;2015:21;2025:10;2015:9;:21::i;:::-;:30;;2007:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:29;2090:10;2102:7;2081:8;:29::i;:::-;;1930:188;;:::o;4003:99::-;4047:7;4073:21;4083:10;4073:9;:21::i;:::-;4066:28;;4003:99;:::o;1020:20::-;;;;;;;;;;;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3739:112:7:-;3795:13;3828:5;:10;3834:3;3828:10;;;;;;;;;;;;;;;:15;;3821:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3739:112;;;:::o;1681:83::-;1731:5;1681:83;:::o;1797:95::-;1531:13:0;:11;:13::i;:::-;1867:17:7::1;1873:2;1877:6;1867:5;:17::i;:::-;1797:95:::0;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2323:154:7:-;1531:13:0;:11;:13::i;:::-;2422:27:7::1;;;;;;;;2427:5;2422:27;;;;2434:7;;;;;;;;;;;2422:27;;;;;;2442:6;2422:27;;::::0;2405:5:::1;:14;2411:7;;;;;;;;;;;2405:14;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:7;;:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2323:154:::0;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;4135:147:7:-;4219:7;4196:21;4206:10;4196:9;:21::i;:::-;:30;;4188:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4261:13;4266:7;4261:4;:13::i;:::-;4135:147;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3857:103:7:-;3913:4;3936:5;:10;3942:3;3936:10;;;;;;;;;;;;;;;:16;;;3929:23;;3857:103;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2972:395:7:-;3061:1;3037:5;:14;3043:7;3037:14;;;;;;;;;;;;;;;:20;;;:25;3029:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3125:5;:14;3131:7;3125:14;;;;;;;;;;;;;;;:20;;;3100:21;3110:10;3100:9;:21::i;:::-;:45;;3092:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3183:26;3188:5;:14;3194:7;3188:14;;;;;;;;;;;;;;;:20;;;3183:4;:26::i;:::-;3220:11;:23;3232:10;3220:23;;;;;;;;;;;;;;;3249:5;:14;3255:7;3249:14;;;;;;;;;;;;;;;3220:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3296:10;3282:77;;;3308:7;3317:5;:14;3323:7;3317:14;;;;;;;;;;;;;;;:19;;3338:5;:14;3344:7;3338:14;;;;;;;;;;;;;;;:20;;;3282:77;;;;;;;;:::i;:::-;;;;;;;;2972:395;:::o;3375:358::-;3434:14;3461:23;3487:11;:17;3499:4;3487:17;;;;;;;;;;;;;;;3461:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3515:11;3529:9;:16;3515:30;;3558:19;3592:6;3580:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:41;;3617:6;3612:90;3633:6;3629:1;:10;3612:90;;;3671:9;3681:1;3671:12;;;;;;;;:::i;:::-;;;;;;;;:19;;;3661:4;3666:1;3661:7;;;;;;;;:::i;:::-;;;;;;;:29;;;;;;;;;;;3641:3;;;;;;;3612:90;;;;3721:4;3714:11;;;;;3375:358;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2486:474:7:-;2566:17;2651:2;2618:15;2635:10;2601:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2591:56;;;;;;2586:62;;:67;;;;:::i;:::-;2566:87;;2698:1;2685:12;:14;2670:30;;:11;:30;;;2666:287;;2717:31;2723:10;2746:1;2735:10;:12;;;;:::i;:::-;2717:5;:31::i;:::-;2780:10;2768:50;;;2792:12;2806:4;2768:50;;;;;;;:::i;:::-;;;;;;;;2666:287;;;2853:16;2858:10;2853:4;:16::i;:::-;2901:10;2889:52;;;2913:12;2927:5;2889:52;;;;;;;:::i;:::-;;;;;;;;2666:287;2555:405;2486:474;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2153:162:7:-;2228:1;2203:21;2213:10;2203:9;:21::i;:::-;:26;2195:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2286:21;2292:10;2304:2;2286:5;:21::i;:::-;2153:162::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:86::-;3726:7;3766:4;3759:5;3755:16;3744:27;;3691:86;;;:::o;3783:112::-;3866:22;3882:5;3866:22;:::i;:::-;3861:3;3854:35;3783:112;;:::o;3901:214::-;3990:4;4028:2;4017:9;4013:18;4005:26;;4041:67;4105:1;4094:9;4090:17;4081:6;4041:67;:::i;:::-;3901:214;;;;:::o;4121:619::-;4198:6;4206;4214;4263:2;4251:9;4242:7;4238:23;4234:32;4231:119;;;4269:79;;:::i;:::-;4231:119;4389:1;4414:53;4459:7;4450:6;4439:9;4435:22;4414:53;:::i;:::-;4404:63;;4360:117;4516:2;4542:53;4587:7;4578:6;4567:9;4563:22;4542:53;:::i;:::-;4532:63;;4487:118;4644:2;4670:53;4715:7;4706:6;4695:9;4691:22;4670:53;:::i;:::-;4660:63;;4615:118;4121:619;;;;;:::o;4746:118::-;4817:22;4833:5;4817:22;:::i;:::-;4810:5;4807:33;4797:61;;4854:1;4851;4844:12;4797:61;4746:118;:::o;4870:135::-;4914:5;4952:6;4939:20;4930:29;;4968:31;4993:5;4968:31;:::i;:::-;4870:135;;;;:::o;5011:325::-;5068:6;5117:2;5105:9;5096:7;5092:23;5088:32;5085:119;;;5123:79;;:::i;:::-;5085:119;5243:1;5268:51;5311:7;5302:6;5291:9;5287:22;5268:51;:::i;:::-;5258:61;;5214:115;5011:325;;;;:::o;5342:329::-;5401:6;5450:2;5438:9;5429:7;5425:23;5421:32;5418:119;;;5456:79;;:::i;:::-;5418:119;5576:1;5601:53;5646:7;5637:6;5626:9;5622:22;5601:53;:::i;:::-;5591:63;;5547:117;5342:329;;;;:::o;5677:117::-;5786:1;5783;5776:12;5800:117;5909:1;5906;5899:12;5923:180;5971:77;5968:1;5961:88;6068:4;6065:1;6058:15;6092:4;6089:1;6082:15;6109:281;6192:27;6214:4;6192:27;:::i;:::-;6184:6;6180:40;6322:6;6310:10;6307:22;6286:18;6274:10;6271:34;6268:62;6265:88;;;6333:18;;:::i;:::-;6265:88;6373:10;6369:2;6362:22;6152:238;6109:281;;:::o;6396:129::-;6430:6;6457:20;;:::i;:::-;6447:30;;6486:33;6514:4;6506:6;6486:33;:::i;:::-;6396:129;;;:::o;6531:308::-;6593:4;6683:18;6675:6;6672:30;6669:56;;;6705:18;;:::i;:::-;6669:56;6743:29;6765:6;6743:29;:::i;:::-;6735:37;;6827:4;6821;6817:15;6809:23;;6531:308;;;:::o;6845:148::-;6943:6;6938:3;6933;6920:30;6984:1;6975:6;6970:3;6966:16;6959:27;6845:148;;;:::o;6999:425::-;7077:5;7102:66;7118:49;7160:6;7118:49;:::i;:::-;7102:66;:::i;:::-;7093:75;;7191:6;7184:5;7177:21;7229:4;7222:5;7218:16;7267:3;7258:6;7253:3;7249:16;7246:25;7243:112;;;7274:79;;:::i;:::-;7243:112;7364:54;7411:6;7406:3;7401;7364:54;:::i;:::-;7083:341;6999:425;;;;;:::o;7444:340::-;7500:5;7549:3;7542:4;7534:6;7530:17;7526:27;7516:122;;7557:79;;:::i;:::-;7516:122;7674:6;7661:20;7699:79;7774:3;7766:6;7759:4;7751:6;7747:17;7699:79;:::i;:::-;7690:88;;7506:278;7444:340;;;;:::o;7790:654::-;7868:6;7876;7925:2;7913:9;7904:7;7900:23;7896:32;7893:119;;;7931:79;;:::i;:::-;7893:119;8079:1;8068:9;8064:17;8051:31;8109:18;8101:6;8098:30;8095:117;;;8131:79;;:::i;:::-;8095:117;8236:63;8291:7;8282:6;8271:9;8267:22;8236:63;:::i;:::-;8226:73;;8022:287;8348:2;8374:53;8419:7;8410:6;8399:9;8395:22;8374:53;:::i;:::-;8364:63;;8319:118;7790:654;;;;;:::o;8450:329::-;8509:6;8558:2;8546:9;8537:7;8533:23;8529:32;8526:119;;;8564:79;;:::i;:::-;8526:119;8684:1;8709:53;8754:7;8745:6;8734:9;8730:22;8709:53;:::i;:::-;8699:63;;8655:117;8450:329;;;;:::o;8785:118::-;8872:24;8890:5;8872:24;:::i;:::-;8867:3;8860:37;8785:118;;:::o;8909:222::-;9002:4;9040:2;9029:9;9025:18;9017:26;;9053:71;9121:1;9110:9;9106:17;9097:6;9053:71;:::i;:::-;8909:222;;;;:::o;9137:112::-;9202:6;9236:5;9230:12;9220:22;;9137:112;;;:::o;9255:182::-;9352:11;9386:6;9381:3;9374:19;9426:4;9421:3;9417:14;9402:29;;9255:182;;;;:::o;9443:130::-;9508:4;9531:3;9523:11;;9561:4;9556:3;9552:14;9544:22;;9443:130;;;:::o;9579:102::-;9652:22;9668:5;9652:22;:::i;:::-;9647:3;9640:35;9579:102;;:::o;9687:171::-;9752:10;9773:42;9811:3;9803:6;9773:42;:::i;:::-;9847:4;9842:3;9838:14;9824:28;;9687:171;;;;:::o;9864:111::-;9932:4;9964;9959:3;9955:14;9947:22;;9864:111;;;:::o;10007:716::-;10122:3;10151:52;10197:5;10151:52;:::i;:::-;10219:84;10296:6;10291:3;10219:84;:::i;:::-;10212:91;;10327:54;10375:5;10327:54;:::i;:::-;10404:7;10435:1;10420:278;10445:6;10442:1;10439:13;10420:278;;;10521:6;10515:13;10548:59;10603:3;10588:13;10548:59;:::i;:::-;10541:66;;10630:58;10681:6;10630:58;:::i;:::-;10620:68;;10480:218;10467:1;10464;10460:9;10455:14;;10420:278;;;10424:14;10714:3;10707:10;;10127:596;;;10007:716;;;;:::o;10729:365::-;10868:4;10906:2;10895:9;10891:18;10883:26;;10955:9;10949:4;10945:20;10941:1;10930:9;10926:17;10919:47;10983:104;11082:4;11073:6;10983:104;:::i;:::-;10975:112;;10729:365;;;;:::o;11100:474::-;11168:6;11176;11225:2;11213:9;11204:7;11200:23;11196:32;11193:119;;;11231:79;;:::i;:::-;11193:119;11351:1;11376:53;11421:7;11412:6;11401:9;11397:22;11376:53;:::i;:::-;11366:63;;11322:117;11478:2;11504:53;11549:7;11540:6;11529:9;11525:22;11504:53;:::i;:::-;11494:63;;11449:118;11100:474;;;;;:::o;11580:116::-;11650:21;11665:5;11650:21;:::i;:::-;11643:5;11640:32;11630:60;;11686:1;11683;11676:12;11630:60;11580:116;:::o;11702:133::-;11745:5;11783:6;11770:20;11761:29;;11799:30;11823:5;11799:30;:::i;:::-;11702:133;;;;:::o;11841:468::-;11906:6;11914;11963:2;11951:9;11942:7;11938:23;11934:32;11931:119;;;11969:79;;:::i;:::-;11931:119;12089:1;12114:50;12156:7;12147:6;12136:9;12132:22;12114:50;:::i;:::-;12104:60;;12060:114;12213:2;12239:53;12284:7;12275:6;12264:9;12260:22;12239:53;:::i;:::-;12229:63;;12184:118;11841:468;;;;;:::o;12315:180::-;12363:77;12360:1;12353:88;12460:4;12457:1;12450:15;12484:4;12481:1;12474:15;12501:320;12545:6;12582:1;12576:4;12572:12;12562:22;;12629:1;12623:4;12619:12;12650:18;12640:81;;12706:4;12698:6;12694:17;12684:27;;12640:81;12768:2;12760:6;12757:14;12737:18;12734:38;12731:84;;12787:18;;:::i;:::-;12731:84;12552:269;12501:320;;;:::o;12827:170::-;12967:22;12963:1;12955:6;12951:14;12944:46;12827:170;:::o;13003:366::-;13145:3;13166:67;13230:2;13225:3;13166:67;:::i;:::-;13159:74;;13242:93;13331:3;13242:93;:::i;:::-;13360:2;13355:3;13351:12;13344:19;;13003:366;;;:::o;13375:419::-;13541:4;13579:2;13568:9;13564:18;13556:26;;13628:9;13622:4;13618:20;13614:1;13603:9;13599:17;13592:47;13656:131;13782:4;13656:131;:::i;:::-;13648:139;;13375:419;;;:::o;13800:141::-;13849:4;13872:3;13864:11;;13895:3;13892:1;13885:14;13929:4;13926:1;13916:18;13908:26;;13800:141;;;:::o;13947:93::-;13984:6;14031:2;14026;14019:5;14015:14;14011:23;14001:33;;13947:93;;;:::o;14046:107::-;14090:8;14140:5;14134:4;14130:16;14109:37;;14046:107;;;;:::o;14159:393::-;14228:6;14278:1;14266:10;14262:18;14301:97;14331:66;14320:9;14301:97;:::i;:::-;14419:39;14449:8;14438:9;14419:39;:::i;:::-;14407:51;;14491:4;14487:9;14480:5;14476:21;14467:30;;14540:4;14530:8;14526:19;14519:5;14516:30;14506:40;;14235:317;;14159:393;;;;;:::o;14558:60::-;14586:3;14607:5;14600:12;;14558:60;;;:::o;14624:142::-;14674:9;14707:53;14725:34;14734:24;14752:5;14734:24;:::i;:::-;14725:34;:::i;:::-;14707:53;:::i;:::-;14694:66;;14624:142;;;:::o;14772:75::-;14815:3;14836:5;14829:12;;14772:75;;;:::o;14853:269::-;14963:39;14994:7;14963:39;:::i;:::-;15024:91;15073:41;15097:16;15073:41;:::i;:::-;15065:6;15058:4;15052:11;15024:91;:::i;:::-;15018:4;15011:105;14929:193;14853:269;;;:::o;15128:73::-;15173:3;15128:73;:::o;15207:189::-;15284:32;;:::i;:::-;15325:65;15383:6;15375;15369:4;15325:65;:::i;:::-;15260:136;15207:189;;:::o;15402:186::-;15462:120;15479:3;15472:5;15469:14;15462:120;;;15533:39;15570:1;15563:5;15533:39;:::i;:::-;15506:1;15499:5;15495:13;15486:22;;15462:120;;;15402:186;;:::o;15594:543::-;15695:2;15690:3;15687:11;15684:446;;;15729:38;15761:5;15729:38;:::i;:::-;15813:29;15831:10;15813:29;:::i;:::-;15803:8;15799:44;15996:2;15984:10;15981:18;15978:49;;;16017:8;16002:23;;15978:49;16040:80;16096:22;16114:3;16096:22;:::i;:::-;16086:8;16082:37;16069:11;16040:80;:::i;:::-;15699:431;;15684:446;15594:543;;;:::o;16143:117::-;16197:8;16247:5;16241:4;16237:16;16216:37;;16143:117;;;;:::o;16266:169::-;16310:6;16343:51;16391:1;16387:6;16379:5;16376:1;16372:13;16343:51;:::i;:::-;16339:56;16424:4;16418;16414:15;16404:25;;16317:118;16266:169;;;;:::o;16440:295::-;16516:4;16662:29;16687:3;16681:4;16662:29;:::i;:::-;16654:37;;16724:3;16721:1;16717:11;16711:4;16708:21;16700:29;;16440:295;;;;:::o;16740:1395::-;16857:37;16890:3;16857:37;:::i;:::-;16959:18;16951:6;16948:30;16945:56;;;16981:18;;:::i;:::-;16945:56;17025:38;17057:4;17051:11;17025:38;:::i;:::-;17110:67;17170:6;17162;17156:4;17110:67;:::i;:::-;17204:1;17228:4;17215:17;;17260:2;17252:6;17249:14;17277:1;17272:618;;;;17934:1;17951:6;17948:77;;;18000:9;17995:3;17991:19;17985:26;17976:35;;17948:77;18051:67;18111:6;18104:5;18051:67;:::i;:::-;18045:4;18038:81;17907:222;17242:887;;17272:618;17324:4;17320:9;17312:6;17308:22;17358:37;17390:4;17358:37;:::i;:::-;17417:1;17431:208;17445:7;17442:1;17439:14;17431:208;;;17524:9;17519:3;17515:19;17509:26;17501:6;17494:42;17575:1;17567:6;17563:14;17553:24;;17622:2;17611:9;17607:18;17594:31;;17468:4;17465:1;17461:12;17456:17;;17431:208;;;17667:6;17658:7;17655:19;17652:179;;;17725:9;17720:3;17716:19;17710:26;17768:48;17810:4;17802:6;17798:17;17787:9;17768:48;:::i;:::-;17760:6;17753:64;17675:156;17652:179;17877:1;17873;17865:6;17861:14;17857:22;17851:4;17844:36;17279:611;;;17242:887;;16832:1303;;;16740:1395;;:::o;18141:180::-;18189:77;18186:1;18179:88;18286:4;18283:1;18276:15;18310:4;18307:1;18300:15;18327:167;18364:3;18387:22;18403:5;18387:22;:::i;:::-;18378:31;;18431:4;18424:5;18421:15;18418:41;;18439:18;;:::i;:::-;18418:41;18486:1;18479:5;18475:13;18468:20;;18327:167;;;:::o;18500:169::-;18640:21;18636:1;18628:6;18624:14;18617:45;18500:169;:::o;18675:366::-;18817:3;18838:67;18902:2;18897:3;18838:67;:::i;:::-;18831:74;;18914:93;19003:3;18914:93;:::i;:::-;19032:2;19027:3;19023:12;19016:19;;18675:366;;;:::o;19047:419::-;19213:4;19251:2;19240:9;19236:18;19228:26;;19300:9;19294:4;19290:20;19286:1;19275:9;19271:17;19264:47;19328:131;19454:4;19328:131;:::i;:::-;19320:139;;19047:419;;;:::o;19472:164::-;19612:16;19608:1;19600:6;19596:14;19589:40;19472:164;:::o;19642:366::-;19784:3;19805:67;19869:2;19864:3;19805:67;:::i;:::-;19798:74;;19881:93;19970:3;19881:93;:::i;:::-;19999:2;19994:3;19990:12;19983:19;;19642:366;;;:::o;20014:419::-;20180:4;20218:2;20207:9;20203:18;20195:26;;20267:9;20261:4;20257:20;20253:1;20242:9;20238:17;20231:47;20295:131;20421:4;20295:131;:::i;:::-;20287:139;;20014:419;;;:::o;20439:149::-;20488:6;20522:5;20516:12;20506:22;;20548:33;20574:6;20548:33;:::i;:::-;20538:43;;20439:149;;;:::o;20594:1451::-;20705:3;20699:4;20696:13;20693:26;;20712:5;;;;20693:26;20743:34;20773:3;20743:34;:::i;:::-;20842:18;20834:6;20831:30;20828:56;;;20864:18;;:::i;:::-;20828:56;20908:38;20940:4;20934:11;20908:38;:::i;:::-;20993:67;21053:6;21045;21039:4;20993:67;:::i;:::-;21087:1;21116:2;21108:6;21105:14;21133:1;21128:672;;;;21844:1;21861:6;21858:77;;;21910:9;21905:3;21901:19;21895:26;21886:35;;21858:77;21961:67;22021:6;22014:5;21961:67;:::i;:::-;21955:4;21948:81;21817:222;21098:941;;21128:672;21180:4;21176:9;21168:6;21164:22;21206:36;21238:3;21206:36;:::i;:::-;21199:43;;21269:37;21301:4;21269:37;:::i;:::-;21328:1;21342:207;21356:7;21353:1;21350:14;21342:207;;;21435:9;21430:3;21426:19;21420:26;21412:6;21405:42;21486:1;21478:6;21474:14;21464:24;;21533:1;21522:9;21518:17;21505:30;;21379:4;21376:1;21372:12;21367:17;;21342:207;;;21577:6;21568:7;21565:19;21562:179;;;21635:9;21630:3;21626:19;21620:26;21678:48;21720:4;21712:6;21708:17;21697:9;21678:48;:::i;:::-;21670:6;21663:64;21585:156;21562:179;21787:1;21783;21775:6;21771:14;21767:22;21761:4;21754:36;21135:665;;;21098:941;;20683:1362;;;20594:1451;;;:::o;22075:831::-;22160:3;22197:5;22191:12;22226:36;22252:9;22226:36;:::i;:::-;22278:71;22342:6;22337:3;22278:71;:::i;:::-;22271:78;;22380:1;22369:9;22365:17;22396:1;22391:164;;;;22569:1;22564:336;;;;22358:542;;22391:164;22475:4;22471:9;22460;22456:25;22451:3;22444:38;22535:6;22528:14;22521:22;22515:4;22511:33;22506:3;22502:43;22495:50;;22391:164;;22564:336;22631:38;22663:5;22631:38;:::i;:::-;22691:1;22705:154;22719:6;22716:1;22713:13;22705:154;;;22793:7;22787:14;22783:1;22778:3;22774:11;22767:35;22843:1;22834:7;22830:15;22819:26;;22741:4;22738:1;22734:12;22729:17;;22705:154;;;22888:1;22883:3;22879:11;22872:18;;22571:329;;22358:542;;22164:742;;22075:831;;;;:::o;22912:519::-;23074:4;23112:2;23101:9;23097:18;23089:26;;23125:67;23189:1;23178:9;23174:17;23165:6;23125:67;:::i;:::-;23239:9;23233:4;23229:20;23224:2;23213:9;23209:18;23202:48;23267:75;23337:4;23328:6;23267:75;:::i;:::-;23259:83;;23352:72;23420:2;23409:9;23405:18;23396:6;23352:72;:::i;:::-;22912:519;;;;;;:::o;23437:180::-;23485:77;23482:1;23475:88;23582:4;23579:1;23572:15;23606:4;23603:1;23596:15;23623:79;23662:7;23691:5;23680:16;;23623:79;;;:::o;23708:157::-;23813:45;23833:24;23851:5;23833:24;:::i;:::-;23813:45;:::i;:::-;23808:3;23801:58;23708:157;;:::o;23871:94::-;23904:8;23952:5;23948:2;23944:14;23923:35;;23871:94;;;:::o;23971:::-;24010:7;24039:20;24053:5;24039:20;:::i;:::-;24028:31;;23971:94;;;:::o;24071:100::-;24110:7;24139:26;24159:5;24139:26;:::i;:::-;24128:37;;24071:100;;;:::o;24177:157::-;24282:45;24302:24;24320:5;24302:24;:::i;:::-;24282:45;:::i;:::-;24277:3;24270:58;24177:157;;:::o;24340:397::-;24480:3;24495:75;24566:3;24557:6;24495:75;:::i;:::-;24595:2;24590:3;24586:12;24579:19;;24608:75;24679:3;24670:6;24608:75;:::i;:::-;24708:2;24703:3;24699:12;24692:19;;24728:3;24721:10;;24340:397;;;;;:::o;24743:180::-;24791:77;24788:1;24781:88;24888:4;24885:1;24878:15;24912:4;24909:1;24902:15;24929:176;24961:1;24978:20;24996:1;24978:20;:::i;:::-;24973:25;;25012:20;25030:1;25012:20;:::i;:::-;25007:25;;25051:1;25041:35;;25056:18;;:::i;:::-;25041:35;25097:1;25094;25090:9;25085:14;;24929:176;;;;:::o;25111:410::-;25151:7;25174:20;25192:1;25174:20;:::i;:::-;25169:25;;25208:20;25226:1;25208:20;:::i;:::-;25203:25;;25263:1;25260;25256:9;25285:30;25303:11;25285:30;:::i;:::-;25274:41;;25464:1;25455:7;25451:15;25448:1;25445:22;25425:1;25418:9;25398:83;25375:139;;25494:18;;:::i;:::-;25375:139;25159:362;25111:410;;;;:::o;25527:153::-;25667:5;25663:1;25655:6;25651:14;25644:29;25527:153;:::o;25686:365::-;25828:3;25849:66;25913:1;25908:3;25849:66;:::i;:::-;25842:73;;25924:93;26013:3;25924:93;:::i;:::-;26042:2;26037:3;26033:12;26026:19;;25686:365;;;:::o;26057:627::-;26273:4;26311:2;26300:9;26296:18;26288:26;;26324:71;26392:1;26381:9;26377:17;26368:6;26324:71;:::i;:::-;26405:66;26467:2;26456:9;26452:18;26443:6;26405:66;:::i;:::-;26518:9;26512:4;26508:20;26503:2;26492:9;26488:18;26481:48;26546:131;26672:4;26546:131;:::i;:::-;26538:139;;26057:627;;;;;:::o;26690:154::-;26830:6;26826:1;26818:6;26814:14;26807:30;26690:154;:::o;26850:365::-;26992:3;27013:66;27077:1;27072:3;27013:66;:::i;:::-;27006:73;;27088:93;27177:3;27088:93;:::i;:::-;27206:2;27201:3;27197:12;27190:19;;26850:365;;;:::o;27221:627::-;27437:4;27475:2;27464:9;27460:18;27452:26;;27488:71;27556:1;27545:9;27541:17;27532:6;27488:71;:::i;:::-;27569:66;27631:2;27620:9;27616:18;27607:6;27569:66;:::i;:::-;27682:9;27676:4;27672:20;27667:2;27656:9;27652:18;27645:48;27710:131;27836:4;27710:131;:::i;:::-;27702:139;;27221:627;;;;;:::o;27854:228::-;27994:34;27990:1;27982:6;27978:14;27971:58;28063:11;28058:2;28050:6;28046:15;28039:36;27854:228;:::o;28088:366::-;28230:3;28251:67;28315:2;28310:3;28251:67;:::i;:::-;28244:74;;28327:93;28416:3;28327:93;:::i;:::-;28445:2;28440:3;28436:12;28429:19;;28088:366;;;:::o;28460:419::-;28626:4;28664:2;28653:9;28649:18;28641:26;;28713:9;28707:4;28703:20;28699:1;28688:9;28684:17;28677:47;28741:131;28867:4;28741:131;:::i;:::-;28733:139;;28460:419;;;:::o;28885:442::-;29034:4;29072:2;29061:9;29057:18;29049:26;;29085:71;29153:1;29142:9;29138:17;29129:6;29085:71;:::i;:::-;29166:72;29234:2;29223:9;29219:18;29210:6;29166:72;:::i;:::-;29248;29316:2;29305:9;29301:18;29292:6;29248:72;:::i;:::-;28885:442;;;;;;:::o;29333:191::-;29373:3;29392:20;29410:1;29392:20;:::i;:::-;29387:25;;29426:20;29444:1;29426:20;:::i;:::-;29421:25;;29469:1;29466;29462:9;29455:16;;29490:3;29487:1;29484:10;29481:36;;;29497:18;;:::i;:::-;29481:36;29333:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2046800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addItem(string,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"burnToken(uint256)": "infinite",
								"decimals()": "420",
								"getBalance()": "2651",
								"getItemName(uint8)": "infinite",
								"getItemPrice(uint8)": "2926",
								"getUserItems(address)": "infinite",
								"isLessThanFive(bool,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"purchaseItem(uint8)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"tokenId()": "2578",
								"totalSupply()": "2566",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferToken(address,uint256)": "infinite",
								"welcomeBonus()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 785,
									"end": 4287,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1236,
									"end": 1673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1319,
									"end": 1331,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "446567656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "44474E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1344,
									"end": 1375,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1349,
									"end": 1361,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1374,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1348,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1344,
									"end": 1348,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1348,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1375,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1344,
									"end": 1375,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1375,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1375,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1344,
									"end": 1375,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4E6F76696365204E6176696761746F7200000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1431,
									"end": 1432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1438,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1401,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1402,
									"end": 1403,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 1404,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1396,
									"end": 1438,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1396,
									"end": 1438,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4D7974686963204D6176657269636B0000000000000000000000000000000000"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1485,
									"end": 1488,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2BC"
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1458,
									"end": 1489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1454,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1456,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 1457,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1449,
									"end": 1489,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1489,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "43656C65737469616C2043727573686572000000000000000000000000000000"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1536,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1538,
									"end": 1542,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4B0"
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1509,
									"end": 1543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1505,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1506,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 1508,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1500,
									"end": 1543,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1543,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "41737472616C2041636500000000000000000000000000000000000000000000"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1583,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1585,
									"end": 1589,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "898"
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1559,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1560,
									"end": 1561,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 1562,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1554,
									"end": 1590,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1590,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "446976696E6520446F6D696E61746F7200000000000000000000000000000000"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1636,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 1642,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "960"
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1643,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1606,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1607,
									"end": 1608,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1601,
									"end": 1609,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1601,
									"end": 1643,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1643,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1662,
									"end": 1663,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1654,
									"end": 1661,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1654,
									"end": 1661,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1236,
									"end": 1673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1797,
									"end": 1892,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1797,
									"end": 1892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1867,
									"end": 1884,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1873,
									"end": 1875,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1877,
									"end": 1883,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1872,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1867,
									"end": 1872,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1867,
									"end": 1872,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1884,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1867,
									"end": 1884,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1884,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1884,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1867,
									"end": 1884,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6967,
									"end": 6972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6949,
									"end": 6973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 6947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 6974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7117,
									"end": 7119,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7106,
									"end": 7115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7102,
									"end": 7120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7198,
									"end": 7199,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7187,
									"end": 7196,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7183,
									"end": 7200,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7174,
									"end": 7180,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 7130,
									"end": 7201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7262,
									"end": 7339,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7340,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7349,
									"end": 7364,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7387,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7373,
									"end": 7388,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7440,
									"end": 7443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7477,
									"end": 7478,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7459,
									"end": 7479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7511,
									"end": 7512,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7493,
									"end": 7513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7538,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7557,
									"end": 7560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7554,
									"end": 7555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7551,
									"end": 7561,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7564,
									"end": 7582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7702,
									"end": 7707,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7684,
									"end": 7708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7709,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7870,
									"end": 7874,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7908,
									"end": 7910,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7893,
									"end": 7911,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7978,
									"end": 7987,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7974,
									"end": 7991,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7965,
									"end": 7971,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 7921,
									"end": 7992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8070,
									"end": 8072,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8055,
									"end": 8073,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8046,
									"end": 8052,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8002,
									"end": 8074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8152,
									"end": 8154,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8141,
									"end": 8150,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8137,
									"end": 8155,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8128,
									"end": 8134,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8084,
									"end": 8156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8262,
									"end": 8266,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8302,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8289,
									"end": 8298,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8285,
									"end": 8303,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8381,
									"end": 8382,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8370,
									"end": 8379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8366,
									"end": 8383,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8357,
									"end": 8363,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8313,
									"end": 8384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 4287,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016fdb7131c80ef87a978434497a9fa06b2dc96b92f7640a1179fded40a98e9f664736f6c634300081a0033",
									".code": [
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "EA5E65E0"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "F5112F87"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "AF3BCB7D"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "CE6019B4"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "7B47EC1A"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "A10F956D"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "62D6BBDF"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "30A86006"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "1072CBEA"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "12065FE0"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "17D70F7C"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 4287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1930,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4003,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4003,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1020,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1020,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3739,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3739,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3739,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1681,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1681,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1797,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2323,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2323,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4135,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4135,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3857,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3857,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3857,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2972,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2972,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3375,
											"end": 3733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3375,
											"end": 3733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3375,
											"end": 3733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2486,
											"end": 2960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2486,
											"end": 2960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2153,
											"end": 2315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2025,
											"end": 2035,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2015,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2036,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2015,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2045,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2045,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2007,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2007,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2090,
											"end": 2100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 2081,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2081,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 2118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4047,
											"end": 4054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4073,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4083,
											"end": 4093,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4073,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4094,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4073,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3795,
											"end": 3808,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3828,
											"end": 3833,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3821,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3821,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1873,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1877,
											"end": 1883,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1867,
											"end": 1884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 1867,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2434,
											"end": 2441,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2448,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2411,
											"end": 2418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2419,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2405,
											"end": 2449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2460,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2460,
											"end": 2469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2469,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4206,
											"end": 4216,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4196,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4226,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4196,
											"end": 4226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4188,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4261,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4261,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3941,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3946,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3952,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3936,
											"end": 3952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3936,
											"end": 3952,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3929,
											"end": 3952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3929,
											"end": 3952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3857,
											"end": 3960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3050,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3057,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3037,
											"end": 3062,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3029,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3029,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3138,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3139,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3145,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3125,
											"end": 3145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3145,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3110,
											"end": 3120,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3100,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3121,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3100,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3145,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3092,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3092,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3188,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3202,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3208,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3188,
											"end": 3208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3208,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3183,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3209,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3183,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3231,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3243,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3263,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3220,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3306,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E"
										},
										{
											"begin": 3308,
											"end": 3315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3331,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3343,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3351,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3352,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3358,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3338,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3358,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3282,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3461,
											"end": 3484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3498,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3504,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3461,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3461,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3545,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3545,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3580,
											"end": 3599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3633,
											"end": 3639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3639,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3681,
											"end": 3682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3671,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3683,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3690,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3661,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 3725,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2583,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2618,
											"end": 2633,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2645,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2601,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2647,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2648,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2586,
											"end": 2653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2586,
											"end": 2653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2653,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2586,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2685,
											"end": 2697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2699,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2700,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2700,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2700,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2700,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2700,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2723,
											"end": 2733,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2747,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2735,
											"end": 2745,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2735,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2717,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2748,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2717,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2792,
											"end": 2804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2768,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2818,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2858,
											"end": 2868,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2853,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2869,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2853,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2911,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2913,
											"end": 2925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2889,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2941,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2666,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2153,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2213,
											"end": 2223,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2203,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2203,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2229,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2195,
											"end": 2275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2195,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2292,
											"end": 2302,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2306,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2286,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2286,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3770,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3759,
											"end": 3764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3771,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 3882,
											"end": 3887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3866,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4090,
											"end": 4107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4041,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4251,
											"end": 4260,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4266,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4269,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 4459,
											"end": 4466,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4414,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 4587,
											"end": 4594,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4576,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4542,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 4715,
											"end": 4722,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4670,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4817,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 4833,
											"end": 4838,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4817,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 4817,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4817,
											"end": 4839,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 4817,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4810,
											"end": 4815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4840,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4797,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 4797,
											"end": 4858,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4854,
											"end": 4855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4844,
											"end": 4856,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4797,
											"end": 4858,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 4797,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5005,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4870,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4914,
											"end": 4919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4939,
											"end": 4959,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 4993,
											"end": 4998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4968,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4999,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 4968,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5005,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5005,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 5005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5336,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5011,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5105,
											"end": 5114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5103,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5092,
											"end": 5115,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5120,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5204,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5085,
											"end": 5204,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5123,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5123,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5123,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5123,
											"end": 5202,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5123,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5204,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5085,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5243,
											"end": 5244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 5311,
											"end": 5318,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5291,
											"end": 5300,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5268,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5319,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 5268,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5214,
											"end": 5329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5336,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5336,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5671,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 5342,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5401,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5438,
											"end": 5447,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5429,
											"end": 5436,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5425,
											"end": 5448,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5453,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5537,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5418,
											"end": 5537,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 5456,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5456,
											"end": 5535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5535,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 5456,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5418,
											"end": 5537,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5418,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 5646,
											"end": 5653,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 5601,
											"end": 5654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 5654,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 5601,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5547,
											"end": 5664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5671,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5671,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5677,
											"end": 5794,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5677,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 5787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5917,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5800,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5907,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5911,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 6103,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5923,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 6049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6072,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6058,
											"end": 6073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6096,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6089,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6390,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6109,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 6214,
											"end": 6218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6192,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6219,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 6192,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6310,
											"end": 6320,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6329,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6286,
											"end": 6304,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6305,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6268,
											"end": 6330,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6353,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 6265,
											"end": 6353,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6333,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6353,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 6265,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6369,
											"end": 6371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6152,
											"end": 6390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6525,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 6396,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6457,
											"end": 6477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6447,
											"end": 6477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6447,
											"end": 6477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 6514,
											"end": 6518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6486,
											"end": 6519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6519,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 6486,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6839,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 6531,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6701,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6675,
											"end": 6681,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6702,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6725,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 6669,
											"end": 6725,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 6705,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6725,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 6669,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 6765,
											"end": 6771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6743,
											"end": 6772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 6743,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6772,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6821,
											"end": 6825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6817,
											"end": 6832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6839,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6839,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6839,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6993,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 6845,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6943,
											"end": 6949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 6936,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 6950,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 6973,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6966,
											"end": 6982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6959,
											"end": 6986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7424,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 6999,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 7118,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 7160,
											"end": 7166,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 7118,
											"end": 7167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7167,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 7118,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7102,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 7102,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7102,
											"end": 7168,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 7102,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7191,
											"end": 7197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7189,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7229,
											"end": 7233,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7218,
											"end": 7234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7270,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 7256,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7246,
											"end": 7271,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7243,
											"end": 7355,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7243,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 7243,
											"end": 7355,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 7274,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 7274,
											"end": 7353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7353,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 7274,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7243,
											"end": 7355,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 7243,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7401,
											"end": 7404,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 7364,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7418,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 7364,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7424,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7424,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7784,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 7444,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7500,
											"end": 7505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7552,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7542,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7534,
											"end": 7540,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7530,
											"end": 7547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7526,
											"end": 7553,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7516,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 7516,
											"end": 7638,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7557,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 7557,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7557,
											"end": 7636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7557,
											"end": 7636,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 7557,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7516,
											"end": 7638,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 7516,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7674,
											"end": 7680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 7774,
											"end": 7777,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7759,
											"end": 7763,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 7699,
											"end": 7778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7506,
											"end": 7784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7784,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 8444,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7790,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7868,
											"end": 7874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7927,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7913,
											"end": 7922,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7904,
											"end": 7911,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7896,
											"end": 7928,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7893,
											"end": 8012,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7893,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 7893,
											"end": 8012,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 7931,
											"end": 8010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 7931,
											"end": 8010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8010,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 7931,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7893,
											"end": 8012,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 7893,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8079,
											"end": 8080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8068,
											"end": 8077,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8051,
											"end": 8082,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8101,
											"end": 8107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8095,
											"end": 8212,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8095,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 8095,
											"end": 8212,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 8131,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8131,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8210,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 8131,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8095,
											"end": 8212,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 8095,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 8291,
											"end": 8298,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8282,
											"end": 8288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8289,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 8236,
											"end": 8299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8236,
											"end": 8299,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 8236,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8226,
											"end": 8299,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8226,
											"end": 8299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8348,
											"end": 8350,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8410,
											"end": 8416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8399,
											"end": 8408,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8395,
											"end": 8417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 8374,
											"end": 8427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 8374,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8364,
											"end": 8427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8364,
											"end": 8427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8319,
											"end": 8437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 8444,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 8444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 8444,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 8444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 8444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7790,
											"end": 8444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8779,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8450,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8537,
											"end": 8544,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8533,
											"end": 8556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8529,
											"end": 8561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8526,
											"end": 8645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8526,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 8526,
											"end": 8645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8564,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 8564,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 8564,
											"end": 8643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8564,
											"end": 8643,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 8564,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8526,
											"end": 8645,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 8526,
											"end": 8645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 8754,
											"end": 8761,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8745,
											"end": 8751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8709,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8709,
											"end": 8762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8709,
											"end": 8762,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 8709,
											"end": 8762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8699,
											"end": 8762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8699,
											"end": 8762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8655,
											"end": 8772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8779,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8903,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 8785,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 8890,
											"end": 8895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8872,
											"end": 8896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8867,
											"end": 8870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8897,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9131,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 8909,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9029,
											"end": 9038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9025,
											"end": 9043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 9121,
											"end": 9122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9119,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9106,
											"end": 9123,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9053,
											"end": 9124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 9053,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9131,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9249,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9137,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9236,
											"end": 9241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9230,
											"end": 9242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9220,
											"end": 9242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9220,
											"end": 9242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9249,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9437,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9255,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9386,
											"end": 9392,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9374,
											"end": 9393,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9426,
											"end": 9430,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9421,
											"end": 9424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9437,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9437,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9255,
											"end": 9437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9573,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9443,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9531,
											"end": 9534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9523,
											"end": 9534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9523,
											"end": 9534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9561,
											"end": 9565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9556,
											"end": 9559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9552,
											"end": 9566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9544,
											"end": 9566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9573,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9443,
											"end": 9573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9681,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9579,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9652,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 9668,
											"end": 9673,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9652,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 9652,
											"end": 9674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9652,
											"end": 9674,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 9652,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9647,
											"end": 9650,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9640,
											"end": 9675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9858,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9687,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 9811,
											"end": 9814,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9773,
											"end": 9815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9815,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 9773,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9847,
											"end": 9851,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9842,
											"end": 9845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 9852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9824,
											"end": 9852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9824,
											"end": 9852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9858,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9858,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9864,
											"end": 9975,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 9864,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9932,
											"end": 9936,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9968,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9959,
											"end": 9962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 9969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 9969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 9969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9864,
											"end": 9975,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9864,
											"end": 9975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9864,
											"end": 9975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9864,
											"end": 9975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10723,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10007,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 10197,
											"end": 10202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 10151,
											"end": 10203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10203,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 10151,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10219,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10291,
											"end": 10294,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10219,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 10219,
											"end": 10303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10219,
											"end": 10303,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 10219,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10212,
											"end": 10303,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10212,
											"end": 10303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10327,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 10375,
											"end": 10380,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10327,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 10327,
											"end": 10381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10327,
											"end": 10381,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 10327,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10411,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10435,
											"end": 10436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10445,
											"end": 10451,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10442,
											"end": 10443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10439,
											"end": 10452,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10521,
											"end": 10527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10528,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 10603,
											"end": 10606,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10588,
											"end": 10601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 10548,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10607,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 10548,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10541,
											"end": 10607,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 10541,
											"end": 10607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 10681,
											"end": 10687,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10630,
											"end": 10688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10630,
											"end": 10688,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 10630,
											"end": 10688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10688,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10467,
											"end": 10468,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10460,
											"end": 10469,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 10420,
											"end": 10698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10717,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10717,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10723,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 11094,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 10729,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10868,
											"end": 10872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10908,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10895,
											"end": 10904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 10909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 10909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10955,
											"end": 10964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10949,
											"end": 10953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10945,
											"end": 10965,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10941,
											"end": 10942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10930,
											"end": 10939,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10926,
											"end": 10943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10919,
											"end": 10966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10983,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 11082,
											"end": 11086,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11073,
											"end": 11079,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10983,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10983,
											"end": 11087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10983,
											"end": 11087,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 10983,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10975,
											"end": 11087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10975,
											"end": 11087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 11094,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 11094,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 11094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 11094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10729,
											"end": 11094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11574,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 11100,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11168,
											"end": 11174,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11176,
											"end": 11182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11225,
											"end": 11227,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11213,
											"end": 11222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11211,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11200,
											"end": 11223,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11196,
											"end": 11228,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11312,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 11193,
											"end": 11312,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 11231,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11231,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11310,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 11231,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11312,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 11193,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11351,
											"end": 11352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 11421,
											"end": 11428,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11412,
											"end": 11418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11401,
											"end": 11410,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11397,
											"end": 11419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11376,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 11376,
											"end": 11429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11376,
											"end": 11429,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 11376,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11366,
											"end": 11429,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11366,
											"end": 11429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11322,
											"end": 11439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11478,
											"end": 11480,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11504,
											"end": 11557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 11549,
											"end": 11556,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11540,
											"end": 11546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11538,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11504,
											"end": 11557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 11504,
											"end": 11557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11504,
											"end": 11557,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 11504,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11574,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11574,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11100,
											"end": 11574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11580,
											"end": 11696,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11580,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 11665,
											"end": 11670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 11650,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11640,
											"end": 11672,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 11630,
											"end": 11690,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11686,
											"end": 11687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11676,
											"end": 11688,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11630,
											"end": 11690,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 11630,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11580,
											"end": 11696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11580,
											"end": 11696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11835,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 11702,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 11750,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11783,
											"end": 11789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11770,
											"end": 11790,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 11761,
											"end": 11790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11761,
											"end": 11790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 11823,
											"end": 11828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11799,
											"end": 11829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11829,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 11799,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11702,
											"end": 11835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 12309,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 11841,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11906,
											"end": 11912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11920,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11963,
											"end": 11965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11942,
											"end": 11949,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11938,
											"end": 11961,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 11966,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11969,
											"end": 12048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12089,
											"end": 12090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12114,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 12156,
											"end": 12163,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12153,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12145,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12132,
											"end": 12154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 12114,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12164,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 12114,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12104,
											"end": 12164,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12104,
											"end": 12164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12060,
											"end": 12174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12213,
											"end": 12215,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12239,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 12284,
											"end": 12291,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12275,
											"end": 12281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12260,
											"end": 12282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 12239,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12239,
											"end": 12292,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 12239,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12229,
											"end": 12292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12229,
											"end": 12292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12184,
											"end": 12302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 12309,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 12309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 12309,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 12309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 12309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 12309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12315,
											"end": 12495,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 12315,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12363,
											"end": 12440,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12360,
											"end": 12361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 12457,
											"end": 12458,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12450,
											"end": 12465,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12484,
											"end": 12488,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12474,
											"end": 12489,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12821,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 12501,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12583,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 12576,
											"end": 12580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12572,
											"end": 12584,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12630,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12623,
											"end": 12627,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12619,
											"end": 12631,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12650,
											"end": 12668,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12640,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 12640,
											"end": 12721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12706,
											"end": 12710,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 12698,
											"end": 12704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12694,
											"end": 12711,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 12711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12640,
											"end": 12721,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 12640,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12768,
											"end": 12770,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12760,
											"end": 12766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12757,
											"end": 12771,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12772,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 12731,
											"end": 12815,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 12787,
											"end": 12805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 12787,
											"end": 12805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12731,
											"end": 12815,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 12731,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12552,
											"end": 12821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12827,
											"end": 12997,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12827,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12967,
											"end": 12989,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12955,
											"end": 12961,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12951,
											"end": 12965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12944,
											"end": 12990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12827,
											"end": 12997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12827,
											"end": 12997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13369,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 13003,
											"end": 13369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13145,
											"end": 13148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13166,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 13230,
											"end": 13232,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 13225,
											"end": 13228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13166,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 13166,
											"end": 13233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13166,
											"end": 13233,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 13166,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13159,
											"end": 13233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13159,
											"end": 13233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13242,
											"end": 13335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 13331,
											"end": 13334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13242,
											"end": 13335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 13242,
											"end": 13335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13242,
											"end": 13335,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 13242,
											"end": 13335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13360,
											"end": 13362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 13358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13351,
											"end": 13363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13344,
											"end": 13363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13344,
											"end": 13363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13369,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13369,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 13369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13375,
											"end": 13794,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 13375,
											"end": 13794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13579,
											"end": 13581,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13568,
											"end": 13577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13564,
											"end": 13582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13556,
											"end": 13582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13556,
											"end": 13582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13628,
											"end": 13637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13622,
											"end": 13626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13618,
											"end": 13638,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13614,
											"end": 13615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13603,
											"end": 13612,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13599,
											"end": 13616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13592,
											"end": 13639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 13782,
											"end": 13786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 13656,
											"end": 13787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13656,
											"end": 13787,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 13656,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13648,
											"end": 13787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13648,
											"end": 13787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13375,
											"end": 13794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13375,
											"end": 13794,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13375,
											"end": 13794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13375,
											"end": 13794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13941,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 13800,
											"end": 13941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13849,
											"end": 13853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13872,
											"end": 13875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13864,
											"end": 13875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13864,
											"end": 13875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 13898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13892,
											"end": 13893,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13885,
											"end": 13899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13929,
											"end": 13933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13926,
											"end": 13927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 13934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 13934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13941,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13941,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13800,
											"end": 13941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 14040,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 13947,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13984,
											"end": 13990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14031,
											"end": 14033,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14019,
											"end": 14024,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14015,
											"end": 14029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14011,
											"end": 14034,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14001,
											"end": 14034,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14001,
											"end": 14034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 14040,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 14040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 14040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13947,
											"end": 14040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14153,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 14046,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14140,
											"end": 14145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14130,
											"end": 14146,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 14109,
											"end": 14146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14109,
											"end": 14146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14153,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14159,
											"end": 14552,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 14159,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14228,
											"end": 14234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14278,
											"end": 14279,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 14266,
											"end": 14276,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14301,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 14331,
											"end": 14397,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14320,
											"end": 14329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14301,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 14301,
											"end": 14398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14301,
											"end": 14398,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 14301,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 14449,
											"end": 14457,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14438,
											"end": 14447,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 14419,
											"end": 14458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14458,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 14419,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14407,
											"end": 14458,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14407,
											"end": 14458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14491,
											"end": 14495,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14487,
											"end": 14496,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14480,
											"end": 14485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14476,
											"end": 14497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14467,
											"end": 14497,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14467,
											"end": 14497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14540,
											"end": 14544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14530,
											"end": 14538,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14526,
											"end": 14545,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14519,
											"end": 14524,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14516,
											"end": 14546,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 14506,
											"end": 14546,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14506,
											"end": 14546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14235,
											"end": 14552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14235,
											"end": 14552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14159,
											"end": 14552,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14159,
											"end": 14552,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14159,
											"end": 14552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14159,
											"end": 14552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14159,
											"end": 14552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14159,
											"end": 14552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14558,
											"end": 14618,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 14558,
											"end": 14618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14586,
											"end": 14589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14607,
											"end": 14612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14600,
											"end": 14612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14600,
											"end": 14612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14558,
											"end": 14618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14558,
											"end": 14618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14558,
											"end": 14618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14558,
											"end": 14618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14624,
											"end": 14766,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 14624,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14674,
											"end": 14683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14707,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 14725,
											"end": 14759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 14734,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 14752,
											"end": 14757,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 14734,
											"end": 14758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14734,
											"end": 14758,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 14734,
											"end": 14758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14725,
											"end": 14759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 14725,
											"end": 14759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14725,
											"end": 14759,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 14725,
											"end": 14759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14707,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 14707,
											"end": 14760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14707,
											"end": 14760,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 14707,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14624,
											"end": 14766,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14624,
											"end": 14766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14624,
											"end": 14766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14624,
											"end": 14766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14847,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 14772,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14815,
											"end": 14818,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14836,
											"end": 14841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14829,
											"end": 14841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14829,
											"end": 14841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14853,
											"end": 15122,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 14853,
											"end": 15122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14963,
											"end": 15002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 14994,
											"end": 15001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14963,
											"end": 15002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 14963,
											"end": 15002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14963,
											"end": 15002,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 14963,
											"end": 15002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15024,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 15073,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 15097,
											"end": 15113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15073,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 15073,
											"end": 15114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15073,
											"end": 15114,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 15073,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15065,
											"end": 15071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15058,
											"end": 15062,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15052,
											"end": 15063,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15024,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 15024,
											"end": 15115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15024,
											"end": 15115,
											"name": "tag",
											"source": 8,
											"value": "566"
										},
										{
											"begin": 15024,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15018,
											"end": 15022,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15011,
											"end": 15116,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 14929,
											"end": 15122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14853,
											"end": 15122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14853,
											"end": 15122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14853,
											"end": 15122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14853,
											"end": 15122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15128,
											"end": 15201,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 15128,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15173,
											"end": 15176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15128,
											"end": 15201,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15128,
											"end": 15201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15207,
											"end": 15396,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 15207,
											"end": 15396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 15284,
											"end": 15316,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 15284,
											"end": 15316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15316,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 15284,
											"end": 15316,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15325,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 15383,
											"end": 15389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15375,
											"end": 15381,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15369,
											"end": 15373,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15325,
											"end": 15390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 15325,
											"end": 15390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15325,
											"end": 15390,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 15325,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15260,
											"end": 15396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15207,
											"end": 15396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15207,
											"end": 15396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15207,
											"end": 15396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15402,
											"end": 15588,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 15402,
											"end": 15588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15479,
											"end": 15482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15472,
											"end": 15477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15469,
											"end": 15483,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15533,
											"end": 15572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 15570,
											"end": 15571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15563,
											"end": 15568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15533,
											"end": 15572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 15533,
											"end": 15572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15533,
											"end": 15572,
											"name": "tag",
											"source": 8,
											"value": "576"
										},
										{
											"begin": 15533,
											"end": 15572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15506,
											"end": 15507,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15499,
											"end": 15504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15495,
											"end": 15508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15486,
											"end": 15508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15486,
											"end": 15508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 15462,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15402,
											"end": 15588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15402,
											"end": 15588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15402,
											"end": 15588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15594,
											"end": 16137,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 15594,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15695,
											"end": 15697,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 15690,
											"end": 15693,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15687,
											"end": 15698,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16130,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16130,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 15684,
											"end": 16130,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15729,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 15761,
											"end": 15766,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15729,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 15729,
											"end": 15767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15729,
											"end": 15767,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 15729,
											"end": 15767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 15831,
											"end": 15841,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 15813,
											"end": 15842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 15813,
											"end": 15842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15803,
											"end": 15811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15799,
											"end": 15843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 15998,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15984,
											"end": 15994,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15978,
											"end": 16027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15978,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 15978,
											"end": 16027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16017,
											"end": 16025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16002,
											"end": 16025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16002,
											"end": 16025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15978,
											"end": 16027,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 15978,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16040,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 16096,
											"end": 16118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 16114,
											"end": 16117,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 16096,
											"end": 16118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16096,
											"end": 16118,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 16096,
											"end": 16118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16086,
											"end": 16094,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16082,
											"end": 16119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16069,
											"end": 16080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16040,
											"end": 16120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 16040,
											"end": 16120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16040,
											"end": 16120,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 16040,
											"end": 16120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15699,
											"end": 16130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15699,
											"end": 16130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 16130,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 15684,
											"end": 16130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15594,
											"end": 16137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15594,
											"end": 16137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15594,
											"end": 16137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15594,
											"end": 16137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16143,
											"end": 16260,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 16143,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16197,
											"end": 16205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16247,
											"end": 16252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16241,
											"end": 16245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16237,
											"end": 16253,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 16216,
											"end": 16253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16216,
											"end": 16253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16143,
											"end": 16260,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16143,
											"end": 16260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16143,
											"end": 16260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16143,
											"end": 16260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16143,
											"end": 16260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16266,
											"end": 16435,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 16266,
											"end": 16435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16310,
											"end": 16316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 16391,
											"end": 16392,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16387,
											"end": 16393,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16379,
											"end": 16384,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16376,
											"end": 16377,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 16372,
											"end": 16385,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 16343,
											"end": 16394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 16343,
											"end": 16394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16339,
											"end": 16395,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16424,
											"end": 16428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16418,
											"end": 16422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16414,
											"end": 16429,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16404,
											"end": 16429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16404,
											"end": 16429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16317,
											"end": 16435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16266,
											"end": 16435,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16266,
											"end": 16435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16266,
											"end": 16435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16266,
											"end": 16435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16266,
											"end": 16435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16735,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 16440,
											"end": 16735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16516,
											"end": 16520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16662,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16681,
											"end": 16685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16662,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 16662,
											"end": 16691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16662,
											"end": 16691,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 16662,
											"end": 16691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16654,
											"end": 16691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16654,
											"end": 16691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16724,
											"end": 16727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16721,
											"end": 16722,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 16717,
											"end": 16728,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16708,
											"end": 16729,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16735,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16735,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16440,
											"end": 16735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16740,
											"end": 18135,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 16740,
											"end": 18135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 16890,
											"end": 16893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 16857,
											"end": 16894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16951,
											"end": 16957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16948,
											"end": 16978,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16945,
											"end": 17001,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16945,
											"end": 17001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 16945,
											"end": 17001,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16981,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 16981,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 16981,
											"end": 16999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16981,
											"end": 16999,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 16981,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16945,
											"end": 17001,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 16945,
											"end": 17001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17025,
											"end": 17063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 17057,
											"end": 17061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17051,
											"end": 17062,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17025,
											"end": 17063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 17025,
											"end": 17063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17025,
											"end": 17063,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 17025,
											"end": 17063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17110,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 17170,
											"end": 17176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17162,
											"end": 17168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17156,
											"end": 17160,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17110,
											"end": 17177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 17110,
											"end": 17177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17110,
											"end": 17177,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 17110,
											"end": 17177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17204,
											"end": 17205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17232,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17215,
											"end": 17232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17215,
											"end": 17232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17260,
											"end": 17262,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17252,
											"end": 17258,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17249,
											"end": 17263,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 17277,
											"end": 17278,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17272,
											"end": 17890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17272,
											"end": 17890,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17272,
											"end": 17890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 17272,
											"end": 17890,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17934,
											"end": 17935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17951,
											"end": 17957,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18025,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 17948,
											"end": 18025,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18000,
											"end": 18009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17995,
											"end": 17998,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 17991,
											"end": 18010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17985,
											"end": 18011,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17976,
											"end": 18011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17976,
											"end": 18011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17948,
											"end": 18025,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 17948,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 18111,
											"end": 18117,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18104,
											"end": 18109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 18051,
											"end": 18118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 18051,
											"end": 18118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18045,
											"end": 18049,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18038,
											"end": 18119,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17907,
											"end": 18129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 18129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 17242,
											"end": 18129,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17272,
											"end": 17890,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 17272,
											"end": 17890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17324,
											"end": 17328,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17320,
											"end": 17329,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17312,
											"end": 17318,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17308,
											"end": 17330,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17358,
											"end": 17395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 17390,
											"end": 17394,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17358,
											"end": 17395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 17358,
											"end": 17395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17358,
											"end": 17395,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 17358,
											"end": 17395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17417,
											"end": 17418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17445,
											"end": 17452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17442,
											"end": 17443,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17439,
											"end": 17453,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17524,
											"end": 17533,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17519,
											"end": 17522,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17509,
											"end": 17535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17501,
											"end": 17507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17494,
											"end": 17536,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17576,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17567,
											"end": 17573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17563,
											"end": 17577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17553,
											"end": 17577,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17553,
											"end": 17577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17622,
											"end": 17624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17611,
											"end": 17620,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17607,
											"end": 17625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17594,
											"end": 17625,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 17594,
											"end": 17625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17468,
											"end": 17472,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17465,
											"end": 17466,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17461,
											"end": 17473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17456,
											"end": 17473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 17431,
											"end": 17639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17658,
											"end": 17665,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17655,
											"end": 17674,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 17831,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 17831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 17652,
											"end": 17831,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17725,
											"end": 17734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17720,
											"end": 17723,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 17716,
											"end": 17735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17710,
											"end": 17736,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17768,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 17810,
											"end": 17814,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17802,
											"end": 17808,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 17798,
											"end": 17815,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17787,
											"end": 17796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17768,
											"end": 17816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 17768,
											"end": 17816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17768,
											"end": 17816,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 17768,
											"end": 17816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17760,
											"end": 17766,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17753,
											"end": 17817,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17675,
											"end": 17831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17652,
											"end": 17831,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 17652,
											"end": 17831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17877,
											"end": 17878,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 17873,
											"end": 17874,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17865,
											"end": 17871,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 17861,
											"end": 17875,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17857,
											"end": 17879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17851,
											"end": 17855,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 17844,
											"end": 17880,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17279,
											"end": 17890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17279,
											"end": 17890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17279,
											"end": 17890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 18129,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 17242,
											"end": 18129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17242,
											"end": 18129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 18135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 18135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 18135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16740,
											"end": 18135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16740,
											"end": 18135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16740,
											"end": 18135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18321,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 18141,
											"end": 18321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18189,
											"end": 18266,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18186,
											"end": 18187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18179,
											"end": 18267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18286,
											"end": 18290,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 18283,
											"end": 18284,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18276,
											"end": 18291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18310,
											"end": 18314,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 18307,
											"end": 18308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18300,
											"end": 18315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18327,
											"end": 18494,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 18327,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18364,
											"end": 18367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 18403,
											"end": 18408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18387,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 18387,
											"end": 18409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18387,
											"end": 18409,
											"name": "tag",
											"source": 8,
											"value": "607"
										},
										{
											"begin": 18387,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18378,
											"end": 18409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18378,
											"end": 18409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18431,
											"end": 18435,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 18424,
											"end": 18429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18421,
											"end": 18436,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18418,
											"end": 18459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 18418,
											"end": 18459,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18439,
											"end": 18457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 18439,
											"end": 18457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 18439,
											"end": 18457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18439,
											"end": 18457,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 18439,
											"end": 18457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18418,
											"end": 18459,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 18418,
											"end": 18459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18486,
											"end": 18487,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18479,
											"end": 18484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18475,
											"end": 18488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18468,
											"end": 18488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18468,
											"end": 18488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18327,
											"end": 18494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18327,
											"end": 18494,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18327,
											"end": 18494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18327,
											"end": 18494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18500,
											"end": 18669,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 18500,
											"end": 18669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18640,
											"end": 18661,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E7420616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 18636,
											"end": 18637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18628,
											"end": 18634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18624,
											"end": 18638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18617,
											"end": 18662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18500,
											"end": 18669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18500,
											"end": 18669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18675,
											"end": 19041,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 18675,
											"end": 19041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18817,
											"end": 18820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18838,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 18902,
											"end": 18904,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 18897,
											"end": 18900,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18838,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 18838,
											"end": 18905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18838,
											"end": 18905,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 18838,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18831,
											"end": 18905,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18831,
											"end": 18905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18914,
											"end": 19007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 19003,
											"end": 19006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18914,
											"end": 19007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 18914,
											"end": 19007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18914,
											"end": 19007,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 18914,
											"end": 19007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19032,
											"end": 19034,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19027,
											"end": 19030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19023,
											"end": 19035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19016,
											"end": 19035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19016,
											"end": 19035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18675,
											"end": 19041,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18675,
											"end": 19041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18675,
											"end": 19041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18675,
											"end": 19041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19466,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 19047,
											"end": 19466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19213,
											"end": 19217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19251,
											"end": 19253,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19240,
											"end": 19249,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19236,
											"end": 19254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19228,
											"end": 19254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19228,
											"end": 19254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19300,
											"end": 19309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19294,
											"end": 19298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19290,
											"end": 19310,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19286,
											"end": 19287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19275,
											"end": 19284,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19271,
											"end": 19288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19264,
											"end": 19311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 19454,
											"end": 19458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 19328,
											"end": 19459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19459,
											"name": "tag",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 19328,
											"end": 19459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19320,
											"end": 19459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19320,
											"end": 19459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19472,
											"end": 19636,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 19472,
											"end": 19636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19612,
											"end": 19628,
											"name": "PUSH",
											"source": 8,
											"value": "4974656D206E6F7420666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 19608,
											"end": 19609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19600,
											"end": 19606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19596,
											"end": 19610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19589,
											"end": 19629,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19472,
											"end": 19636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19472,
											"end": 19636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19642,
											"end": 20008,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 19642,
											"end": 20008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19784,
											"end": 19787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19805,
											"end": 19872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 19869,
											"end": 19871,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 19864,
											"end": 19867,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19805,
											"end": 19872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 19805,
											"end": 19872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19805,
											"end": 19872,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 19805,
											"end": 19872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19798,
											"end": 19872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19798,
											"end": 19872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 19974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 19970,
											"end": 19973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 19974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 19881,
											"end": 19974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 19974,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 19881,
											"end": 19974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19999,
											"end": 20001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19994,
											"end": 19997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19990,
											"end": 20002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19983,
											"end": 20002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19983,
											"end": 20002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19642,
											"end": 20008,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19642,
											"end": 20008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19642,
											"end": 20008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19642,
											"end": 20008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20014,
											"end": 20433,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 20014,
											"end": 20433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20180,
											"end": 20184,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20218,
											"end": 20220,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20207,
											"end": 20216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20203,
											"end": 20221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20195,
											"end": 20221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20195,
											"end": 20221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20267,
											"end": 20276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20261,
											"end": 20265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20257,
											"end": 20277,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20253,
											"end": 20254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20242,
											"end": 20251,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20238,
											"end": 20255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20231,
											"end": 20278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20295,
											"end": 20426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 20421,
											"end": 20425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20295,
											"end": 20426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 20295,
											"end": 20426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20295,
											"end": 20426,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 20295,
											"end": 20426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20287,
											"end": 20426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20287,
											"end": 20426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20014,
											"end": 20433,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20014,
											"end": 20433,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20014,
											"end": 20433,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20014,
											"end": 20433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20439,
											"end": 20588,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 20439,
											"end": 20588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20488,
											"end": 20494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20522,
											"end": 20527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20516,
											"end": 20528,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20506,
											"end": 20528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20506,
											"end": 20528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 20574,
											"end": 20580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 20548,
											"end": 20581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20548,
											"end": 20581,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 20548,
											"end": 20581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20538,
											"end": 20581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20538,
											"end": 20581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20439,
											"end": 20588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20439,
											"end": 20588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20439,
											"end": 20588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20439,
											"end": 20588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 22045,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 20594,
											"end": 22045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20705,
											"end": 20708,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20699,
											"end": 20703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20696,
											"end": 20709,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20693,
											"end": 20719,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 20693,
											"end": 20719,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 20712,
											"end": 20717,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20693,
											"end": 20719,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 20693,
											"end": 20719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20743,
											"end": 20777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 20773,
											"end": 20776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20743,
											"end": 20777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 20743,
											"end": 20777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20743,
											"end": 20777,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 20743,
											"end": 20777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20842,
											"end": 20860,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20834,
											"end": 20840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20831,
											"end": 20861,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20828,
											"end": 20884,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20828,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 20828,
											"end": 20884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 20864,
											"end": 20882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20828,
											"end": 20884,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 20828,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20908,
											"end": 20946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 20940,
											"end": 20944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20934,
											"end": 20945,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20908,
											"end": 20946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 20908,
											"end": 20946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20908,
											"end": 20946,
											"name": "tag",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 20908,
											"end": 20946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20993,
											"end": 21060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 21053,
											"end": 21059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21045,
											"end": 21051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21039,
											"end": 21043,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20993,
											"end": 21060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 20993,
											"end": 21060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20993,
											"end": 21060,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 20993,
											"end": 21060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21087,
											"end": 21088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21116,
											"end": 21118,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21108,
											"end": 21114,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21105,
											"end": 21119,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 21133,
											"end": 21134,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21128,
											"end": 21800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21128,
											"end": 21800,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 21128,
											"end": 21800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 21128,
											"end": 21800,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21844,
											"end": 21845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21861,
											"end": 21867,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21858,
											"end": 21935,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21858,
											"end": 21935,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 21858,
											"end": 21935,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21910,
											"end": 21919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21905,
											"end": 21908,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21901,
											"end": 21920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21895,
											"end": 21921,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21886,
											"end": 21921,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21886,
											"end": 21921,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21858,
											"end": 21935,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 21858,
											"end": 21935,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21961,
											"end": 22028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 22021,
											"end": 22027,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22014,
											"end": 22019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21961,
											"end": 22028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21961,
											"end": 22028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21961,
											"end": 22028,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 21961,
											"end": 22028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21955,
											"end": 21959,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21948,
											"end": 22029,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21817,
											"end": 22039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21098,
											"end": 22039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 21098,
											"end": 22039,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21128,
											"end": 21800,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 21128,
											"end": 21800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21180,
											"end": 21184,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21176,
											"end": 21185,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 21168,
											"end": 21174,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21164,
											"end": 21186,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21206,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 21238,
											"end": 21241,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21206,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 21206,
											"end": 21242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21206,
											"end": 21242,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 21206,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21199,
											"end": 21242,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 21199,
											"end": 21242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21269,
											"end": 21306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 21301,
											"end": 21305,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21269,
											"end": 21306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 21269,
											"end": 21306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21269,
											"end": 21306,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 21269,
											"end": 21306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21328,
											"end": 21329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21356,
											"end": 21363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21353,
											"end": 21354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21350,
											"end": 21364,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21435,
											"end": 21444,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21430,
											"end": 21433,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 21426,
											"end": 21445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21420,
											"end": 21446,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21412,
											"end": 21418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21405,
											"end": 21447,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21486,
											"end": 21487,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21478,
											"end": 21484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21474,
											"end": 21488,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21464,
											"end": 21488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21464,
											"end": 21488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21533,
											"end": 21534,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21522,
											"end": 21531,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21505,
											"end": 21535,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 21505,
											"end": 21535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21379,
											"end": 21383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21376,
											"end": 21377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21372,
											"end": 21384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21367,
											"end": 21384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21367,
											"end": 21384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 21342,
											"end": 21549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21577,
											"end": 21583,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21568,
											"end": 21575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21565,
											"end": 21584,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21562,
											"end": 21741,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21562,
											"end": 21741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 21562,
											"end": 21741,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21635,
											"end": 21644,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21630,
											"end": 21633,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 21626,
											"end": 21645,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21620,
											"end": 21646,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21678,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 21720,
											"end": 21724,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21712,
											"end": 21718,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 21708,
											"end": 21725,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21697,
											"end": 21706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21678,
											"end": 21726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 21678,
											"end": 21726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21678,
											"end": 21726,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 21678,
											"end": 21726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21670,
											"end": 21676,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21663,
											"end": 21727,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21585,
											"end": 21741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21562,
											"end": 21741,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 21562,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21787,
											"end": 21788,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21783,
											"end": 21784,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 21775,
											"end": 21781,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 21771,
											"end": 21785,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 21767,
											"end": 21789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21761,
											"end": 21765,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 21754,
											"end": 21790,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21135,
											"end": 21800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21135,
											"end": 21800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21135,
											"end": 21800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21098,
											"end": 22039,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 21098,
											"end": 22039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21098,
											"end": 22039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20683,
											"end": 22045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20683,
											"end": 22045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20683,
											"end": 22045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 22045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 22045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 22045,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 20594,
											"end": 22045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 22045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22075,
											"end": 22906,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 22075,
											"end": 22906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22160,
											"end": 22163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22197,
											"end": 22202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22191,
											"end": 22203,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22226,
											"end": 22262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 22252,
											"end": 22261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22226,
											"end": 22262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 22226,
											"end": 22262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22226,
											"end": 22262,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 22226,
											"end": 22262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22278,
											"end": 22349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 22342,
											"end": 22348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22337,
											"end": 22340,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22278,
											"end": 22349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 22278,
											"end": 22349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22278,
											"end": 22349,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 22278,
											"end": 22349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22271,
											"end": 22349,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 22271,
											"end": 22349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22380,
											"end": 22381,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 22369,
											"end": 22378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22365,
											"end": 22382,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22396,
											"end": 22397,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22569,
											"end": 22570,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 22564,
											"end": 22900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22564,
											"end": 22900,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 22564,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 22564,
											"end": 22900,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22358,
											"end": 22900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 22358,
											"end": 22900,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22475,
											"end": 22479,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 22471,
											"end": 22480,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 22460,
											"end": 22469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22456,
											"end": 22481,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22451,
											"end": 22454,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22444,
											"end": 22482,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22535,
											"end": 22541,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22528,
											"end": 22542,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22515,
											"end": 22519,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22511,
											"end": 22544,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 22506,
											"end": 22509,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22502,
											"end": 22545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22495,
											"end": 22545,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22495,
											"end": 22545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 22391,
											"end": 22555,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22564,
											"end": 22900,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 22564,
											"end": 22900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22631,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 22663,
											"end": 22668,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22631,
											"end": 22669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 22631,
											"end": 22669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22631,
											"end": 22669,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 22631,
											"end": 22669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 22692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22719,
											"end": 22725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22716,
											"end": 22717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22713,
											"end": 22726,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22793,
											"end": 22800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22787,
											"end": 22801,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22783,
											"end": 22784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22778,
											"end": 22781,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 22774,
											"end": 22785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22767,
											"end": 22802,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22843,
											"end": 22844,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 22834,
											"end": 22841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22830,
											"end": 22845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22819,
											"end": 22845,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22819,
											"end": 22845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22741,
											"end": 22745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22738,
											"end": 22739,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22734,
											"end": 22746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22729,
											"end": 22746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22729,
											"end": 22746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 22705,
											"end": 22859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22888,
											"end": 22889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22883,
											"end": 22886,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 22879,
											"end": 22890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22872,
											"end": 22890,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 22872,
											"end": 22890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22571,
											"end": 22900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22571,
											"end": 22900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22358,
											"end": 22900,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 22358,
											"end": 22900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22358,
											"end": 22900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22164,
											"end": 22906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22164,
											"end": 22906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22075,
											"end": 22906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22075,
											"end": 22906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22075,
											"end": 22906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22075,
											"end": 22906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22075,
											"end": 22906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23074,
											"end": 23078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23112,
											"end": 23114,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 23101,
											"end": 23110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23097,
											"end": 23115,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23089,
											"end": 23115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23125,
											"end": 23192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 23189,
											"end": 23190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23178,
											"end": 23187,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23174,
											"end": 23191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23165,
											"end": 23171,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23125,
											"end": 23192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 23125,
											"end": 23192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23125,
											"end": 23192,
											"name": "tag",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 23125,
											"end": 23192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23239,
											"end": 23248,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23233,
											"end": 23237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23229,
											"end": 23249,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23224,
											"end": 23226,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23213,
											"end": 23222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23209,
											"end": 23227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23202,
											"end": 23250,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23267,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 23337,
											"end": 23341,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23328,
											"end": 23334,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23267,
											"end": 23342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 23267,
											"end": 23342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23267,
											"end": 23342,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 23267,
											"end": 23342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23259,
											"end": 23342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23352,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 23420,
											"end": 23422,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23409,
											"end": 23418,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23405,
											"end": 23423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23396,
											"end": 23402,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23352,
											"end": 23424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 23352,
											"end": 23424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23352,
											"end": 23424,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 23352,
											"end": 23424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 23431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23437,
											"end": 23617,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 23437,
											"end": 23617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23485,
											"end": 23562,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23482,
											"end": 23483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23475,
											"end": 23563,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23582,
											"end": 23586,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 23579,
											"end": 23580,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23572,
											"end": 23587,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23606,
											"end": 23610,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 23603,
											"end": 23604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23596,
											"end": 23611,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 23623,
											"end": 23702,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 23623,
											"end": 23702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23662,
											"end": 23669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23691,
											"end": 23696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23680,
											"end": 23696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23680,
											"end": 23696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23623,
											"end": 23702,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23623,
											"end": 23702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23623,
											"end": 23702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23623,
											"end": 23702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23708,
											"end": 23865,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 23708,
											"end": 23865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23813,
											"end": 23858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 23833,
											"end": 23857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 23851,
											"end": 23856,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23833,
											"end": 23857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 23833,
											"end": 23857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23833,
											"end": 23857,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 23833,
											"end": 23857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23813,
											"end": 23858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 23813,
											"end": 23858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23813,
											"end": 23858,
											"name": "tag",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 23813,
											"end": 23858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23808,
											"end": 23811,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23801,
											"end": 23859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23708,
											"end": 23865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23708,
											"end": 23865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23708,
											"end": 23865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23871,
											"end": 23965,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 23871,
											"end": 23965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23904,
											"end": 23912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23952,
											"end": 23957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23948,
											"end": 23950,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 23944,
											"end": 23958,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 23923,
											"end": 23958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23923,
											"end": 23958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23871,
											"end": 23965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23871,
											"end": 23965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23871,
											"end": 23965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23871,
											"end": 23965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23971,
											"end": 24065,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 23971,
											"end": 24065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24010,
											"end": 24017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24039,
											"end": 24059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 24053,
											"end": 24058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24039,
											"end": 24059,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 24039,
											"end": 24059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24039,
											"end": 24059,
											"name": "tag",
											"source": 8,
											"value": "663"
										},
										{
											"begin": 24039,
											"end": 24059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24028,
											"end": 24059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24028,
											"end": 24059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23971,
											"end": 24065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23971,
											"end": 24065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23971,
											"end": 24065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23971,
											"end": 24065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24071,
											"end": 24171,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 24071,
											"end": 24171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24110,
											"end": 24117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24139,
											"end": 24165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 24159,
											"end": 24164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24139,
											"end": 24165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 24139,
											"end": 24165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24139,
											"end": 24165,
											"name": "tag",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 24139,
											"end": 24165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24071,
											"end": 24171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24071,
											"end": 24171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24071,
											"end": 24171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24071,
											"end": 24171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24177,
											"end": 24334,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 24177,
											"end": 24334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24282,
											"end": 24327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 24302,
											"end": 24326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 24320,
											"end": 24325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 24302,
											"end": 24326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24326,
											"name": "tag",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 24302,
											"end": 24326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24282,
											"end": 24327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 24282,
											"end": 24327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24282,
											"end": 24327,
											"name": "tag",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 24282,
											"end": 24327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24277,
											"end": 24280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24270,
											"end": 24328,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24177,
											"end": 24334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24177,
											"end": 24334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24177,
											"end": 24334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24340,
											"end": 24737,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 24340,
											"end": 24737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24480,
											"end": 24483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24495,
											"end": 24570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 24566,
											"end": 24569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24557,
											"end": 24563,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24495,
											"end": 24570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 24495,
											"end": 24570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24495,
											"end": 24570,
											"name": "tag",
											"source": 8,
											"value": "670"
										},
										{
											"begin": 24495,
											"end": 24570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24595,
											"end": 24597,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24590,
											"end": 24593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24586,
											"end": 24598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24579,
											"end": 24598,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24579,
											"end": 24598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24608,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "671"
										},
										{
											"begin": 24679,
											"end": 24682,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24670,
											"end": 24676,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24608,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 24608,
											"end": 24683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24608,
											"end": 24683,
											"name": "tag",
											"source": 8,
											"value": "671"
										},
										{
											"begin": 24608,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24708,
											"end": 24710,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 24703,
											"end": 24706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24699,
											"end": 24711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24692,
											"end": 24711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24692,
											"end": 24711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24728,
											"end": 24731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 24731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 24731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24340,
											"end": 24737,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 24340,
											"end": 24737,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24340,
											"end": 24737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24340,
											"end": 24737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24340,
											"end": 24737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24340,
											"end": 24737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24743,
											"end": 24923,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 24743,
											"end": 24923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24791,
											"end": 24868,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24788,
											"end": 24789,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24781,
											"end": 24869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24888,
											"end": 24892,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 24885,
											"end": 24886,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 24878,
											"end": 24893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24912,
											"end": 24916,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 24909,
											"end": 24910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24902,
											"end": 24917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 25105,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 24929,
											"end": 25105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24961,
											"end": 24962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24978,
											"end": 24998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "674"
										},
										{
											"begin": 24996,
											"end": 24997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24978,
											"end": 24998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 24978,
											"end": 24998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24978,
											"end": 24998,
											"name": "tag",
											"source": 8,
											"value": "674"
										},
										{
											"begin": 24978,
											"end": 24998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24973,
											"end": 24998,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24973,
											"end": 24998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25012,
											"end": 25032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 25030,
											"end": 25031,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25012,
											"end": 25032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 25012,
											"end": 25032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25012,
											"end": 25032,
											"name": "tag",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 25012,
											"end": 25032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25007,
											"end": 25032,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25007,
											"end": 25032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25051,
											"end": 25052,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25041,
											"end": 25076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 25041,
											"end": 25076,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25056,
											"end": 25074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 25056,
											"end": 25074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 25056,
											"end": 25074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25056,
											"end": 25074,
											"name": "tag",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 25056,
											"end": 25074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25041,
											"end": 25076,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 25041,
											"end": 25076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25097,
											"end": 25098,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25094,
											"end": 25095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25090,
											"end": 25099,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 25085,
											"end": 25099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25085,
											"end": 25099,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 25105,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 25105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 25105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 25105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 25105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25521,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 25111,
											"end": 25521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25151,
											"end": 25158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25174,
											"end": 25194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 25192,
											"end": 25193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25174,
											"end": 25194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 25174,
											"end": 25194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25174,
											"end": 25194,
											"name": "tag",
											"source": 8,
											"value": "679"
										},
										{
											"begin": 25174,
											"end": 25194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25169,
											"end": 25194,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25169,
											"end": 25194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25208,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 25226,
											"end": 25227,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25208,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 25208,
											"end": 25228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25208,
											"end": 25228,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 25208,
											"end": 25228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25203,
											"end": 25228,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25203,
											"end": 25228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25263,
											"end": 25264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25260,
											"end": 25261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25256,
											"end": 25265,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 25285,
											"end": 25315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 25303,
											"end": 25314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25285,
											"end": 25315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 25285,
											"end": 25315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25285,
											"end": 25315,
											"name": "tag",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 25285,
											"end": 25315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25274,
											"end": 25315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25274,
											"end": 25315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25464,
											"end": 25465,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25455,
											"end": 25462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25451,
											"end": 25466,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 25448,
											"end": 25449,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25445,
											"end": 25467,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25425,
											"end": 25426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25418,
											"end": 25427,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25398,
											"end": 25481,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 25375,
											"end": 25514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 25375,
											"end": 25514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25494,
											"end": 25512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 25494,
											"end": 25512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 25494,
											"end": 25512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25494,
											"end": 25512,
											"name": "tag",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 25494,
											"end": 25512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25375,
											"end": 25514,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 25375,
											"end": 25514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25159,
											"end": 25521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25521,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25527,
											"end": 25680,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 25527,
											"end": 25680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25667,
											"end": 25672,
											"name": "PUSH",
											"source": 8,
											"value": "776F6E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25663,
											"end": 25664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25655,
											"end": 25661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25651,
											"end": 25665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25644,
											"end": 25673,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25527,
											"end": 25680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25527,
											"end": 25680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25686,
											"end": 26051,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 25686,
											"end": 26051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25828,
											"end": 25831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25849,
											"end": 25915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 25913,
											"end": 25914,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 25908,
											"end": 25911,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25849,
											"end": 25915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 25849,
											"end": 25915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25849,
											"end": 25915,
											"name": "tag",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 25849,
											"end": 25915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25842,
											"end": 25915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25842,
											"end": 25915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25924,
											"end": 26017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 26013,
											"end": 26016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25924,
											"end": 26017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 25924,
											"end": 26017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25924,
											"end": 26017,
											"name": "tag",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 25924,
											"end": 26017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26042,
											"end": 26044,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26037,
											"end": 26040,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26033,
											"end": 26045,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26026,
											"end": 26045,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26026,
											"end": 26045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25686,
											"end": 26051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25686,
											"end": 26051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25686,
											"end": 26051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25686,
											"end": 26051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26684,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 26057,
											"end": 26684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26273,
											"end": 26277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26311,
											"end": 26313,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 26300,
											"end": 26309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26296,
											"end": 26314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26288,
											"end": 26314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26288,
											"end": 26314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26324,
											"end": 26395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 26392,
											"end": 26393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26381,
											"end": 26390,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26377,
											"end": 26394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26368,
											"end": 26374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26324,
											"end": 26395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 26324,
											"end": 26395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26324,
											"end": 26395,
											"name": "tag",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 26324,
											"end": 26395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26405,
											"end": 26471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 26467,
											"end": 26469,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26456,
											"end": 26465,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26452,
											"end": 26470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26443,
											"end": 26449,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26405,
											"end": 26471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 26405,
											"end": 26471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26405,
											"end": 26471,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 26405,
											"end": 26471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26518,
											"end": 26527,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26512,
											"end": 26516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26508,
											"end": 26528,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 26503,
											"end": 26505,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26492,
											"end": 26501,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26488,
											"end": 26506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26481,
											"end": 26529,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 26672,
											"end": 26676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 26546,
											"end": 26677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "tag",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26538,
											"end": 26677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26538,
											"end": 26677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26684,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26057,
											"end": 26684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26690,
											"end": 26844,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 26690,
											"end": 26844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26830,
											"end": 26836,
											"name": "PUSH",
											"source": 8,
											"value": "6C6F737400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26826,
											"end": 26827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26818,
											"end": 26824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26814,
											"end": 26828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26807,
											"end": 26837,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26690,
											"end": 26844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26690,
											"end": 26844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26850,
											"end": 27215,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 26850,
											"end": 27215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26992,
											"end": 26995,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27013,
											"end": 27079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 27077,
											"end": 27078,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 27072,
											"end": 27075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27013,
											"end": 27079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 27013,
											"end": 27079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27013,
											"end": 27079,
											"name": "tag",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 27013,
											"end": 27079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27006,
											"end": 27079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27006,
											"end": 27079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27088,
											"end": 27181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 27177,
											"end": 27180,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27088,
											"end": 27181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 27088,
											"end": 27181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27088,
											"end": 27181,
											"name": "tag",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 27088,
											"end": 27181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27206,
											"end": 27208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27201,
											"end": 27204,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27197,
											"end": 27209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27190,
											"end": 27209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27190,
											"end": 27209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26850,
											"end": 27215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26850,
											"end": 27215,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26850,
											"end": 27215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26850,
											"end": 27215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27221,
											"end": 27848,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 27221,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27437,
											"end": 27441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27475,
											"end": 27477,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 27464,
											"end": 27473,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27460,
											"end": 27478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27452,
											"end": 27478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27452,
											"end": 27478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27488,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 27556,
											"end": 27557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27545,
											"end": 27554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27541,
											"end": 27558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27532,
											"end": 27538,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27488,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 27488,
											"end": 27559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27488,
											"end": 27559,
											"name": "tag",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 27488,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27569,
											"end": 27635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 27631,
											"end": 27633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27620,
											"end": 27629,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27616,
											"end": 27634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27607,
											"end": 27613,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27569,
											"end": 27635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 27569,
											"end": 27635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27569,
											"end": 27635,
											"name": "tag",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 27569,
											"end": 27635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27682,
											"end": 27691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27676,
											"end": 27680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27672,
											"end": 27692,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 27667,
											"end": 27669,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 27656,
											"end": 27665,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27652,
											"end": 27670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27645,
											"end": 27693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27710,
											"end": 27841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 27836,
											"end": 27840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27710,
											"end": 27841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 27710,
											"end": 27841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27710,
											"end": 27841,
											"name": "tag",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 27710,
											"end": 27841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27702,
											"end": 27841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27702,
											"end": 27841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27221,
											"end": 27848,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 27221,
											"end": 27848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27221,
											"end": 27848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27221,
											"end": 27848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27221,
											"end": 27848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27221,
											"end": 27848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27854,
											"end": 28082,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 27854,
											"end": 28082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27994,
											"end": 28028,
											"name": "PUSH",
											"source": 8,
											"value": "596F7527766520616C726561647920636C61696D656420796F75722077656C63"
										},
										{
											"begin": 27990,
											"end": 27991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27982,
											"end": 27988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27978,
											"end": 27992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27971,
											"end": 28029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28063,
											"end": 28074,
											"name": "PUSH",
											"source": 8,
											"value": "6F6D6520626F6E75730000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28058,
											"end": 28060,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28050,
											"end": 28056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28046,
											"end": 28061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28039,
											"end": 28075,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27854,
											"end": 28082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27854,
											"end": 28082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28088,
											"end": 28454,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 28088,
											"end": 28454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28230,
											"end": 28233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28251,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 28315,
											"end": 28317,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 28310,
											"end": 28313,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28251,
											"end": 28318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 28251,
											"end": 28318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28251,
											"end": 28318,
											"name": "tag",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 28251,
											"end": 28318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28244,
											"end": 28318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28244,
											"end": 28318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28327,
											"end": 28420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 28416,
											"end": 28419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28327,
											"end": 28420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 28327,
											"end": 28420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28327,
											"end": 28420,
											"name": "tag",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 28327,
											"end": 28420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28445,
											"end": 28447,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 28440,
											"end": 28443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28436,
											"end": 28448,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28429,
											"end": 28448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28429,
											"end": 28448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28088,
											"end": 28454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28088,
											"end": 28454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28088,
											"end": 28454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28088,
											"end": 28454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28460,
											"end": 28879,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 28460,
											"end": 28879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28626,
											"end": 28630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28664,
											"end": 28666,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28653,
											"end": 28662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28649,
											"end": 28667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28641,
											"end": 28667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28641,
											"end": 28667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28713,
											"end": 28722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28707,
											"end": 28711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28703,
											"end": 28723,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28699,
											"end": 28700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28688,
											"end": 28697,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28684,
											"end": 28701,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28677,
											"end": 28724,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28741,
											"end": 28872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 28867,
											"end": 28871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28741,
											"end": 28872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 28741,
											"end": 28872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28741,
											"end": 28872,
											"name": "tag",
											"source": 8,
											"value": "705"
										},
										{
											"begin": 28741,
											"end": 28872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28733,
											"end": 28872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28733,
											"end": 28872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28460,
											"end": 28879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28460,
											"end": 28879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28460,
											"end": 28879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28460,
											"end": 28879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29034,
											"end": 29038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29072,
											"end": 29074,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 29061,
											"end": 29070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29057,
											"end": 29075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29049,
											"end": 29075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29049,
											"end": 29075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29085,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "707"
										},
										{
											"begin": 29153,
											"end": 29154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29142,
											"end": 29151,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29138,
											"end": 29155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29129,
											"end": 29135,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 29085,
											"end": 29156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 29085,
											"end": 29156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29085,
											"end": 29156,
											"name": "tag",
											"source": 8,
											"value": "707"
										},
										{
											"begin": 29085,
											"end": 29156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29166,
											"end": 29238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 29234,
											"end": 29236,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29223,
											"end": 29232,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29219,
											"end": 29237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29210,
											"end": 29216,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 29166,
											"end": 29238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 29166,
											"end": 29238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29166,
											"end": 29238,
											"name": "tag",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 29166,
											"end": 29238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29248,
											"end": 29320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "709"
										},
										{
											"begin": 29316,
											"end": 29318,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 29305,
											"end": 29314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29301,
											"end": 29319,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29292,
											"end": 29298,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 29248,
											"end": 29320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 29248,
											"end": 29320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29248,
											"end": 29320,
											"name": "tag",
											"source": 8,
											"value": "709"
										},
										{
											"begin": 29248,
											"end": 29320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28885,
											"end": 29327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29333,
											"end": 29524,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 29333,
											"end": 29524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29373,
											"end": 29376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29392,
											"end": 29412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 29410,
											"end": 29411,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29392,
											"end": 29412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 29392,
											"end": 29412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29392,
											"end": 29412,
											"name": "tag",
											"source": 8,
											"value": "711"
										},
										{
											"begin": 29392,
											"end": 29412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29387,
											"end": 29412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29387,
											"end": 29412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29426,
											"end": 29446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 29444,
											"end": 29445,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29426,
											"end": 29446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 29426,
											"end": 29446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29426,
											"end": 29446,
											"name": "tag",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 29426,
											"end": 29446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29421,
											"end": 29446,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 29421,
											"end": 29446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29469,
											"end": 29470,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29466,
											"end": 29467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29462,
											"end": 29471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29455,
											"end": 29471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29455,
											"end": 29471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29490,
											"end": 29493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 29487,
											"end": 29488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29484,
											"end": 29494,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 29481,
											"end": 29517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 29481,
											"end": 29517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 29481,
											"end": 29517,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 29497,
											"end": 29515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 29497,
											"end": 29515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 29497,
											"end": 29515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29497,
											"end": 29515,
											"name": "tag",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 29497,
											"end": 29515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29481,
											"end": 29517,
											"name": "tag",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 29481,
											"end": 29517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29333,
											"end": 29524,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 29333,
											"end": 29524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29333,
											"end": 29524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29333,
											"end": 29524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29333,
											"end": 29524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DegenToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addItem(string,uint256)": "62d6bbdf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnToken(uint256)": "7b47ec1a",
							"decimals()": "313ce567",
							"getBalance()": "12065fe0",
							"getItemName(uint8)": "30a86006",
							"getItemPrice(uint8)": "a10f956d",
							"getUserItems(address)": "ce6019b4",
							"isLessThanFive(bool,uint256)": "ea5e65e0",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"purchaseItem(uint8)": "af3bcb7d",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokenId()": "17d70f7c",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferToken(address,uint256)": "1072cbea",
							"welcomeBonus()": "f5112f87"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"won\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"GameOutcome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_id\",\"type\":\"uint8\"}],\"name\":\"getItemName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_id\",\"type\":\"uint8\"}],\"name\":\"getItemPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserItems\",\"outputs\":[{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_prediction\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"isLessThanFive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_itemId\",\"type\":\"uint8\"}],\"name\":\"purchaseItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"welcomeBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DegenToken.sol\":\"DegenToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DegenToken.sol\":{\"keccak256\":\"0x1123789d6eb69d6b285cfb9dc597bf265acc291e2433616cacb2146927ee6dc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46479b7568ff1710d0fd99dbc433a808ad8482893b21ae58fd0f26ba0a363b3a\",\"dweb:/ipfs/QmTwbEjqZv7sgkK45tLUYC5X6p63BfewwSPpp5vTuzXuQF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "items",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint8,t_struct(Item)997_storage)"
							},
							{
								"astId": 1008,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "playerItems",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_struct(Item)997_storage)dyn_storage)"
							},
							{
								"astId": 1010,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "tokenId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Item)997_storage)dyn_storage": {
								"base": "t_struct(Item)997_storage",
								"encoding": "dynamic_array",
								"label": "struct DegenToken.Item[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(Item)997_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegenToken.Item[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Item)997_storage)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint8,t_struct(Item)997_storage)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => struct DegenToken.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)997_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Item)997_storage": {
								"encoding": "inplace",
								"label": "struct DegenToken.Item",
								"members": [
									{
										"astId": 992,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 994,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "itemId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 996,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/DegenToken.sol": {
				"ast": {
					"absolutePath": "contracts/DegenToken.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"DegenToken": [
							1431
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						]
					},
					"id": 1432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "568:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 800,
							"src": "596:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 148,
							"src": "653:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 924,
							"src": "707:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "ERC20",
										"nameLocations": [
											"808:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "808:5:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "808:5:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "Ownable",
										"nameLocations": [
											"815:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "815:7:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "815:7:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "ERC20Burnable",
										"nameLocations": [
											"824:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "824:13:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "824:13:7"
								}
							],
							"canonicalName": "DegenToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1431,
							"linearizedBaseContracts": [
								1431,
								923,
								147,
								799,
								189,
								949,
								877,
								979
							],
							"name": "DegenToken",
							"nameLocation": "794:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DegenToken.Item",
									"id": 997,
									"members": [
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "877:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "870:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 991,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "870:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "898:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "892:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 993,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "892:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "923:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "915:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "854:4:7",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "847:89:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1002,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "964:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1431,
									"src": "942:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
										"typeString": "mapping(uint8 => struct DegenToken.Item)"
									},
									"typeName": {
										"id": 1001,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 998,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "951:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "942:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
											"typeString": "mapping(uint8 => struct DegenToken.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1000,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 999,
												"name": "Item",
												"nameLocations": [
													"958:4:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "958:4:7"
											},
											"referencedDeclaration": 997,
											"src": "958:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
												"typeString": "struct DegenToken.Item"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1008,
									"mutability": "mutable",
									"name": "playerItems",
									"nameLocation": "1002:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1431,
									"src": "976:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DegenToken.Item[])"
									},
									"typeName": {
										"id": 1007,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1003,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "985:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "976:25:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DegenToken.Item[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1005,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1004,
													"name": "Item",
													"nameLocations": [
														"994:4:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 997,
													"src": "994:4:7"
												},
												"referencedDeclaration": 997,
												"src": "994:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
													"typeString": "struct DegenToken.Item"
												}
											},
											"id": 1006,
											"nodeType": "ArrayTypeName",
											"src": "994:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr",
												"typeString": "struct DegenToken.Item[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "17d70f7c",
									"id": 1010,
									"mutability": "mutable",
									"name": "tokenId",
									"nameLocation": "1033:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1431,
									"src": "1020:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1009,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1020:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e",
									"id": 1020,
									"name": "ItemPurchased",
									"nameLocation": "1059:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1089:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1073:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1102:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1096:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1013,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1096:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "1117:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1110:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1110:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1135:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1127:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:69:7"
									},
									"src": "1053:89:7"
								},
								{
									"anonymous": false,
									"eventSelector": "d04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587",
									"id": 1030,
									"name": "GameOutcome",
									"nameLocation": "1154:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1182:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1166:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "1198:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1190:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "won",
												"nameLocation": "1208:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1203:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1203:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1220:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1213:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1213:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:62:7"
									},
									"src": "1148:80:7"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "1333:340:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1349:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "1363:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "1344:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1344:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1344:31:7"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1049,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1396:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1051,
														"indexExpression": {
															"hexValue": "31",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1396:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "4e6f76696365204e6176696761746f72",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1412:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																	"typeString": "literal_string \"Novice Navigator\""
																},
																"value": "Novice Navigator"
															},
															{
																"hexValue": "31",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1431:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															{
																"hexValue": "313030",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1434:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																	"typeString": "literal_string \"Novice Navigator\""
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"id": 1052,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1407:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1407:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1396:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1396:42:7"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1059,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1449:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"hexValue": "32",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1455:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1449:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "4d7974686963204d6176657269636b",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1463:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																	"typeString": "literal_string \"Mythic Maverick\""
																},
																"value": "Mythic Maverick"
															},
															{
																"hexValue": "32",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1482:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"hexValue": "373030",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1485:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_700_by_1",
																	"typeString": "int_const 700"
																},
																"value": "700"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																	"typeString": "literal_string \"Mythic Maverick\""
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_rational_700_by_1",
																	"typeString": "int_const 700"
																}
															],
															"id": 1062,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1458:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1458:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1449:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1449:40:7"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1069,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1500:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1071,
														"indexExpression": {
															"hexValue": "33",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1506:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1500:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "43656c65737469616c2043727573686572",
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1514:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																	"typeString": "literal_string \"Celestial Crusher\""
																},
																"value": "Celestial Crusher"
															},
															{
																"hexValue": "33",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1535:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															{
																"hexValue": "31323030",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1538:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																},
																"value": "1200"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																	"typeString": "literal_string \"Celestial Crusher\""
																},
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																{
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																}
															],
															"id": 1072,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1509:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1509:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1500:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1500:43:7"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1079,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1554:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1081,
														"indexExpression": {
															"hexValue": "34",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1560:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1554:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "41737472616c20416365",
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1568:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																	"typeString": "literal_string \"Astral Ace\""
																},
																"value": "Astral Ace"
															},
															{
																"hexValue": "34",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1582:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															{
																"hexValue": "32323030",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1585:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2200_by_1",
																	"typeString": "int_const 2200"
																},
																"value": "2200"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																	"typeString": "literal_string \"Astral Ace\""
																},
																{
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																{
																	"typeIdentifier": "t_rational_2200_by_1",
																	"typeString": "int_const 2200"
																}
															],
															"id": 1082,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1563:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1563:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1554:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1554:36:7"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1089,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1601:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1091,
														"indexExpression": {
															"hexValue": "35",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1607:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1601:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "446976696e6520446f6d696e61746f72",
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1615:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																	"typeString": "literal_string \"Divine Dominator\""
																},
																"value": "Divine Dominator"
															},
															{
																"hexValue": "35",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1635:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															{
																"hexValue": "32343030",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1638:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2400_by_1",
																	"typeString": "int_const 2400"
																},
																"value": "2400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																	"typeString": "literal_string \"Divine Dominator\""
																},
																{
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																{
																	"typeIdentifier": "t_rational_2400_by_1",
																	"typeString": "int_const 2400"
																}
															],
															"id": 1092,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1610:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1610:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1601:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "1601:42:7"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "1654:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1662:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1654:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "1654:9:7"
											}
										]
									},
									"id": 1104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446567656e",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1295:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_906c077abc9a71ae76538cee0d26636e7b6a00e3d54b28138c5ecbb7aec06c8d",
														"typeString": "literal_string \"Degen\""
													},
													"value": "Degen"
												},
												{
													"hexValue": "44474e",
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1304:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9f9ff197d13cbef1db00fe5f394520d062f532845bf34370b18f7b8fc04c88",
														"typeString": "literal_string \"DGN\""
													},
													"value": "DGN"
												}
											],
											"id": 1039,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1036,
												"name": "ERC20",
												"nameLocations": [
													"1289:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1289:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1289:21:7"
										},
										{
											"arguments": [
												{
													"id": 1041,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1032,
													"src": "1319:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1042,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1040,
												"name": "Ownable",
												"nameLocations": [
													"1311:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1311:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1311:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1257:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1249:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "tokenSupply",
												"nameLocation": "1276:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1271:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1271:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:40:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1333:0:7"
									},
									"scope": 1431,
									"src": "1236:437:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "1737:27:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1755:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1109,
												"id": 1111,
												"nodeType": "Return",
												"src": "1748:8:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1690:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1106,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1701:8:7"
									},
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1698:2:7"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1731:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1107,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1731:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:7:7"
									},
									"scope": 1431,
									"src": "1681:83:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "1856:36:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1873:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1877:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1867:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "1867:17:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1119,
												"name": "onlyOwner",
												"nameLocations": [
													"1846:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1846:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1846:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "1806:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1819:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1811:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1831:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1823:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:28:7"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1856:0:7"
									},
									"scope": 1431,
									"src": "1797:95:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "1996:122:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1137,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2025:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2029:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2025:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1136,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2015:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1140,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "2038:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2015:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2047:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2007:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2007:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "2090:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "2102:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2081:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2081:29:7"
											}
										]
									},
									"functionSelector": "1072cbea",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "1939:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "1961:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1953:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1978:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1973:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1973:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:34:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:0:7"
									},
									"scope": 1431,
									"src": "1930:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "2184:131:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1156,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2213:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2217:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2213:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1155,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2203:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2203:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2228:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2203:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527766520616c726561647920636c61696d656420796f75722077656c636f6d6520626f6e7573",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2231:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																"typeString": "literal_string \"You've already claimed your welcome bonus\""
															},
															"value": "You've already claimed your welcome bonus"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																"typeString": "literal_string \"You've already claimed your welcome bonus\""
															}
														],
														"id": 1154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2195:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2195:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2195:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2292:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2296:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2292:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3530",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2304:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															}
														],
														"id": 1164,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2286:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2286:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "2286:21:7"
											}
										]
									},
									"functionSelector": "f5112f87",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "welcomeBonus",
									"nameLocation": "2162:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2174:2:7"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2184:0:7"
									},
									"scope": 1431,
									"src": "2153:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "2394:83:7",
										"statements": [
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1180,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "2405:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1182,
														"indexExpression": {
															"id": 1181,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2411:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2405:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1184,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "2427:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1185,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "2434:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 1186,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2442:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1183,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "2422:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2422:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "2405:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2405:44:7"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2460:9:7",
													"subExpression": {
														"id": 1190,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2460:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "2460:9:7"
											}
										]
									},
									"functionSelector": "62d6bbdf",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1177,
												"name": "onlyOwner",
												"nameLocations": [
													"2384:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2384:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2384:9:7"
										}
									],
									"name": "addItem",
									"nameLocation": "2332:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2354:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2340:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2340:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2369:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2361:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2339:37:7"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:0:7"
									},
									"scope": 1431,
									"src": "2323:154:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "2555:405:7",
										"statements": [
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "randomNumber",
														"nameLocation": "2571:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "2566:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1201,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2566:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1208,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2618:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2624:9:7",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2618:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1210,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2635:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2639:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2635:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1206,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2601:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2605:12:7",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2601:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2601:45:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1205,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2591:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2591:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2586:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1203,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2586:4:7",
																"typeDescriptions": {}
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2586:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2651:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2586:67:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2566:87:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "_prediction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "2670:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1219,
																	"name": "randomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "2685:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2698:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "2685:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1222,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2684:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2670:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1253,
													"nodeType": "Block",
													"src": "2838:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1242,
																		"name": "_betAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "2858:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1241,
																	"name": "burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "2853:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2853:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1244,
															"nodeType": "ExpressionStatement",
															"src": "2853:16:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1246,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2901:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2905:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2901:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1248,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "2913:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2927:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "6c6f7374",
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2934:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																			"typeString": "literal_string \"lost\""
																		},
																		"value": "lost"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																			"typeString": "literal_string \"lost\""
																		}
																	],
																	"id": 1245,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2889:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2889:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1252,
															"nodeType": "EmitStatement",
															"src": "2884:57:7"
														}
													]
												},
												"id": 1254,
												"nodeType": "IfStatement",
												"src": "2666:287:7",
												"trueBody": {
													"id": 1240,
													"nodeType": "Block",
													"src": "2702:130:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1225,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2723:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2727:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2723:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1227,
																			"name": "_betAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1198,
																			"src": "2735:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2746:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "2735:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1224,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "2717:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2717:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "2717:31:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1233,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2780:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2784:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2780:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1235,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "2792:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "776f6e",
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2812:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																			"typeString": "literal_string \"won\""
																		},
																		"value": "won"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																			"typeString": "literal_string \"won\""
																		}
																	],
																	"id": 1232,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2768:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2768:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1239,
															"nodeType": "EmitStatement",
															"src": "2763:55:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ea5e65e0",
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLessThanFive",
									"nameLocation": "2495:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_prediction",
												"nameLocation": "2515:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2510:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2510:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_betAmount",
												"nameLocation": "2536:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2528:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2509:38:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:0:7"
									},
									"scope": 1431,
									"src": "2486:474:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "3018:349:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1262,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "3037:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1264,
																	"indexExpression": {
																		"id": 1263,
																		"name": "_itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "3043:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3037:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3052:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "3037:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3061:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3037:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206e6f7420666f756e64",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3064:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															},
															"value": "Item not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3029:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3029:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "3029:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1273,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3110:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3114:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3110:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1272,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3100:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1276,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "3125:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1278,
																	"indexExpression": {
																		"id": 1277,
																		"name": "_itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "3131:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3125:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3140:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "3125:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3100:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3092:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3092:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "3092:78:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1285,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3188:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1287,
																"indexExpression": {
																	"id": 1286,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3194:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3188:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3203:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3188:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1284,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3183:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3183:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "3183:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1296,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "3249:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																	"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																}
															},
															"id": 1298,
															"indexExpression": {
																"id": 1297,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "3255:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3249:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$997_storage",
																"typeString": "struct DegenToken.Item storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Item_$997_storage",
																"typeString": "struct DegenToken.Item storage ref"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1291,
																"name": "playerItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3220:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DegenToken.Item storage ref[] storage ref)"
																}
															},
															"id": 1294,
															"indexExpression": {
																"expression": {
																	"id": 1292,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3232:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3236:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3232:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3220:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage",
																"typeString": "struct DegenToken.Item storage ref[] storage ref"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3244:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3220:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr_$_t_struct$_Item_$997_storage_$returns$__$attached_to$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.Item storage ref[] storage pointer,struct DegenToken.Item storage ref)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3220:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "3220:44:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3296:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3300:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3296:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "3308:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1305,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3317:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1307,
																"indexExpression": {
																	"id": 1306,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3323:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3317:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3332:4:7",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 992,
															"src": "3317:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1309,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3338:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1311,
																"indexExpression": {
																	"id": 1310,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3344:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3338:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3353:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3338:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "ItemPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3282:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,string memory,uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "EmitStatement",
												"src": "3277:82:7"
											}
										]
									},
									"functionSelector": "af3bcb7d",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseItem",
									"nameLocation": "2981:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "3000:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "2994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:15:7"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3018:0:7"
									},
									"scope": 1431,
									"src": "2972:395:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "3450:283:7",
										"statements": [
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "itemsList",
														"nameLocation": "3475:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "3461:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DegenToken.Item[]"
														},
														"typeName": {
															"baseType": {
																"id": 1326,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1325,
																	"name": "Item",
																	"nameLocations": [
																		"3461:4:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 997,
																	"src": "3461:4:7"
																},
																"referencedDeclaration": 997,
																"src": "3461:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
																	"typeString": "struct DegenToken.Item"
																}
															},
															"id": 1327,
															"nodeType": "ArrayTypeName",
															"src": "3461:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr",
																"typeString": "struct DegenToken.Item[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"initialValue": {
													"baseExpression": {
														"id": 1329,
														"name": "playerItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3487:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DegenToken.Item storage ref[] storage ref)"
														}
													},
													"id": 1331,
													"indexExpression": {
														"id": 1330,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3499:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3487:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage",
														"typeString": "struct DegenToken.Item storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3461:43:7"
											},
											{
												"assignments": [
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3520:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "3515:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1333,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3515:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1337,
												"initialValue": {
													"expression": {
														"id": 1335,
														"name": "itemsList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "3529:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DegenToken.Item memory[] memory"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3539:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3529:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3515:30:7"
											},
											{
												"assignments": [
													1342
												],
												"declarations": [
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "_ids",
														"nameLocation": "3573:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "3558:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
															"typeString": "uint8[]"
														},
														"typeName": {
															"baseType": {
																"id": 1340,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3558:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1341,
															"nodeType": "ArrayTypeName",
															"src": "3558:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1348,
												"initialValue": {
													"arguments": [
														{
															"id": 1346,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "3592:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3580:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint8[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1343,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "3584:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1344,
															"nodeType": "ArrayTypeName",
															"src": "3584:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3580:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
														"typeString": "uint8[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3558:41:7"
											},
											{
												"body": {
													"id": 1368,
													"nodeType": "Block",
													"src": "3646:56:7",
													"statements": [
														{
															"expression": {
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1359,
																		"name": "_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "3661:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																			"typeString": "uint8[] memory"
																		}
																	},
																	"id": 1361,
																	"indexExpression": {
																		"id": 1360,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "3666:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3661:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1362,
																			"name": "itemsList",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "3671:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DegenToken.Item memory[] memory"
																			}
																		},
																		"id": 1364,
																		"indexExpression": {
																			"id": 1363,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1350,
																			"src": "3681:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3671:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
																			"typeString": "struct DegenToken.Item memory"
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3684:6:7",
																	"memberName": "itemId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 994,
																	"src": "3671:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3661:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1367,
															"nodeType": "ExpressionStatement",
															"src": "3661:29:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1353,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "3629:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1354,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "3633:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3629:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1369,
												"initializationExpression": {
													"assignments": [
														1350
													],
													"declarations": [
														{
															"constant": false,
															"id": 1350,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3622:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1369,
															"src": "3617:6:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1349,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3617:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1352,
													"initialValue": {
														"hexValue": "30",
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3626:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3617:10:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3641:3:7",
														"subExpression": {
															"id": 1356,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "3641:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1358,
													"nodeType": "ExpressionStatement",
													"src": "3641:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3612:90:7"
											},
											{
												"expression": {
													"id": 1370,
													"name": "_ids",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1342,
													"src": "3721:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
														"typeString": "uint8[] memory"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1371,
												"nodeType": "Return",
												"src": "3714:11:7"
											}
										]
									},
									"functionSelector": "ce6019b4",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserItems",
									"nameLocation": "3384:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3405:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3397:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3397:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3396:14:7"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3434:14:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 1320,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "3434:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1321,
													"nodeType": "ArrayTypeName",
													"src": "3434:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3433:16:7"
									},
									"scope": 1431,
									"src": "3375:358:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "3810:41:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1380,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "3828:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1382,
														"indexExpression": {
															"id": 1381,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "3834:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3828:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3839:4:7",
													"memberName": "name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 992,
													"src": "3828:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1384,
												"nodeType": "Return",
												"src": "3821:22:7"
											}
										]
									},
									"functionSelector": "30a86006",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItemName",
									"nameLocation": "3748:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3766:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "3760:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1374,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:11:7"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "3795:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3795:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:15:7"
									},
									"scope": 1431,
									"src": "3739:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "3918:42:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1393,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "3936:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1395,
														"indexExpression": {
															"id": 1394,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "3942:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3936:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3947:5:7",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 996,
													"src": "3936:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1397,
												"nodeType": "Return",
												"src": "3929:23:7"
											}
										]
									},
									"functionSelector": "a10f956d",
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItemPrice",
									"nameLocation": "3866:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "3885:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3879:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1387,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3879:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:11:7"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3913:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3913:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:6:7"
									},
									"scope": 1431,
									"src": "3857:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "4055:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1405,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4083:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4087:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4083:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1404,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "4073:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4073:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1403,
												"id": 1408,
												"nodeType": "Return",
												"src": "4066:28:7"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "4012:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4022:2:7"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "4047:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4046:9:7"
									},
									"scope": 1431,
									"src": "4003:99:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "4177:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1417,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4206:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4210:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4206:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1416,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4196:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4196:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1420,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "4219:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4196:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616d6f756e74",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4228:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																"typeString": "literal_string \"Insufficient amount\""
															},
															"value": "Insufficient amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																"typeString": "literal_string \"Insufficient amount\""
															}
														],
														"id": 1415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4188:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4188:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "4188:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1426,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "4266:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1425,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "4261:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4261:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "4261:13:7"
											}
										]
									},
									"functionSelector": "7b47ec1a",
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "4144:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4159:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4154:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4154:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4153:14:7"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4177:0:7"
									},
									"scope": 1431,
									"src": "4135:147:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1432,
							"src": "785:3502:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1020,
								1030
							]
						}
					],
					"src": "568:3719:7"
				},
				"id": 7
			}
		}
	}
}