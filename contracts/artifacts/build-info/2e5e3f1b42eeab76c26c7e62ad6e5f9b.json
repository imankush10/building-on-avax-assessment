{
	"id": "2e5e3f1b42eeab76c26c7e62ad6e5f9b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DegenToken.sol": {
				"content": "/*\r\n1. Minting new tokens: The platform should be able to create new tokens and distribute them to players as rewards. Only the owner can mint tokens.\r\n2. Transferring tokens: Players should be able to transfer their tokens to others.\r\n3. Redeeming tokens: Players should be able to redeem their tokens for items in the in-game store.\r\n4. Checking token balance: Players should be able to check their token balance at any time.\r\n5. Burning tokens: Anyone should be able to burn tokens, that they own, that are no longer needed.\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\ncontract DegenToken is ERC20, Ownable, ERC20Burnable {\r\n\r\n    struct Item {\r\n        string name;\r\n        uint8 itemId;\r\n        uint256 price;\r\n    }\r\n    mapping (uint8=>Item) public items;\r\n    mapping (address=>Item[]) playerItems;\r\n    uint8 public tokenId;\r\n    \r\n    event ItemPurchased(address indexed buyer, uint8 itemId, string itemName, uint256 price);\r\n    event GameOutcome(address indexed player, uint256 num, bool won, string result);\r\n\r\n    constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {\r\n        mint(initialOwner, tokenSupply);\r\n        \r\n        items[1] = Item(\"Novice Navigator\",1, 100);\r\n        items[2]=Item(\"Mythic Maverick\", 2, 700);\r\n        items[3]=Item(\"Celestial Crusher\", 3, 1200);\r\n        items[4]=Item(\"Astral Ace\", 4, 2200);\r\n        items[5]=Item(\"Divine Dominator\", 5, 2400);\r\n        tokenId=6;\r\n\r\n    }\r\n\r\n    function decimals() override public pure returns (uint8){\r\n        return 0;\r\n    }\r\n\r\n    // Minting tokens\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    // Transferring tokens\r\n\r\n    function transferToken(address _recipient, uint _amount) external {\r\n        require(balanceOf(msg.sender)>=_amount, \"Insufficient balance\");\r\n        transfer(_recipient, _amount);\r\n    }\r\n\r\n    // Redeeming tokens\r\n\r\n    function welcomeBonus() public {\r\n        require(balanceOf(msg.sender) == 0, \"You've already claimed your welcome bonus\");\r\n        _mint(msg.sender, 50);\r\n    }\r\n\r\n    function addItem(string memory _name, uint256 _price) public onlyOwner {\r\n        items[tokenId] = Item(_name, tokenId,_price);\r\n        tokenId++;\r\n    } \r\n\r\n    function isLessThanFive(bool _prediction, uint256 _betAmount) public {\r\n        uint randomNumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10;\r\n\r\n        if (_prediction ==(randomNumber<5)) {\r\n            _mint(msg.sender, _betAmount*2);\r\n            emit GameOutcome(msg.sender, randomNumber, true, \"won\");\r\n\r\n        } else {\r\n            burn(_betAmount);\r\n            emit GameOutcome(msg.sender, randomNumber, false, \"lost\");\r\n        }\r\n    }\r\n    \r\n    function purchaseItem(uint8 _itemId) external {\r\n        require(items[_itemId].price != 0, \"Item not found\");\r\n        require(balanceOf(msg.sender) >= items[_itemId].price, \"Insufficient balance\");\r\n\r\n        burn(items[_itemId].price);\r\n        playerItems[msg.sender].push(items[_itemId]);\r\n\r\n        emit ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price);\r\n    }\r\n\r\n    function getUserItems(address user) external view returns(Item[] memory){\r\n        return playerItems[user];\r\n    }\r\n\r\n    // Checking token balance\r\n\r\n    function getBalance() external view returns(uint256){\r\n        return balanceOf(msg.sender);\r\n    }\r\n\r\n    // Burning tokens\r\n\r\n    function burnToken(uint _amount) external {\r\n        require(balanceOf(msg.sender)>=_amount, \"Insufficient amount\");\r\n        burn(_amount);\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DegenToken.sol": {
				"DegenToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "won",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "result",
									"type": "string"
								}
							],
							"name": "GameOutcome",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "addItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "uint8",
											"name": "itemId",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct DegenToken.Item[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_prediction",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_betAmount",
									"type": "uint256"
								}
							],
							"name": "isLessThanFive",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "items",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "itemId",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_itemId",
									"type": "uint8"
								}
							],
							"name": "purchaseItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenId",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "welcomeBonus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DegenToken.sol\":785:3822  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DegenToken.sol\":1243:1680  constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DegenToken.sol\":1326:1338  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x446567656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x44474e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/DegenToken.sol\":1351:1382  mint(initialOwner, tokenSupply) */\n  tag_18\n    /* \"contracts/DegenToken.sol\":1356:1368  initialOwner */\n  dup3\n    /* \"contracts/DegenToken.sol\":1370:1381  tokenSupply */\n  dup3\n    /* \"contracts/DegenToken.sol\":1351:1355  mint */\n  shl(0x20, tag_19)\n    /* \"contracts/DegenToken.sol\":1351:1382  mint(initialOwner, tokenSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/DegenToken.sol\":1414:1445  Item(\"Novice Navigator\",1, 100) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x4e6f76696365204e6176696761746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1438:1439  1 */\n  0x01\n    /* \"contracts/DegenToken.sol\":1414:1445  Item(\"Novice Navigator\",1, 100) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1441:1444  100 */\n  0x64\n    /* \"contracts/DegenToken.sol\":1414:1445  Item(\"Novice Navigator\",1, 100) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1403:1408  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1403:1411  items[1] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1409:1410  1 */\n  0x01\n    /* \"contracts/DegenToken.sol\":1403:1411  items[1] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1403:1445  items[1] = Item(\"Novice Navigator\",1, 100) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_20\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_20:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1465:1496  Item(\"Mythic Maverick\", 2, 700) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x4d7974686963204d6176657269636b0000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1489:1490  2 */\n  0x02\n    /* \"contracts/DegenToken.sol\":1465:1496  Item(\"Mythic Maverick\", 2, 700) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1492:1495  700 */\n  0x02bc\n    /* \"contracts/DegenToken.sol\":1465:1496  Item(\"Mythic Maverick\", 2, 700) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1456:1461  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1456:1464  items[2] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1462:1463  2 */\n  0x02\n    /* \"contracts/DegenToken.sol\":1456:1464  items[2] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1456:1496  items[2]=Item(\"Mythic Maverick\", 2, 700) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_21\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_21:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1516:1550  Item(\"Celestial Crusher\", 3, 1200) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  0x43656c65737469616c2043727573686572000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1542:1543  3 */\n  0x03\n    /* \"contracts/DegenToken.sol\":1516:1550  Item(\"Celestial Crusher\", 3, 1200) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1545:1549  1200 */\n  0x04b0\n    /* \"contracts/DegenToken.sol\":1516:1550  Item(\"Celestial Crusher\", 3, 1200) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1507:1512  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1507:1515  items[3] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1513:1514  3 */\n  0x03\n    /* \"contracts/DegenToken.sol\":1507:1515  items[3] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1507:1550  items[3]=Item(\"Celestial Crusher\", 3, 1200) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_22\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_22:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1570:1597  Item(\"Astral Ace\", 4, 2200) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x41737472616c2041636500000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1589:1590  4 */\n  0x04\n    /* \"contracts/DegenToken.sol\":1570:1597  Item(\"Astral Ace\", 4, 2200) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1592:1596  2200 */\n  0x0898\n    /* \"contracts/DegenToken.sol\":1570:1597  Item(\"Astral Ace\", 4, 2200) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1561:1566  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1561:1569  items[4] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1567:1568  4 */\n  0x04\n    /* \"contracts/DegenToken.sol\":1561:1569  items[4] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1561:1597  items[4]=Item(\"Astral Ace\", 4, 2200) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_23\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_23:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1617:1650  Item(\"Divine Dominator\", 5, 2400) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x446976696e6520446f6d696e61746f7200000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1642:1643  5 */\n  0x05\n    /* \"contracts/DegenToken.sol\":1617:1650  Item(\"Divine Dominator\", 5, 2400) */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/DegenToken.sol\":1645:1649  2400 */\n  0x0960\n    /* \"contracts/DegenToken.sol\":1617:1650  Item(\"Divine Dominator\", 5, 2400) */\n  dup2\n  mstore\n  pop\n    /* \"contracts/DegenToken.sol\":1608:1613  items */\n  0x06\n    /* \"contracts/DegenToken.sol\":1608:1616  items[5] */\n  0x00\n    /* \"contracts/DegenToken.sol\":1614:1615  5 */\n  0x05\n    /* \"contracts/DegenToken.sol\":1608:1616  items[5] */\n  0xff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/DegenToken.sol\":1608:1650  items[5]=Item(\"Divine Dominator\", 5, 2400) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup2\n  tag_24\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_24:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":1669:1670  6 */\n  0x06\n    /* \"contracts/DegenToken.sol\":1661:1668  tokenId */\n  0x08\n  0x00\n    /* \"contracts/DegenToken.sol\":1661:1670  tokenId=6 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/DegenToken.sol\":1243:1680  constructor (address initialOwner, uint tokenSupply) ERC20(\"Degen\", \"DGN\") Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/DegenToken.sol\":785:3822  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/DegenToken.sol\":1804:1899  function mint(address to, uint256 amount) public onlyOwner {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_28\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/DegenToken.sol\":1874:1891  _mint(to, amount) */\n  tag_31\n    /* \"contracts/DegenToken.sol\":1880:1882  to */\n  dup3\n    /* \"contracts/DegenToken.sol\":1884:1890  amount */\n  dup3\n    /* \"contracts/DegenToken.sol\":1874:1879  _mint */\n  shl(0x20, tag_32)\n    /* \"contracts/DegenToken.sol\":1874:1891  _mint(to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/DegenToken.sol\":1804:1899  function mint(address to, uint256 amount) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_34\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_36\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_39\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_45)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_52)\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_54\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_56\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_57)\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_61:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_63:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_64:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_98\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_63\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_65:\n    /* \"#utility.yul\":641:665   */\n  tag_100\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_64\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_101:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_66:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_103\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_65\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_67:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_68:\n    /* \"#utility.yul\":1001:1025   */\n  tag_106\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_67\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_107:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_69:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_109\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_68\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_112\n  tag_61\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1309:1428   */\ntag_111:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_113\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_66\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_114\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_69\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_70:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_71:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_72:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_73:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_119:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_120\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_121\n  tag_72\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2425:2509   */\ntag_120:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_74:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_75:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_76:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_77:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_126\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_76\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3140:3179   */\n  tag_127\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_76\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_78:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_79:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_130\n    /* \"#utility.yul\":3446:3480   */\n  tag_131\n    /* \"#utility.yul\":3455:3479   */\n  tag_132\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_67\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3446:3480   */\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3428:3481   */\n  tag_67\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_80:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_81:\n    /* \"#utility.yul\":3684:3723   */\n  tag_135\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_79\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3745:3836   */\n  tag_136\n    /* \"#utility.yul\":3794:3835   */\n  tag_137\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_80\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_77\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_82:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_83:\n    /* \"#utility.yul\":4005:4037   */\n  tag_140\n  tag_82\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4046:4111   */\n  tag_141\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_81\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_84:\n    /* \"#utility.yul\":4183:4303   */\ntag_143:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_146\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_83\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_85:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_149\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_74\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4534:4563   */\n  tag_150\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_75\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_151:\n    /* \"#utility.yul\":4761:4841   */\n  tag_152\n    /* \"#utility.yul\":4817:4839   */\n  tag_153\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_75\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_84\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_148:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_86:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_87:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_156\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_86\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_88:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_158\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_87\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_9:\n    /* \"#utility.yul\":5578:5615   */\n  tag_160\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_162\n  tag_71\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5666:5722   */\ntag_161:\n    /* \"#utility.yul\":5746:5784   */\n  tag_163\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_73\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5831:5898   */\n  tag_164\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_167:\n    /* \"#utility.yul\":6772:6839   */\n  tag_168\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_88\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_165)\n    /* \"#utility.yul\":5993:6611   */\ntag_166:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_169\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_170:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_170)\ntag_172:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_174\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_87\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_173:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_165:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6862:6980   */\ntag_89:\n    /* \"#utility.yul\":6949:6973   */\n  tag_176\n    /* \"#utility.yul\":6967:6972   */\n  dup2\n    /* \"#utility.yul\":6949:6973   */\n  tag_64\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6944:6947   */\n  dup3\n    /* \"#utility.yul\":6937:6974   */\n  mstore\n    /* \"#utility.yul\":6862:6980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6986:7208   */\ntag_14:\n    /* \"#utility.yul\":7079:7083   */\n  0x00\n    /* \"#utility.yul\":7117:7119   */\n  0x20\n    /* \"#utility.yul\":7106:7115   */\n  dup3\n    /* \"#utility.yul\":7102:7120   */\n  add\n    /* \"#utility.yul\":7094:7120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7201   */\n  tag_178\n    /* \"#utility.yul\":7198:7199   */\n  0x00\n    /* \"#utility.yul\":7187:7196   */\n  dup4\n    /* \"#utility.yul\":7183:7200   */\n  add\n    /* \"#utility.yul\":7174:7180   */\n  dup5\n    /* \"#utility.yul\":7130:7201   */\n  tag_89\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6986:7208   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7214:7394   */\ntag_90:\n    /* \"#utility.yul\":7262:7339   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7340   */\n  mstore\n    /* \"#utility.yul\":7359:7363   */\n  0x11\n    /* \"#utility.yul\":7356:7357   */\n  0x04\n    /* \"#utility.yul\":7349:7364   */\n  mstore\n    /* \"#utility.yul\":7383:7387   */\n  0x24\n    /* \"#utility.yul\":7380:7381   */\n  0x00\n    /* \"#utility.yul\":7373:7388   */\n  revert\n    /* \"#utility.yul\":7400:7591   */\ntag_51:\n    /* \"#utility.yul\":7440:7443   */\n  0x00\n    /* \"#utility.yul\":7459:7479   */\n  tag_181\n    /* \"#utility.yul\":7477:7478   */\n  dup3\n    /* \"#utility.yul\":7459:7479   */\n  tag_67\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7454:7479   */\n  swap2\n  pop\n    /* \"#utility.yul\":7493:7513   */\n  tag_182\n    /* \"#utility.yul\":7511:7512   */\n  dup4\n    /* \"#utility.yul\":7493:7513   */\n  tag_67\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7488:7513   */\n  swap3\n  pop\n    /* \"#utility.yul\":7536:7537   */\n  dup3\n    /* \"#utility.yul\":7533:7534   */\n  dup3\n    /* \"#utility.yul\":7529:7538   */\n  add\n    /* \"#utility.yul\":7522:7538   */\n  swap1\n  pop\n    /* \"#utility.yul\":7557:7560   */\n  dup1\n    /* \"#utility.yul\":7554:7555   */\n  dup3\n    /* \"#utility.yul\":7551:7561   */\n  gt\n    /* \"#utility.yul\":7548:7584   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":7564:7582   */\n  tag_184\n  tag_90\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7548:7584   */\ntag_183:\n    /* \"#utility.yul\":7400:7591   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7597:7715   */\ntag_91:\n    /* \"#utility.yul\":7684:7708   */\n  tag_186\n    /* \"#utility.yul\":7702:7707   */\n  dup2\n    /* \"#utility.yul\":7684:7708   */\n  tag_67\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7679:7682   */\n  dup3\n    /* \"#utility.yul\":7672:7709   */\n  mstore\n    /* \"#utility.yul\":7597:7715   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7721:8163   */\ntag_55:\n    /* \"#utility.yul\":7870:7874   */\n  0x00\n    /* \"#utility.yul\":7908:7910   */\n  0x60\n    /* \"#utility.yul\":7897:7906   */\n  dup3\n    /* \"#utility.yul\":7893:7911   */\n  add\n    /* \"#utility.yul\":7885:7911   */\n  swap1\n  pop\n    /* \"#utility.yul\":7921:7992   */\n  tag_188\n    /* \"#utility.yul\":7989:7990   */\n  0x00\n    /* \"#utility.yul\":7978:7987   */\n  dup4\n    /* \"#utility.yul\":7974:7991   */\n  add\n    /* \"#utility.yul\":7965:7971   */\n  dup7\n    /* \"#utility.yul\":7921:7992   */\n  tag_89\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8002:8074   */\n  tag_189\n    /* \"#utility.yul\":8070:8072   */\n  0x20\n    /* \"#utility.yul\":8059:8068   */\n  dup4\n    /* \"#utility.yul\":8055:8073   */\n  add\n    /* \"#utility.yul\":8046:8052   */\n  dup6\n    /* \"#utility.yul\":8002:8074   */\n  tag_91\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8084:8156   */\n  tag_190\n    /* \"#utility.yul\":8152:8154   */\n  0x40\n    /* \"#utility.yul\":8141:8150   */\n  dup4\n    /* \"#utility.yul\":8137:8155   */\n  add\n    /* \"#utility.yul\":8128:8134   */\n  dup5\n    /* \"#utility.yul\":8084:8156   */\n  tag_91\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7721:8163   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8169:8391   */\ntag_59:\n    /* \"#utility.yul\":8262:8266   */\n  0x00\n    /* \"#utility.yul\":8300:8302   */\n  0x20\n    /* \"#utility.yul\":8289:8298   */\n  dup3\n    /* \"#utility.yul\":8285:8303   */\n  add\n    /* \"#utility.yul\":8277:8303   */\n  swap1\n  pop\n    /* \"#utility.yul\":8313:8384   */\n  tag_192\n    /* \"#utility.yul\":8381:8382   */\n  0x00\n    /* \"#utility.yul\":8370:8379   */\n  dup4\n    /* \"#utility.yul\":8366:8383   */\n  add\n    /* \"#utility.yul\":8357:8363   */\n  dup5\n    /* \"#utility.yul\":8313:8384   */\n  tag_91\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8169:8391   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DegenToken.sol\":785:3822  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DegenToken.sol\":785:3822  contract DegenToken is ERC20, Ownable, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xaf3bcb7d\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xea5e65e0\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xea5e65e0\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf5112f87\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfbd1a97b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xaf3bcb7d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xce6019b4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7b47ec1a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x62d6bbdf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1072cbea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x17d70f7c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1937:2125  function transferToken(address _recipient, uint _amount) external {... */\n    tag_5:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/DegenToken.sol\":3538:3637  function getBalance() external view returns(uint256){... */\n    tag_6:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1027:1047  uint8 public tokenId */\n    tag_7:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1688:1771  function decimals() override public pure returns (uint8){... */\n    tag_10:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":1804:1899  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_11:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/DegenToken.sol\":2330:2484  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_16:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/DegenToken.sol\":3670:3817  function burnToken(uint _amount) external {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":2979:3374  function purchaseItem(uint8 _itemId) external {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/DegenToken.sol\":3382:3497  function getUserItems(address user) external view returns(Item[] memory){... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DegenToken.sol\":2493:2967  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n    tag_24:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"contracts/DegenToken.sol\":2160:2322  function welcomeBonus() public {... */\n    tag_26:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      stop\n        /* \"contracts/DegenToken.sol\":942:976  mapping (uint8=>Item) public items */\n    tag_27:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_129\n      jump\t// in\n    tag_130:\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1937:2125  function transferToken(address _recipient, uint _amount) external {... */\n    tag_44:\n        /* \"contracts/DegenToken.sol\":2045:2052  _amount */\n      dup1\n        /* \"contracts/DegenToken.sol\":2022:2043  balanceOf(msg.sender) */\n      tag_140\n        /* \"contracts/DegenToken.sol\":2032:2042  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2022:2031  balanceOf */\n      tag_78\n        /* \"contracts/DegenToken.sol\":2022:2043  balanceOf(msg.sender) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/DegenToken.sol\":2022:2052  balanceOf(msg.sender)>=_amount */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":2014:2077  require(balanceOf(msg.sender)>=_amount, \"Insufficient balance\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"contracts/DegenToken.sol\":2088:2117  transfer(_recipient, _amount) */\n      tag_144\n        /* \"contracts/DegenToken.sol\":2097:2107  _recipient */\n      dup3\n        /* \"contracts/DegenToken.sol\":2109:2116  _amount */\n      dup3\n        /* \"contracts/DegenToken.sol\":2088:2096  transfer */\n      tag_97\n        /* \"contracts/DegenToken.sol\":2088:2117  transfer(_recipient, _amount) */\n      jump\t// in\n    tag_144:\n      pop\n        /* \"contracts/DegenToken.sol\":1937:2125  function transferToken(address _recipient, uint _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3538:3637  function getBalance() external view returns(uint256){... */\n    tag_46:\n        /* \"contracts/DegenToken.sol\":3582:3589  uint256 */\n      0x00\n        /* \"contracts/DegenToken.sol\":3608:3629  balanceOf(msg.sender) */\n      tag_146\n        /* \"contracts/DegenToken.sol\":3618:3628  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3608:3617  balanceOf */\n      tag_78\n        /* \"contracts/DegenToken.sol\":3608:3629  balanceOf(msg.sender) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/DegenToken.sol\":3601:3629  return balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3538:3637  function getBalance() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1027:1047  uint8 public tokenId */\n    tag_50:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1688:1771  function decimals() override public pure returns (uint8){... */\n    tag_62:\n        /* \"contracts/DegenToken.sol\":1738:1743  uint8 */\n      0x00\n        /* \"contracts/DegenToken.sol\":1688:1771  function decimals() override public pure returns (uint8){... */\n      swap1\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":1804:1899  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/DegenToken.sol\":1874:1891  _mint(to, amount) */\n      tag_159\n        /* \"contracts/DegenToken.sol\":1880:1882  to */\n      dup3\n        /* \"contracts/DegenToken.sol\":1884:1890  amount */\n      dup3\n        /* \"contracts/DegenToken.sol\":1874:1879  _mint */\n      tag_160\n        /* \"contracts/DegenToken.sol\":1874:1891  _mint(to, amount) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/DegenToken.sol\":1804:1899  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2330:2484  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/DegenToken.sol\":2429:2456  Item(_name, tokenId,_price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/DegenToken.sol\":2434:2439  _name */\n      dup4\n        /* \"contracts/DegenToken.sol\":2429:2456  Item(_name, tokenId,_price) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DegenToken.sol\":2441:2448  tokenId */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DegenToken.sol\":2429:2456  Item(_name, tokenId,_price) */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/DegenToken.sol\":2449:2455  _price */\n      dup3\n        /* \"contracts/DegenToken.sol\":2429:2456  Item(_name, tokenId,_price) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/DegenToken.sol\":2412:2417  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":2412:2426  items[tokenId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":2418:2425  tokenId */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/DegenToken.sol\":2412:2426  items[tokenId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":2412:2456  items[tokenId] = Item(_name, tokenId,_price) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":2467:2474  tokenId */\n      0x08\n      0x00\n        /* \"contracts/DegenToken.sol\":2467:2476  tokenId++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":2330:2484  function addItem(string memory _name, uint256 _price) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3670:3817  function burnToken(uint _amount) external {... */\n    tag_87:\n        /* \"contracts/DegenToken.sol\":3754:3761  _amount */\n      dup1\n        /* \"contracts/DegenToken.sol\":3731:3752  balanceOf(msg.sender) */\n      tag_183\n        /* \"contracts/DegenToken.sol\":3741:3751  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3731:3740  balanceOf */\n      tag_78\n        /* \"contracts/DegenToken.sol\":3731:3752  balanceOf(msg.sender) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/DegenToken.sol\":3731:3761  balanceOf(msg.sender)>=_amount */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":3723:3785  require(balanceOf(msg.sender)>=_amount, \"Insufficient amount\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/DegenToken.sol\":3796:3809  burn(_amount) */\n      tag_187\n        /* \"contracts/DegenToken.sol\":3801:3808  _amount */\n      dup2\n        /* \"contracts/DegenToken.sol\":3796:3800  burn */\n      tag_70\n        /* \"contracts/DegenToken.sol\":3796:3809  burn(_amount) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/DegenToken.sol\":3670:3817  function burnToken(uint _amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_129\n      jump\t// in\n    tag_190:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_129\n      jump\t// in\n    tag_191:\n      dup1\n      iszero\n      tag_192\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_193\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_192)\n    tag_193:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_194:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_194\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2979:3374  function purchaseItem(uint8 _itemId) external {... */\n    tag_102:\n        /* \"contracts/DegenToken.sol\":3068:3069  0 */\n      0x00\n        /* \"contracts/DegenToken.sol\":3044:3049  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3044:3058  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3050:3057  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3044:3058  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3044:3064  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3044:3069  items[_itemId].price != 0 */\n      sub\n        /* \"contracts/DegenToken.sol\":3036:3088  require(items[_itemId].price != 0, \"Item not found\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/DegenToken.sol\":3132:3137  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3132:3146  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3138:3145  _itemId */\n      dup3\n        /* \"contracts/DegenToken.sol\":3132:3146  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3132:3152  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3107:3128  balanceOf(msg.sender) */\n      tag_202\n        /* \"contracts/DegenToken.sol\":3117:3127  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3107:3116  balanceOf */\n      tag_78\n        /* \"contracts/DegenToken.sol\":3107:3128  balanceOf(msg.sender) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/DegenToken.sol\":3107:3152  balanceOf(msg.sender) >= items[_itemId].price */\n      lt\n      iszero\n        /* \"contracts/DegenToken.sol\":3099:3177  require(balanceOf(msg.sender) >= items[_itemId].price, \"Insufficient balance\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_143\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/DegenToken.sol\":3190:3216  burn(items[_itemId].price) */\n      tag_205\n        /* \"contracts/DegenToken.sol\":3195:3200  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3195:3209  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3201:3208  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3195:3209  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3195:3215  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3190:3194  burn */\n      tag_70\n        /* \"contracts/DegenToken.sol\":3190:3216  burn(items[_itemId].price) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/DegenToken.sol\":3227:3238  playerItems */\n      0x07\n        /* \"contracts/DegenToken.sol\":3227:3250  playerItems[msg.sender] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3239:3249  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3227:3250  playerItems[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3256:3261  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3256:3270  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3262:3269  _itemId */\n      dup4\n        /* \"contracts/DegenToken.sol\":3256:3270  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3227:3271  playerItems[msg.sender].push(items[_itemId]) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      pop\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/DegenToken.sol\":3303:3313  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":3289:3366  ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e\n        /* \"contracts/DegenToken.sol\":3315:3322  _itemId */\n      dup3\n        /* \"contracts/DegenToken.sol\":3324:3329  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3324:3338  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3330:3337  _itemId */\n      dup6\n        /* \"contracts/DegenToken.sol\":3324:3338  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3324:3343  items[_itemId].name */\n      0x00\n      add\n        /* \"contracts/DegenToken.sol\":3345:3350  items */\n      0x06\n        /* \"contracts/DegenToken.sol\":3345:3359  items[_itemId] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3351:3358  _itemId */\n      dup7\n        /* \"contracts/DegenToken.sol\":3345:3359  items[_itemId] */\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3345:3365  items[_itemId].price */\n      0x02\n      add\n      sload\n        /* \"contracts/DegenToken.sol\":3289:3366  ItemPurchased(msg.sender, _itemId, items[_itemId].name, items[_itemId].price) */\n      mload(0x40)\n      tag_209\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2979:3374  function purchaseItem(uint8 _itemId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":3382:3497  function getUserItems(address user) external view returns(Item[] memory){... */\n    tag_105:\n        /* \"contracts/DegenToken.sol\":3440:3453  Item[] memory */\n      0x60\n        /* \"contracts/DegenToken.sol\":3472:3483  playerItems */\n      0x07\n        /* \"contracts/DegenToken.sol\":3472:3489  playerItems[user] */\n      0x00\n        /* \"contracts/DegenToken.sol\":3484:3488  user */\n      dup4\n        /* \"contracts/DegenToken.sol\":3472:3489  playerItems[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DegenToken.sol\":3465:3489  return playerItems[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_212:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_213\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_129\n      jump\t// in\n    tag_215:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_216\n      swap1\n      tag_129\n      jump\t// in\n    tag_216:\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_218\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_217)\n    tag_218:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_219:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_219\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_212)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":3382:3497  function getUserItems(address user) external view returns(Item[] memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2493:2967  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n    tag_116:\n        /* \"contracts/DegenToken.sol\":2573:2590  uint randomNumber */\n      0x00\n        /* \"contracts/DegenToken.sol\":2658:2660  10 */\n      0x0a\n        /* \"contracts/DegenToken.sol\":2625:2640  block.timestamp */\n      timestamp\n        /* \"contracts/DegenToken.sol\":2642:2652  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2608:2653  abi.encodePacked(block.timestamp, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DegenToken.sol\":2598:2654  keccak256(abi.encodePacked(block.timestamp, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DegenToken.sol\":2593:2655  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) */\n      0x00\n      shr\n        /* \"contracts/DegenToken.sol\":2593:2660  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"contracts/DegenToken.sol\":2573:2660  uint randomNumber = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender))) % 10 */\n      swap1\n      pop\n        /* \"contracts/DegenToken.sol\":2705:2706  5 */\n      0x05\n        /* \"contracts/DegenToken.sol\":2692:2704  randomNumber */\n      dup2\n        /* \"contracts/DegenToken.sol\":2692:2706  randomNumber<5 */\n      lt\n        /* \"contracts/DegenToken.sol\":2677:2707  _prediction ==(randomNumber<5) */\n      iszero\n      iszero\n        /* \"contracts/DegenToken.sol\":2677:2688  _prediction */\n      dup4\n        /* \"contracts/DegenToken.sol\":2677:2707  _prediction ==(randomNumber<5) */\n      iszero\n      iszero\n      sub\n        /* \"contracts/DegenToken.sol\":2673:2960  if (_prediction ==(randomNumber<5)) {... */\n      tag_226\n      jumpi\n        /* \"contracts/DegenToken.sol\":2724:2755  _mint(msg.sender, _betAmount*2) */\n      tag_227\n        /* \"contracts/DegenToken.sol\":2730:2740  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2753:2754  2 */\n      0x02\n        /* \"contracts/DegenToken.sol\":2742:2752  _betAmount */\n      dup5\n        /* \"contracts/DegenToken.sol\":2742:2754  _betAmount*2 */\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"contracts/DegenToken.sol\":2724:2729  _mint */\n      tag_160\n        /* \"contracts/DegenToken.sol\":2724:2755  _mint(msg.sender, _betAmount*2) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/DegenToken.sol\":2787:2797  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2775:2825  GameOutcome(msg.sender, randomNumber, true, \"won\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/DegenToken.sol\":2799:2811  randomNumber */\n      dup3\n        /* \"contracts/DegenToken.sol\":2813:2817  true */\n      0x01\n        /* \"contracts/DegenToken.sol\":2775:2825  GameOutcome(msg.sender, randomNumber, true, \"won\") */\n      mload(0x40)\n      tag_230\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2673:2960  if (_prediction ==(randomNumber<5)) {... */\n      jump(tag_232)\n    tag_226:\n        /* \"contracts/DegenToken.sol\":2860:2876  burn(_betAmount) */\n      tag_233\n        /* \"contracts/DegenToken.sol\":2865:2875  _betAmount */\n      dup3\n        /* \"contracts/DegenToken.sol\":2860:2864  burn */\n      tag_70\n        /* \"contracts/DegenToken.sol\":2860:2876  burn(_betAmount) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/DegenToken.sol\":2908:2918  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2896:2948  GameOutcome(msg.sender, randomNumber, false, \"lost\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587\n        /* \"contracts/DegenToken.sol\":2920:2932  randomNumber */\n      dup3\n        /* \"contracts/DegenToken.sol\":2934:2939  false */\n      0x00\n        /* \"contracts/DegenToken.sol\":2896:2948  GameOutcome(msg.sender, randomNumber, false, \"lost\") */\n      mload(0x40)\n      tag_234\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/DegenToken.sol\":2673:2960  if (_prediction ==(randomNumber<5)) {... */\n    tag_232:\n        /* \"contracts/DegenToken.sol\":2562:2967  {... */\n      pop\n        /* \"contracts/DegenToken.sol\":2493:2967  function isLessThanFive(bool _prediction, uint256 _betAmount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":2160:2322  function welcomeBonus() public {... */\n    tag_121:\n        /* \"contracts/DegenToken.sol\":2235:2236  0 */\n      0x00\n        /* \"contracts/DegenToken.sol\":2210:2231  balanceOf(msg.sender) */\n      tag_243\n        /* \"contracts/DegenToken.sol\":2220:2230  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2210:2219  balanceOf */\n      tag_78\n        /* \"contracts/DegenToken.sol\":2210:2231  balanceOf(msg.sender) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/DegenToken.sol\":2210:2236  balanceOf(msg.sender) == 0 */\n      eq\n        /* \"contracts/DegenToken.sol\":2202:2282  require(balanceOf(msg.sender) == 0, \"You've already claimed your welcome bonus\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/DegenToken.sol\":2293:2314  _mint(msg.sender, 50) */\n      tag_247\n        /* \"contracts/DegenToken.sol\":2299:2309  msg.sender */\n      caller\n        /* \"contracts/DegenToken.sol\":2311:2313  50 */\n      0x32\n        /* \"contracts/DegenToken.sol\":2293:2298  _mint */\n      tag_160\n        /* \"contracts/DegenToken.sol\":2293:2314  _mint(msg.sender, 50) */\n      jump\t// in\n    tag_247:\n        /* \"contracts/DegenToken.sol\":2160:2322  function welcomeBonus() public {... */\n      jump\t// out\n        /* \"contracts/DegenToken.sol\":942:976  mapping (uint8=>Item) public items */\n    tag_124:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_248\n      swap1\n      tag_129\n      jump\t// in\n    tag_248:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_249\n      swap1\n      tag_129\n      jump\t// in\n    tag_249:\n      dup1\n      iszero\n      tag_250\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_251\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_250)\n    tag_251:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_252:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_252\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_250:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_292\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_297)\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_301)\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_303:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_304:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_305:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_306:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_307:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_392\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_303\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":711:782   */\n      tag_393\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_304\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_394\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_305\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":881:910   */\n      tag_395\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_306\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_35:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_397\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_307\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_308:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_309:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_310:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_311:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_312:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_403\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_311\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_313:\n        /* \"#utility.yul\":1876:1900   */\n      tag_405\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_312\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_406:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_314:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_408\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_313\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_315:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_316:\n        /* \"#utility.yul\":2232:2256   */\n      tag_411\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_315\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_412:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_317:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_414\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_316\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_38:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_417\n      tag_309\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2525:2644   */\n    tag_416:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_418\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_314\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_419\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_317\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_318:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_319:\n        /* \"#utility.yul\":3089:3110   */\n      tag_422\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_318\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_41:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_424\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_319\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_320:\n        /* \"#utility.yul\":3426:3450   */\n      tag_426\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_315\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_48:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_428\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_320\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3777   */\n    tag_321:\n        /* \"#utility.yul\":3726:3733   */\n      0x00\n        /* \"#utility.yul\":3766:3770   */\n      0xff\n        /* \"#utility.yul\":3759:3764   */\n      dup3\n        /* \"#utility.yul\":3755:3771   */\n      and\n        /* \"#utility.yul\":3744:3771   */\n      swap1\n      pop\n        /* \"#utility.yul\":3691:3777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:3895   */\n    tag_322:\n        /* \"#utility.yul\":3866:3888   */\n      tag_431\n        /* \"#utility.yul\":3882:3887   */\n      dup2\n        /* \"#utility.yul\":3866:3888   */\n      tag_321\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3861:3864   */\n      dup3\n        /* \"#utility.yul\":3854:3889   */\n      mstore\n        /* \"#utility.yul\":3783:3895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3901:4115   */\n    tag_52:\n        /* \"#utility.yul\":3990:3994   */\n      0x00\n        /* \"#utility.yul\":4028:4030   */\n      0x20\n        /* \"#utility.yul\":4017:4026   */\n      dup3\n        /* \"#utility.yul\":4013:4031   */\n      add\n        /* \"#utility.yul\":4005:4031   */\n      swap1\n      pop\n        /* \"#utility.yul\":4041:4108   */\n      tag_433\n        /* \"#utility.yul\":4105:4106   */\n      0x00\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4090:4107   */\n      add\n        /* \"#utility.yul\":4081:4087   */\n      dup5\n        /* \"#utility.yul\":4041:4108   */\n      tag_322\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3901:4115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4121:4740   */\n    tag_58:\n        /* \"#utility.yul\":4198:4204   */\n      0x00\n        /* \"#utility.yul\":4206:4212   */\n      dup1\n        /* \"#utility.yul\":4214:4220   */\n      0x00\n        /* \"#utility.yul\":4263:4265   */\n      0x60\n        /* \"#utility.yul\":4251:4260   */\n      dup5\n        /* \"#utility.yul\":4242:4249   */\n      dup7\n        /* \"#utility.yul\":4238:4261   */\n      sub\n        /* \"#utility.yul\":4234:4266   */\n      slt\n        /* \"#utility.yul\":4231:4350   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":4269:4348   */\n      tag_436\n      tag_309\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4231:4350   */\n    tag_435:\n        /* \"#utility.yul\":4389:4390   */\n      0x00\n        /* \"#utility.yul\":4414:4467   */\n      tag_437\n        /* \"#utility.yul\":4459:4466   */\n      dup7\n        /* \"#utility.yul\":4450:4456   */\n      dup3\n        /* \"#utility.yul\":4439:4448   */\n      dup8\n        /* \"#utility.yul\":4435:4457   */\n      add\n        /* \"#utility.yul\":4414:4467   */\n      tag_314\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4404:4467   */\n      swap4\n      pop\n        /* \"#utility.yul\":4360:4477   */\n      pop\n        /* \"#utility.yul\":4516:4518   */\n      0x20\n        /* \"#utility.yul\":4542:4595   */\n      tag_438\n        /* \"#utility.yul\":4587:4594   */\n      dup7\n        /* \"#utility.yul\":4578:4584   */\n      dup3\n        /* \"#utility.yul\":4567:4576   */\n      dup8\n        /* \"#utility.yul\":4563:4585   */\n      add\n        /* \"#utility.yul\":4542:4595   */\n      tag_314\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4532:4595   */\n      swap3\n      pop\n        /* \"#utility.yul\":4487:4605   */\n      pop\n        /* \"#utility.yul\":4644:4646   */\n      0x40\n        /* \"#utility.yul\":4670:4723   */\n      tag_439\n        /* \"#utility.yul\":4715:4722   */\n      dup7\n        /* \"#utility.yul\":4706:4712   */\n      dup3\n        /* \"#utility.yul\":4695:4704   */\n      dup8\n        /* \"#utility.yul\":4691:4713   */\n      add\n        /* \"#utility.yul\":4670:4723   */\n      tag_317\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4660:4723   */\n      swap2\n      pop\n        /* \"#utility.yul\":4615:4733   */\n      pop\n        /* \"#utility.yul\":4121:4740   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_69:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_442\n      tag_309\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4822:4941   */\n    tag_441:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_443\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_317\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5198   */\n    tag_323:\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5187:5188   */\n      dup1\n        /* \"#utility.yul\":5180:5192   */\n      revert\n        /* \"#utility.yul\":5204:5321   */\n    tag_324:\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      dup1\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5327:5507   */\n    tag_325:\n        /* \"#utility.yul\":5375:5452   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5372:5373   */\n      0x00\n        /* \"#utility.yul\":5365:5453   */\n      mstore\n        /* \"#utility.yul\":5472:5476   */\n      0x41\n        /* \"#utility.yul\":5469:5470   */\n      0x04\n        /* \"#utility.yul\":5462:5477   */\n      mstore\n        /* \"#utility.yul\":5496:5500   */\n      0x24\n        /* \"#utility.yul\":5493:5494   */\n      0x00\n        /* \"#utility.yul\":5486:5501   */\n      revert\n        /* \"#utility.yul\":5513:5794   */\n    tag_326:\n        /* \"#utility.yul\":5596:5623   */\n      tag_448\n        /* \"#utility.yul\":5618:5622   */\n      dup3\n        /* \"#utility.yul\":5596:5623   */\n      tag_306\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5588:5594   */\n      dup2\n        /* \"#utility.yul\":5584:5624   */\n      add\n        /* \"#utility.yul\":5726:5732   */\n      dup2\n        /* \"#utility.yul\":5714:5724   */\n      dup2\n        /* \"#utility.yul\":5711:5733   */\n      lt\n        /* \"#utility.yul\":5690:5708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5678:5688   */\n      dup3\n        /* \"#utility.yul\":5675:5709   */\n      gt\n        /* \"#utility.yul\":5672:5734   */\n      or\n        /* \"#utility.yul\":5669:5757   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5737:5755   */\n      tag_450\n      tag_325\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5669:5757   */\n    tag_449:\n        /* \"#utility.yul\":5777:5787   */\n      dup1\n        /* \"#utility.yul\":5773:5775   */\n      0x40\n        /* \"#utility.yul\":5766:5788   */\n      mstore\n        /* \"#utility.yul\":5556:5794   */\n      pop\n        /* \"#utility.yul\":5513:5794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5800:5929   */\n    tag_327:\n        /* \"#utility.yul\":5834:5840   */\n      0x00\n        /* \"#utility.yul\":5861:5881   */\n      tag_452\n      tag_308\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5851:5881   */\n      swap1\n      pop\n        /* \"#utility.yul\":5890:5923   */\n      tag_453\n        /* \"#utility.yul\":5918:5922   */\n      dup3\n        /* \"#utility.yul\":5910:5916   */\n      dup3\n        /* \"#utility.yul\":5890:5923   */\n      tag_326\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5800:5929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5935:6243   */\n    tag_328:\n        /* \"#utility.yul\":5997:6001   */\n      0x00\n        /* \"#utility.yul\":6087:6105   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6079:6085   */\n      dup3\n        /* \"#utility.yul\":6076:6106   */\n      gt\n        /* \"#utility.yul\":6073:6129   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6109:6127   */\n      tag_456\n      tag_325\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6073:6129   */\n    tag_455:\n        /* \"#utility.yul\":6147:6176   */\n      tag_457\n        /* \"#utility.yul\":6169:6175   */\n      dup3\n        /* \"#utility.yul\":6147:6176   */\n      tag_306\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6139:6176   */\n      swap1\n      pop\n        /* \"#utility.yul\":6231:6235   */\n      0x20\n        /* \"#utility.yul\":6225:6229   */\n      dup2\n        /* \"#utility.yul\":6221:6236   */\n      add\n        /* \"#utility.yul\":6213:6236   */\n      swap1\n      pop\n        /* \"#utility.yul\":5935:6243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6249:6397   */\n    tag_329:\n        /* \"#utility.yul\":6347:6353   */\n      dup3\n        /* \"#utility.yul\":6342:6345   */\n      dup2\n        /* \"#utility.yul\":6337:6340   */\n      dup4\n        /* \"#utility.yul\":6324:6354   */\n      calldatacopy\n        /* \"#utility.yul\":6388:6389   */\n      0x00\n        /* \"#utility.yul\":6379:6385   */\n      dup4\n        /* \"#utility.yul\":6374:6377   */\n      dup4\n        /* \"#utility.yul\":6370:6386   */\n      add\n        /* \"#utility.yul\":6363:6390   */\n      mstore\n        /* \"#utility.yul\":6249:6397   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6828   */\n    tag_330:\n        /* \"#utility.yul\":6481:6486   */\n      0x00\n        /* \"#utility.yul\":6506:6572   */\n      tag_460\n        /* \"#utility.yul\":6522:6571   */\n      tag_461\n        /* \"#utility.yul\":6564:6570   */\n      dup5\n        /* \"#utility.yul\":6522:6571   */\n      tag_328\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6506:6572   */\n      tag_327\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6497:6572   */\n      swap1\n      pop\n        /* \"#utility.yul\":6595:6601   */\n      dup3\n        /* \"#utility.yul\":6588:6593   */\n      dup2\n        /* \"#utility.yul\":6581:6602   */\n      mstore\n        /* \"#utility.yul\":6633:6637   */\n      0x20\n        /* \"#utility.yul\":6626:6631   */\n      dup2\n        /* \"#utility.yul\":6622:6638   */\n      add\n        /* \"#utility.yul\":6671:6674   */\n      dup5\n        /* \"#utility.yul\":6662:6668   */\n      dup5\n        /* \"#utility.yul\":6657:6660   */\n      dup5\n        /* \"#utility.yul\":6653:6669   */\n      add\n        /* \"#utility.yul\":6650:6675   */\n      gt\n        /* \"#utility.yul\":6647:6759   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6678:6757   */\n      tag_463\n      tag_324\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6647:6759   */\n    tag_462:\n        /* \"#utility.yul\":6768:6822   */\n      tag_464\n        /* \"#utility.yul\":6815:6821   */\n      dup5\n        /* \"#utility.yul\":6810:6813   */\n      dup3\n        /* \"#utility.yul\":6805:6808   */\n      dup6\n        /* \"#utility.yul\":6768:6822   */\n      tag_329\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6487:6828   */\n      pop\n        /* \"#utility.yul\":6403:6828   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6848:7188   */\n    tag_331:\n        /* \"#utility.yul\":6904:6909   */\n      0x00\n        /* \"#utility.yul\":6953:6956   */\n      dup3\n        /* \"#utility.yul\":6946:6950   */\n      0x1f\n        /* \"#utility.yul\":6938:6944   */\n      dup4\n        /* \"#utility.yul\":6934:6951   */\n      add\n        /* \"#utility.yul\":6930:6957   */\n      slt\n        /* \"#utility.yul\":6920:7042   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":6961:7040   */\n      tag_467\n      tag_323\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6920:7042   */\n    tag_466:\n        /* \"#utility.yul\":7078:7084   */\n      dup2\n        /* \"#utility.yul\":7065:7085   */\n      calldataload\n        /* \"#utility.yul\":7103:7182   */\n      tag_468\n        /* \"#utility.yul\":7178:7181   */\n      dup5\n        /* \"#utility.yul\":7170:7176   */\n      dup3\n        /* \"#utility.yul\":7163:7167   */\n      0x20\n        /* \"#utility.yul\":7155:7161   */\n      dup7\n        /* \"#utility.yul\":7151:7168   */\n      add\n        /* \"#utility.yul\":7103:7182   */\n      tag_330\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7094:7182   */\n      swap2\n      pop\n        /* \"#utility.yul\":6910:7188   */\n      pop\n        /* \"#utility.yul\":6848:7188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7194:7848   */\n    tag_73:\n        /* \"#utility.yul\":7272:7278   */\n      0x00\n        /* \"#utility.yul\":7280:7286   */\n      dup1\n        /* \"#utility.yul\":7329:7331   */\n      0x40\n        /* \"#utility.yul\":7317:7326   */\n      dup4\n        /* \"#utility.yul\":7308:7315   */\n      dup6\n        /* \"#utility.yul\":7304:7327   */\n      sub\n        /* \"#utility.yul\":7300:7332   */\n      slt\n        /* \"#utility.yul\":7297:7416   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":7335:7414   */\n      tag_471\n      tag_309\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7297:7416   */\n    tag_470:\n        /* \"#utility.yul\":7483:7484   */\n      0x00\n        /* \"#utility.yul\":7472:7481   */\n      dup4\n        /* \"#utility.yul\":7468:7485   */\n      add\n        /* \"#utility.yul\":7455:7486   */\n      calldataload\n        /* \"#utility.yul\":7513:7531   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7505:7511   */\n      dup2\n        /* \"#utility.yul\":7502:7532   */\n      gt\n        /* \"#utility.yul\":7499:7616   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":7535:7614   */\n      tag_473\n      tag_310\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7499:7616   */\n    tag_472:\n        /* \"#utility.yul\":7640:7703   */\n      tag_474\n        /* \"#utility.yul\":7695:7702   */\n      dup6\n        /* \"#utility.yul\":7686:7692   */\n      dup3\n        /* \"#utility.yul\":7675:7684   */\n      dup7\n        /* \"#utility.yul\":7671:7693   */\n      add\n        /* \"#utility.yul\":7640:7703   */\n      tag_331\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7630:7703   */\n      swap3\n      pop\n        /* \"#utility.yul\":7426:7713   */\n      pop\n        /* \"#utility.yul\":7752:7754   */\n      0x20\n        /* \"#utility.yul\":7778:7831   */\n      tag_475\n        /* \"#utility.yul\":7823:7830   */\n      dup6\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7803:7812   */\n      dup7\n        /* \"#utility.yul\":7799:7821   */\n      add\n        /* \"#utility.yul\":7778:7831   */\n      tag_317\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7768:7831   */\n      swap2\n      pop\n        /* \"#utility.yul\":7723:7841   */\n      pop\n        /* \"#utility.yul\":7194:7848   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7854:8183   */\n    tag_77:\n        /* \"#utility.yul\":7913:7919   */\n      0x00\n        /* \"#utility.yul\":7962:7964   */\n      0x20\n        /* \"#utility.yul\":7950:7959   */\n      dup3\n        /* \"#utility.yul\":7941:7948   */\n      dup5\n        /* \"#utility.yul\":7937:7960   */\n      sub\n        /* \"#utility.yul\":7933:7965   */\n      slt\n        /* \"#utility.yul\":7930:8049   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":7968:8047   */\n      tag_478\n      tag_309\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7930:8049   */\n    tag_477:\n        /* \"#utility.yul\":8088:8089   */\n      0x00\n        /* \"#utility.yul\":8113:8166   */\n      tag_479\n        /* \"#utility.yul\":8158:8165   */\n      dup5\n        /* \"#utility.yul\":8149:8155   */\n      dup3\n        /* \"#utility.yul\":8138:8147   */\n      dup6\n        /* \"#utility.yul\":8134:8156   */\n      add\n        /* \"#utility.yul\":8113:8166   */\n      tag_314\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8103:8166   */\n      swap2\n      pop\n        /* \"#utility.yul\":8059:8176   */\n      pop\n        /* \"#utility.yul\":7854:8183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8307   */\n    tag_332:\n        /* \"#utility.yul\":8276:8300   */\n      tag_481\n        /* \"#utility.yul\":8294:8299   */\n      dup2\n        /* \"#utility.yul\":8276:8300   */\n      tag_312\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8271:8274   */\n      dup3\n        /* \"#utility.yul\":8264:8301   */\n      mstore\n        /* \"#utility.yul\":8189:8307   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8313:8535   */\n    tag_91:\n        /* \"#utility.yul\":8406:8410   */\n      0x00\n        /* \"#utility.yul\":8444:8446   */\n      0x20\n        /* \"#utility.yul\":8433:8442   */\n      dup3\n        /* \"#utility.yul\":8429:8447   */\n      add\n        /* \"#utility.yul\":8421:8447   */\n      swap1\n      pop\n        /* \"#utility.yul\":8457:8528   */\n      tag_483\n        /* \"#utility.yul\":8525:8526   */\n      0x00\n        /* \"#utility.yul\":8514:8523   */\n      dup4\n        /* \"#utility.yul\":8510:8527   */\n      add\n        /* \"#utility.yul\":8501:8507   */\n      dup5\n        /* \"#utility.yul\":8457:8528   */\n      tag_332\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8313:8535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8541:8659   */\n    tag_333:\n        /* \"#utility.yul\":8612:8634   */\n      tag_485\n        /* \"#utility.yul\":8628:8633   */\n      dup2\n        /* \"#utility.yul\":8612:8634   */\n      tag_321\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8605:8610   */\n      dup2\n        /* \"#utility.yul\":8602:8635   */\n      eq\n        /* \"#utility.yul\":8592:8653   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8646:8647   */\n      dup1\n        /* \"#utility.yul\":8639:8651   */\n      revert\n        /* \"#utility.yul\":8592:8653   */\n    tag_486:\n        /* \"#utility.yul\":8541:8659   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8665:8800   */\n    tag_334:\n        /* \"#utility.yul\":8709:8714   */\n      0x00\n        /* \"#utility.yul\":8747:8753   */\n      dup2\n        /* \"#utility.yul\":8734:8754   */\n      calldataload\n        /* \"#utility.yul\":8725:8754   */\n      swap1\n      pop\n        /* \"#utility.yul\":8763:8794   */\n      tag_488\n        /* \"#utility.yul\":8788:8793   */\n      dup2\n        /* \"#utility.yul\":8763:8794   */\n      tag_333\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8665:8800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8806:9131   */\n    tag_101:\n        /* \"#utility.yul\":8863:8869   */\n      0x00\n        /* \"#utility.yul\":8912:8914   */\n      0x20\n        /* \"#utility.yul\":8900:8909   */\n      dup3\n        /* \"#utility.yul\":8891:8898   */\n      dup5\n        /* \"#utility.yul\":8887:8910   */\n      sub\n        /* \"#utility.yul\":8883:8915   */\n      slt\n        /* \"#utility.yul\":8880:8999   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":8918:8997   */\n      tag_491\n      tag_309\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8880:8999   */\n    tag_490:\n        /* \"#utility.yul\":9038:9039   */\n      0x00\n        /* \"#utility.yul\":9063:9114   */\n      tag_492\n        /* \"#utility.yul\":9106:9113   */\n      dup5\n        /* \"#utility.yul\":9097:9103   */\n      dup3\n        /* \"#utility.yul\":9086:9095   */\n      dup6\n        /* \"#utility.yul\":9082:9104   */\n      add\n        /* \"#utility.yul\":9063:9114   */\n      tag_334\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9053:9114   */\n      swap2\n      pop\n        /* \"#utility.yul\":9009:9124   */\n      pop\n        /* \"#utility.yul\":8806:9131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9137:9272   */\n    tag_335:\n        /* \"#utility.yul\":9225:9231   */\n      0x00\n        /* \"#utility.yul\":9259:9264   */\n      dup2\n        /* \"#utility.yul\":9253:9265   */\n      mload\n        /* \"#utility.yul\":9243:9265   */\n      swap1\n      pop\n        /* \"#utility.yul\":9137:9272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9278:9483   */\n    tag_336:\n        /* \"#utility.yul\":9398:9409   */\n      0x00\n        /* \"#utility.yul\":9432:9438   */\n      dup3\n        /* \"#utility.yul\":9427:9430   */\n      dup3\n        /* \"#utility.yul\":9420:9439   */\n      mstore\n        /* \"#utility.yul\":9472:9476   */\n      0x20\n        /* \"#utility.yul\":9467:9470   */\n      dup3\n        /* \"#utility.yul\":9463:9477   */\n      add\n        /* \"#utility.yul\":9448:9477   */\n      swap1\n      pop\n        /* \"#utility.yul\":9278:9483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9489:9642   */\n    tag_337:\n        /* \"#utility.yul\":9577:9581   */\n      0x00\n        /* \"#utility.yul\":9600:9603   */\n      dup2\n        /* \"#utility.yul\":9592:9603   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9634   */\n      0x20\n        /* \"#utility.yul\":9625:9628   */\n      dup3\n        /* \"#utility.yul\":9621:9635   */\n      add\n        /* \"#utility.yul\":9613:9635   */\n      swap1\n      pop\n        /* \"#utility.yul\":9489:9642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9648:9807   */\n    tag_338:\n        /* \"#utility.yul\":9722:9733   */\n      0x00\n        /* \"#utility.yul\":9756:9762   */\n      dup3\n        /* \"#utility.yul\":9751:9754   */\n      dup3\n        /* \"#utility.yul\":9744:9763   */\n      mstore\n        /* \"#utility.yul\":9796:9800   */\n      0x20\n        /* \"#utility.yul\":9791:9794   */\n      dup3\n        /* \"#utility.yul\":9787:9801   */\n      add\n        /* \"#utility.yul\":9772:9801   */\n      swap1\n      pop\n        /* \"#utility.yul\":9648:9807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9813:10170   */\n    tag_339:\n        /* \"#utility.yul\":9891:9894   */\n      0x00\n        /* \"#utility.yul\":9919:9958   */\n      tag_498\n        /* \"#utility.yul\":9952:9957   */\n      dup3\n        /* \"#utility.yul\":9919:9958   */\n      tag_303\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9974:10035   */\n      tag_499\n        /* \"#utility.yul\":10028:10034   */\n      dup2\n        /* \"#utility.yul\":10023:10026   */\n      dup6\n        /* \"#utility.yul\":9974:10035   */\n      tag_338\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9967:10035   */\n      swap4\n      pop\n        /* \"#utility.yul\":10044:10109   */\n      tag_500\n        /* \"#utility.yul\":10102:10108   */\n      dup2\n        /* \"#utility.yul\":10097:10100   */\n      dup6\n        /* \"#utility.yul\":10090:10094   */\n      0x20\n        /* \"#utility.yul\":10083:10088   */\n      dup7\n        /* \"#utility.yul\":10079:10095   */\n      add\n        /* \"#utility.yul\":10044:10109   */\n      tag_305\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10134:10163   */\n      tag_501\n        /* \"#utility.yul\":10156:10162   */\n      dup2\n        /* \"#utility.yul\":10134:10163   */\n      tag_306\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":10129:10132   */\n      dup5\n        /* \"#utility.yul\":10125:10164   */\n      add\n        /* \"#utility.yul\":10118:10164   */\n      swap2\n      pop\n        /* \"#utility.yul\":9895:10170   */\n      pop\n        /* \"#utility.yul\":9813:10170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10176:10278   */\n    tag_340:\n        /* \"#utility.yul\":10249:10271   */\n      tag_503\n        /* \"#utility.yul\":10265:10270   */\n      dup2\n        /* \"#utility.yul\":10249:10271   */\n      tag_321\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10244:10247   */\n      dup3\n        /* \"#utility.yul\":10237:10272   */\n      mstore\n        /* \"#utility.yul\":10176:10278   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10284:10392   */\n    tag_341:\n        /* \"#utility.yul\":10361:10385   */\n      tag_505\n        /* \"#utility.yul\":10379:10384   */\n      dup2\n        /* \"#utility.yul\":10361:10385   */\n      tag_315\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10356:10359   */\n      dup3\n        /* \"#utility.yul\":10349:10386   */\n      mstore\n        /* \"#utility.yul\":10284:10392   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10454:11215   */\n    tag_342:\n        /* \"#utility.yul\":10555:10558   */\n      0x00\n        /* \"#utility.yul\":10591:10595   */\n      0x60\n        /* \"#utility.yul\":10586:10589   */\n      dup4\n        /* \"#utility.yul\":10582:10596   */\n      add\n        /* \"#utility.yul\":10678:10682   */\n      0x00\n        /* \"#utility.yul\":10671:10676   */\n      dup4\n        /* \"#utility.yul\":10667:10683   */\n      add\n        /* \"#utility.yul\":10661:10684   */\n      mload\n        /* \"#utility.yul\":10731:10734   */\n      dup5\n        /* \"#utility.yul\":10725:10729   */\n      dup3\n        /* \"#utility.yul\":10721:10735   */\n      sub\n        /* \"#utility.yul\":10714:10718   */\n      0x00\n        /* \"#utility.yul\":10709:10712   */\n      dup7\n        /* \"#utility.yul\":10705:10719   */\n      add\n        /* \"#utility.yul\":10698:10736   */\n      mstore\n        /* \"#utility.yul\":10757:10830   */\n      tag_507\n        /* \"#utility.yul\":10825:10829   */\n      dup3\n        /* \"#utility.yul\":10811:10823   */\n      dup3\n        /* \"#utility.yul\":10757:10830   */\n      tag_339\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10749:10830   */\n      swap2\n      pop\n        /* \"#utility.yul\":10606:10841   */\n      pop\n        /* \"#utility.yul\":10925:10929   */\n      0x20\n        /* \"#utility.yul\":10918:10923   */\n      dup4\n        /* \"#utility.yul\":10914:10930   */\n      add\n        /* \"#utility.yul\":10908:10931   */\n      mload\n        /* \"#utility.yul\":10944:11003   */\n      tag_508\n        /* \"#utility.yul\":10997:11001   */\n      0x20\n        /* \"#utility.yul\":10992:10995   */\n      dup7\n        /* \"#utility.yul\":10988:11002   */\n      add\n        /* \"#utility.yul\":10974:10986   */\n      dup3\n        /* \"#utility.yul\":10944:11003   */\n      tag_340\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10851:11013   */\n      pop\n        /* \"#utility.yul\":11096:11100   */\n      0x40\n        /* \"#utility.yul\":11089:11094   */\n      dup4\n        /* \"#utility.yul\":11085:11101   */\n      add\n        /* \"#utility.yul\":11079:11102   */\n      mload\n        /* \"#utility.yul\":11115:11178   */\n      tag_509\n        /* \"#utility.yul\":11172:11176   */\n      0x40\n        /* \"#utility.yul\":11167:11170   */\n      dup7\n        /* \"#utility.yul\":11163:11177   */\n      add\n        /* \"#utility.yul\":11149:11161   */\n      dup3\n        /* \"#utility.yul\":11115:11178   */\n      tag_341\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11023:11188   */\n      pop\n        /* \"#utility.yul\":11205:11209   */\n      dup1\n        /* \"#utility.yul\":11198:11209   */\n      swap2\n      pop\n        /* \"#utility.yul\":10560:11215   */\n      pop\n        /* \"#utility.yul\":10454:11215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11221:11461   */\n    tag_343:\n        /* \"#utility.yul\":11332:11342   */\n      0x00\n        /* \"#utility.yul\":11367:11455   */\n      tag_511\n        /* \"#utility.yul\":11451:11454   */\n      dup4\n        /* \"#utility.yul\":11443:11449   */\n      dup4\n        /* \"#utility.yul\":11367:11455   */\n      tag_342\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":11353:11455   */\n      swap1\n      pop\n        /* \"#utility.yul\":11221:11461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11467:11601   */\n    tag_344:\n        /* \"#utility.yul\":11558:11562   */\n      0x00\n        /* \"#utility.yul\":11590:11594   */\n      0x20\n        /* \"#utility.yul\":11585:11588   */\n      dup3\n        /* \"#utility.yul\":11581:11595   */\n      add\n        /* \"#utility.yul\":11573:11595   */\n      swap1\n      pop\n        /* \"#utility.yul\":11467:11601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11667:12746   */\n    tag_345:\n        /* \"#utility.yul\":11828:11831   */\n      0x00\n        /* \"#utility.yul\":11857:11932   */\n      tag_514\n        /* \"#utility.yul\":11926:11931   */\n      dup3\n        /* \"#utility.yul\":11857:11932   */\n      tag_335\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":11948:12055   */\n      tag_515\n        /* \"#utility.yul\":12048:12054   */\n      dup2\n        /* \"#utility.yul\":12043:12046   */\n      dup6\n        /* \"#utility.yul\":11948:12055   */\n      tag_336\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11941:12055   */\n      swap4\n      pop\n        /* \"#utility.yul\":12081:12084   */\n      dup4\n        /* \"#utility.yul\":12126:12130   */\n      0x20\n        /* \"#utility.yul\":12118:12124   */\n      dup3\n        /* \"#utility.yul\":12114:12131   */\n      mul\n        /* \"#utility.yul\":12109:12112   */\n      dup6\n        /* \"#utility.yul\":12105:12132   */\n      add\n        /* \"#utility.yul\":12156:12233   */\n      tag_516\n        /* \"#utility.yul\":12227:12232   */\n      dup6\n        /* \"#utility.yul\":12156:12233   */\n      tag_337\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12256:12263   */\n      dup1\n        /* \"#utility.yul\":12287:12288   */\n      0x00\n        /* \"#utility.yul\":12272:12701   */\n    tag_517:\n        /* \"#utility.yul\":12297:12303   */\n      dup6\n        /* \"#utility.yul\":12294:12295   */\n      dup2\n        /* \"#utility.yul\":12291:12304   */\n      lt\n        /* \"#utility.yul\":12272:12701   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":12368:12377   */\n      dup5\n        /* \"#utility.yul\":12362:12366   */\n      dup5\n        /* \"#utility.yul\":12358:12378   */\n      sub\n        /* \"#utility.yul\":12353:12356   */\n      dup10\n        /* \"#utility.yul\":12346:12379   */\n      mstore\n        /* \"#utility.yul\":12419:12425   */\n      dup2\n        /* \"#utility.yul\":12413:12426   */\n      mload\n        /* \"#utility.yul\":12447:12553   */\n      tag_520\n        /* \"#utility.yul\":12548:12552   */\n      dup6\n        /* \"#utility.yul\":12533:12546   */\n      dup3\n        /* \"#utility.yul\":12447:12553   */\n      tag_343\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12439:12553   */\n      swap5\n      pop\n        /* \"#utility.yul\":12576:12657   */\n      tag_521\n        /* \"#utility.yul\":12650:12656   */\n      dup4\n        /* \"#utility.yul\":12576:12657   */\n      tag_344\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":12566:12657   */\n      swap3\n      pop\n        /* \"#utility.yul\":12686:12690   */\n      0x20\n        /* \"#utility.yul\":12681:12684   */\n      dup11\n        /* \"#utility.yul\":12677:12691   */\n      add\n        /* \"#utility.yul\":12670:12691   */\n      swap10\n      pop\n        /* \"#utility.yul\":12332:12701   */\n      pop\n        /* \"#utility.yul\":12319:12320   */\n      0x01\n        /* \"#utility.yul\":12316:12317   */\n      dup2\n        /* \"#utility.yul\":12312:12321   */\n      add\n        /* \"#utility.yul\":12307:12321   */\n      swap1\n      pop\n        /* \"#utility.yul\":12272:12701   */\n      jump(tag_517)\n    tag_519:\n        /* \"#utility.yul\":12276:12290   */\n      pop\n        /* \"#utility.yul\":12717:12721   */\n      dup3\n        /* \"#utility.yul\":12710:12721   */\n      swap8\n      pop\n        /* \"#utility.yul\":12737:12740   */\n      dup8\n        /* \"#utility.yul\":12730:12740   */\n      swap6\n      pop\n        /* \"#utility.yul\":11833:12746   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11667:12746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12752:13209   */\n    tag_107:\n        /* \"#utility.yul\":12937:12941   */\n      0x00\n        /* \"#utility.yul\":12975:12977   */\n      0x20\n        /* \"#utility.yul\":12964:12973   */\n      dup3\n        /* \"#utility.yul\":12960:12978   */\n      add\n        /* \"#utility.yul\":12952:12978   */\n      swap1\n      pop\n        /* \"#utility.yul\":13024:13033   */\n      dup2\n        /* \"#utility.yul\":13018:13022   */\n      dup2\n        /* \"#utility.yul\":13014:13034   */\n      sub\n        /* \"#utility.yul\":13010:13011   */\n      0x00\n        /* \"#utility.yul\":12999:13008   */\n      dup4\n        /* \"#utility.yul\":12995:13012   */\n      add\n        /* \"#utility.yul\":12988:13035   */\n      mstore\n        /* \"#utility.yul\":13052:13202   */\n      tag_523\n        /* \"#utility.yul\":13197:13201   */\n      dup2\n        /* \"#utility.yul\":13188:13194   */\n      dup5\n        /* \"#utility.yul\":13052:13202   */\n      tag_345\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":13044:13202   */\n      swap1\n      pop\n        /* \"#utility.yul\":12752:13209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13215:13689   */\n    tag_110:\n        /* \"#utility.yul\":13283:13289   */\n      0x00\n        /* \"#utility.yul\":13291:13297   */\n      dup1\n        /* \"#utility.yul\":13340:13342   */\n      0x40\n        /* \"#utility.yul\":13328:13337   */\n      dup4\n        /* \"#utility.yul\":13319:13326   */\n      dup6\n        /* \"#utility.yul\":13315:13338   */\n      sub\n        /* \"#utility.yul\":13311:13343   */\n      slt\n        /* \"#utility.yul\":13308:13427   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":13346:13425   */\n      tag_526\n      tag_309\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":13308:13427   */\n    tag_525:\n        /* \"#utility.yul\":13466:13467   */\n      0x00\n        /* \"#utility.yul\":13491:13544   */\n      tag_527\n        /* \"#utility.yul\":13536:13543   */\n      dup6\n        /* \"#utility.yul\":13527:13533   */\n      dup3\n        /* \"#utility.yul\":13516:13525   */\n      dup7\n        /* \"#utility.yul\":13512:13534   */\n      add\n        /* \"#utility.yul\":13491:13544   */\n      tag_314\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":13481:13544   */\n      swap3\n      pop\n        /* \"#utility.yul\":13437:13554   */\n      pop\n        /* \"#utility.yul\":13593:13595   */\n      0x20\n        /* \"#utility.yul\":13619:13672   */\n      tag_528\n        /* \"#utility.yul\":13664:13671   */\n      dup6\n        /* \"#utility.yul\":13655:13661   */\n      dup3\n        /* \"#utility.yul\":13644:13653   */\n      dup7\n        /* \"#utility.yul\":13640:13662   */\n      add\n        /* \"#utility.yul\":13619:13672   */\n      tag_314\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13609:13672   */\n      swap2\n      pop\n        /* \"#utility.yul\":13564:13682   */\n      pop\n        /* \"#utility.yul\":13215:13689   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13695:13811   */\n    tag_346:\n        /* \"#utility.yul\":13765:13786   */\n      tag_530\n        /* \"#utility.yul\":13780:13785   */\n      dup2\n        /* \"#utility.yul\":13765:13786   */\n      tag_318\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":13758:13763   */\n      dup2\n        /* \"#utility.yul\":13755:13787   */\n      eq\n        /* \"#utility.yul\":13745:13805   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":13801:13802   */\n      0x00\n        /* \"#utility.yul\":13798:13799   */\n      dup1\n        /* \"#utility.yul\":13791:13803   */\n      revert\n        /* \"#utility.yul\":13745:13805   */\n    tag_531:\n        /* \"#utility.yul\":13695:13811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13817:13950   */\n    tag_347:\n        /* \"#utility.yul\":13860:13865   */\n      0x00\n        /* \"#utility.yul\":13898:13904   */\n      dup2\n        /* \"#utility.yul\":13885:13905   */\n      calldataload\n        /* \"#utility.yul\":13876:13905   */\n      swap1\n      pop\n        /* \"#utility.yul\":13914:13944   */\n      tag_533\n        /* \"#utility.yul\":13938:13943   */\n      dup2\n        /* \"#utility.yul\":13914:13944   */\n      tag_346\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13817:13950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13956:14424   */\n    tag_115:\n        /* \"#utility.yul\":14021:14027   */\n      0x00\n        /* \"#utility.yul\":14029:14035   */\n      dup1\n        /* \"#utility.yul\":14078:14080   */\n      0x40\n        /* \"#utility.yul\":14066:14075   */\n      dup4\n        /* \"#utility.yul\":14057:14064   */\n      dup6\n        /* \"#utility.yul\":14053:14076   */\n      sub\n        /* \"#utility.yul\":14049:14081   */\n      slt\n        /* \"#utility.yul\":14046:14165   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":14084:14163   */\n      tag_536\n      tag_309\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14046:14165   */\n    tag_535:\n        /* \"#utility.yul\":14204:14205   */\n      0x00\n        /* \"#utility.yul\":14229:14279   */\n      tag_537\n        /* \"#utility.yul\":14271:14278   */\n      dup6\n        /* \"#utility.yul\":14262:14268   */\n      dup3\n        /* \"#utility.yul\":14251:14260   */\n      dup7\n        /* \"#utility.yul\":14247:14269   */\n      add\n        /* \"#utility.yul\":14229:14279   */\n      tag_347\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14219:14279   */\n      swap3\n      pop\n        /* \"#utility.yul\":14175:14289   */\n      pop\n        /* \"#utility.yul\":14328:14330   */\n      0x20\n        /* \"#utility.yul\":14354:14407   */\n      tag_538\n        /* \"#utility.yul\":14399:14406   */\n      dup6\n        /* \"#utility.yul\":14390:14396   */\n      dup3\n        /* \"#utility.yul\":14379:14388   */\n      dup7\n        /* \"#utility.yul\":14375:14397   */\n      add\n        /* \"#utility.yul\":14354:14407   */\n      tag_317\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14344:14407   */\n      swap2\n      pop\n        /* \"#utility.yul\":14299:14417   */\n      pop\n        /* \"#utility.yul\":13956:14424   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14430:14955   */\n    tag_126:\n        /* \"#utility.yul\":14595:14599   */\n      0x00\n        /* \"#utility.yul\":14633:14635   */\n      0x60\n        /* \"#utility.yul\":14622:14631   */\n      dup3\n        /* \"#utility.yul\":14618:14636   */\n      add\n        /* \"#utility.yul\":14610:14636   */\n      swap1\n      pop\n        /* \"#utility.yul\":14682:14691   */\n      dup2\n        /* \"#utility.yul\":14676:14680   */\n      dup2\n        /* \"#utility.yul\":14672:14692   */\n      sub\n        /* \"#utility.yul\":14668:14669   */\n      0x00\n        /* \"#utility.yul\":14657:14666   */\n      dup4\n        /* \"#utility.yul\":14653:14670   */\n      add\n        /* \"#utility.yul\":14646:14693   */\n      mstore\n        /* \"#utility.yul\":14710:14788   */\n      tag_540\n        /* \"#utility.yul\":14783:14787   */\n      dup2\n        /* \"#utility.yul\":14774:14780   */\n      dup7\n        /* \"#utility.yul\":14710:14788   */\n      tag_307\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14702:14788   */\n      swap1\n      pop\n        /* \"#utility.yul\":14798:14866   */\n      tag_541\n        /* \"#utility.yul\":14862:14864   */\n      0x20\n        /* \"#utility.yul\":14851:14860   */\n      dup4\n        /* \"#utility.yul\":14847:14865   */\n      add\n        /* \"#utility.yul\":14838:14844   */\n      dup6\n        /* \"#utility.yul\":14798:14866   */\n      tag_322\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14876:14948   */\n      tag_542\n        /* \"#utility.yul\":14944:14946   */\n      0x40\n        /* \"#utility.yul\":14933:14942   */\n      dup4\n        /* \"#utility.yul\":14929:14947   */\n      add\n        /* \"#utility.yul\":14920:14926   */\n      dup5\n        /* \"#utility.yul\":14876:14948   */\n      tag_320\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14430:14955   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14961:15141   */\n    tag_348:\n        /* \"#utility.yul\":15009:15086   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15006:15007   */\n      0x00\n        /* \"#utility.yul\":14999:15087   */\n      mstore\n        /* \"#utility.yul\":15106:15110   */\n      0x22\n        /* \"#utility.yul\":15103:15104   */\n      0x04\n        /* \"#utility.yul\":15096:15111   */\n      mstore\n        /* \"#utility.yul\":15130:15134   */\n      0x24\n        /* \"#utility.yul\":15127:15128   */\n      0x00\n        /* \"#utility.yul\":15120:15135   */\n      revert\n        /* \"#utility.yul\":15147:15467   */\n    tag_129:\n        /* \"#utility.yul\":15191:15197   */\n      0x00\n        /* \"#utility.yul\":15228:15229   */\n      0x02\n        /* \"#utility.yul\":15222:15226   */\n      dup3\n        /* \"#utility.yul\":15218:15230   */\n      div\n        /* \"#utility.yul\":15208:15230   */\n      swap1\n      pop\n        /* \"#utility.yul\":15275:15276   */\n      0x01\n        /* \"#utility.yul\":15269:15273   */\n      dup3\n        /* \"#utility.yul\":15265:15277   */\n      and\n        /* \"#utility.yul\":15296:15314   */\n      dup1\n        /* \"#utility.yul\":15286:15367   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":15352:15356   */\n      0x7f\n        /* \"#utility.yul\":15344:15350   */\n      dup3\n        /* \"#utility.yul\":15340:15357   */\n      and\n        /* \"#utility.yul\":15330:15357   */\n      swap2\n      pop\n        /* \"#utility.yul\":15286:15367   */\n    tag_545:\n        /* \"#utility.yul\":15414:15416   */\n      0x20\n        /* \"#utility.yul\":15406:15412   */\n      dup3\n        /* \"#utility.yul\":15403:15417   */\n      lt\n        /* \"#utility.yul\":15383:15401   */\n      dup2\n        /* \"#utility.yul\":15380:15418   */\n      sub\n        /* \"#utility.yul\":15377:15461   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":15433:15451   */\n      tag_547\n      tag_348\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":15377:15461   */\n    tag_546:\n        /* \"#utility.yul\":15198:15467   */\n      pop\n        /* \"#utility.yul\":15147:15467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15473:15643   */\n    tag_349:\n        /* \"#utility.yul\":15613:15635   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":15609:15610   */\n      0x00\n        /* \"#utility.yul\":15601:15607   */\n      dup3\n        /* \"#utility.yul\":15597:15611   */\n      add\n        /* \"#utility.yul\":15590:15636   */\n      mstore\n        /* \"#utility.yul\":15473:15643   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15649:16015   */\n    tag_350:\n        /* \"#utility.yul\":15791:15794   */\n      0x00\n        /* \"#utility.yul\":15812:15879   */\n      tag_550\n        /* \"#utility.yul\":15876:15878   */\n      0x14\n        /* \"#utility.yul\":15871:15874   */\n      dup4\n        /* \"#utility.yul\":15812:15879   */\n      tag_304\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15805:15879   */\n      swap2\n      pop\n        /* \"#utility.yul\":15888:15981   */\n      tag_551\n        /* \"#utility.yul\":15977:15980   */\n      dup3\n        /* \"#utility.yul\":15888:15981   */\n      tag_349\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":16006:16008   */\n      0x20\n        /* \"#utility.yul\":16001:16004   */\n      dup3\n        /* \"#utility.yul\":15997:16009   */\n      add\n        /* \"#utility.yul\":15990:16009   */\n      swap1\n      pop\n        /* \"#utility.yul\":15649:16015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16021:16440   */\n    tag_143:\n        /* \"#utility.yul\":16187:16191   */\n      0x00\n        /* \"#utility.yul\":16225:16227   */\n      0x20\n        /* \"#utility.yul\":16214:16223   */\n      dup3\n        /* \"#utility.yul\":16210:16228   */\n      add\n        /* \"#utility.yul\":16202:16228   */\n      swap1\n      pop\n        /* \"#utility.yul\":16274:16283   */\n      dup2\n        /* \"#utility.yul\":16268:16272   */\n      dup2\n        /* \"#utility.yul\":16264:16284   */\n      sub\n        /* \"#utility.yul\":16260:16261   */\n      0x00\n        /* \"#utility.yul\":16249:16258   */\n      dup4\n        /* \"#utility.yul\":16245:16262   */\n      add\n        /* \"#utility.yul\":16238:16285   */\n      mstore\n        /* \"#utility.yul\":16302:16433   */\n      tag_553\n        /* \"#utility.yul\":16428:16432   */\n      dup2\n        /* \"#utility.yul\":16302:16433   */\n      tag_350\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":16294:16433   */\n      swap1\n      pop\n        /* \"#utility.yul\":16021:16440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16446:16587   */\n    tag_351:\n        /* \"#utility.yul\":16495:16499   */\n      0x00\n        /* \"#utility.yul\":16518:16521   */\n      dup2\n        /* \"#utility.yul\":16510:16521   */\n      swap1\n      pop\n        /* \"#utility.yul\":16541:16544   */\n      dup2\n        /* \"#utility.yul\":16538:16539   */\n      0x00\n        /* \"#utility.yul\":16531:16545   */\n      mstore\n        /* \"#utility.yul\":16575:16579   */\n      0x20\n        /* \"#utility.yul\":16572:16573   */\n      0x00\n        /* \"#utility.yul\":16562:16580   */\n      keccak256\n        /* \"#utility.yul\":16554:16580   */\n      swap1\n      pop\n        /* \"#utility.yul\":16446:16587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16593:16686   */\n    tag_352:\n        /* \"#utility.yul\":16630:16636   */\n      0x00\n        /* \"#utility.yul\":16677:16679   */\n      0x20\n        /* \"#utility.yul\":16672:16674   */\n      0x1f\n        /* \"#utility.yul\":16665:16670   */\n      dup4\n        /* \"#utility.yul\":16661:16675   */\n      add\n        /* \"#utility.yul\":16657:16680   */\n      div\n        /* \"#utility.yul\":16647:16680   */\n      swap1\n      pop\n        /* \"#utility.yul\":16593:16686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16692:16799   */\n    tag_353:\n        /* \"#utility.yul\":16736:16744   */\n      0x00\n        /* \"#utility.yul\":16786:16791   */\n      dup3\n        /* \"#utility.yul\":16780:16784   */\n      dup3\n        /* \"#utility.yul\":16776:16792   */\n      shl\n        /* \"#utility.yul\":16755:16792   */\n      swap1\n      pop\n        /* \"#utility.yul\":16692:16799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16805:17198   */\n    tag_354:\n        /* \"#utility.yul\":16874:16880   */\n      0x00\n        /* \"#utility.yul\":16924:16925   */\n      0x08\n        /* \"#utility.yul\":16912:16922   */\n      dup4\n        /* \"#utility.yul\":16908:16926   */\n      mul\n        /* \"#utility.yul\":16947:17044   */\n      tag_558\n        /* \"#utility.yul\":16977:17043   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16966:16975   */\n      dup3\n        /* \"#utility.yul\":16947:17044   */\n      tag_353\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":17065:17104   */\n      tag_559\n        /* \"#utility.yul\":17095:17103   */\n      dup7\n        /* \"#utility.yul\":17084:17093   */\n      dup4\n        /* \"#utility.yul\":17065:17104   */\n      tag_353\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":17053:17104   */\n      swap6\n      pop\n        /* \"#utility.yul\":17137:17141   */\n      dup1\n        /* \"#utility.yul\":17133:17142   */\n      not\n        /* \"#utility.yul\":17126:17131   */\n      dup5\n        /* \"#utility.yul\":17122:17143   */\n      and\n        /* \"#utility.yul\":17113:17143   */\n      swap4\n      pop\n        /* \"#utility.yul\":17186:17190   */\n      dup1\n        /* \"#utility.yul\":17176:17184   */\n      dup7\n        /* \"#utility.yul\":17172:17191   */\n      and\n        /* \"#utility.yul\":17165:17170   */\n      dup5\n        /* \"#utility.yul\":17162:17192   */\n      or\n        /* \"#utility.yul\":17152:17192   */\n      swap3\n      pop\n        /* \"#utility.yul\":16881:17198   */\n      pop\n      pop\n        /* \"#utility.yul\":16805:17198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17204:17264   */\n    tag_355:\n        /* \"#utility.yul\":17232:17235   */\n      0x00\n        /* \"#utility.yul\":17253:17258   */\n      dup2\n        /* \"#utility.yul\":17246:17258   */\n      swap1\n      pop\n        /* \"#utility.yul\":17204:17264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17270:17412   */\n    tag_356:\n        /* \"#utility.yul\":17320:17329   */\n      0x00\n        /* \"#utility.yul\":17353:17406   */\n      tag_562\n        /* \"#utility.yul\":17371:17405   */\n      tag_563\n        /* \"#utility.yul\":17380:17404   */\n      tag_564\n        /* \"#utility.yul\":17398:17403   */\n      dup5\n        /* \"#utility.yul\":17380:17404   */\n      tag_315\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":17371:17405   */\n      tag_355\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":17353:17406   */\n      tag_315\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":17340:17406   */\n      swap1\n      pop\n        /* \"#utility.yul\":17270:17412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17418:17493   */\n    tag_357:\n        /* \"#utility.yul\":17461:17464   */\n      0x00\n        /* \"#utility.yul\":17482:17487   */\n      dup2\n        /* \"#utility.yul\":17475:17487   */\n      swap1\n      pop\n        /* \"#utility.yul\":17418:17493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17499:17768   */\n    tag_358:\n        /* \"#utility.yul\":17609:17648   */\n      tag_567\n        /* \"#utility.yul\":17640:17647   */\n      dup4\n        /* \"#utility.yul\":17609:17648   */\n      tag_356\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":17670:17761   */\n      tag_568\n        /* \"#utility.yul\":17719:17760   */\n      tag_569\n        /* \"#utility.yul\":17743:17759   */\n      dup3\n        /* \"#utility.yul\":17719:17760   */\n      tag_357\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":17711:17717   */\n      dup5\n        /* \"#utility.yul\":17704:17708   */\n      dup5\n        /* \"#utility.yul\":17698:17709   */\n      sload\n        /* \"#utility.yul\":17670:17761   */\n      tag_354\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17664:17668   */\n      dup3\n        /* \"#utility.yul\":17657:17762   */\n      sstore\n        /* \"#utility.yul\":17575:17768   */\n      pop\n        /* \"#utility.yul\":17499:17768   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17774:17847   */\n    tag_359:\n        /* \"#utility.yul\":17819:17822   */\n      0x00\n        /* \"#utility.yul\":17774:17847   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17853:18042   */\n    tag_360:\n        /* \"#utility.yul\":17930:17962   */\n      tag_572\n      tag_359\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17971:18036   */\n      tag_573\n        /* \"#utility.yul\":18029:18035   */\n      dup2\n        /* \"#utility.yul\":18021:18027   */\n      dup5\n        /* \"#utility.yul\":18015:18019   */\n      dup5\n        /* \"#utility.yul\":17971:18036   */\n      tag_358\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17906:18042   */\n      pop\n        /* \"#utility.yul\":17853:18042   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18048:18234   */\n    tag_361:\n        /* \"#utility.yul\":18108:18228   */\n    tag_575:\n        /* \"#utility.yul\":18125:18128   */\n      dup2\n        /* \"#utility.yul\":18118:18123   */\n      dup2\n        /* \"#utility.yul\":18115:18129   */\n      lt\n        /* \"#utility.yul\":18108:18228   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":18179:18218   */\n      tag_578\n        /* \"#utility.yul\":18216:18217   */\n      0x00\n        /* \"#utility.yul\":18209:18214   */\n      dup3\n        /* \"#utility.yul\":18179:18218   */\n      tag_360\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18152:18153   */\n      0x01\n        /* \"#utility.yul\":18145:18150   */\n      dup2\n        /* \"#utility.yul\":18141:18154   */\n      add\n        /* \"#utility.yul\":18132:18154   */\n      swap1\n      pop\n        /* \"#utility.yul\":18108:18228   */\n      jump(tag_575)\n    tag_577:\n        /* \"#utility.yul\":18048:18234   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18240:18783   */\n    tag_362:\n        /* \"#utility.yul\":18341:18343   */\n      0x1f\n        /* \"#utility.yul\":18336:18339   */\n      dup3\n        /* \"#utility.yul\":18333:18344   */\n      gt\n        /* \"#utility.yul\":18330:18776   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":18375:18413   */\n      tag_581\n        /* \"#utility.yul\":18407:18412   */\n      dup2\n        /* \"#utility.yul\":18375:18413   */\n      tag_351\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":18459:18488   */\n      tag_582\n        /* \"#utility.yul\":18477:18487   */\n      dup5\n        /* \"#utility.yul\":18459:18488   */\n      tag_352\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18449:18457   */\n      dup2\n        /* \"#utility.yul\":18445:18489   */\n      add\n        /* \"#utility.yul\":18642:18644   */\n      0x20\n        /* \"#utility.yul\":18630:18640   */\n      dup6\n        /* \"#utility.yul\":18627:18645   */\n      lt\n        /* \"#utility.yul\":18624:18673   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":18663:18671   */\n      dup2\n        /* \"#utility.yul\":18648:18671   */\n      swap1\n      pop\n        /* \"#utility.yul\":18624:18673   */\n    tag_583:\n        /* \"#utility.yul\":18686:18766   */\n      tag_584\n        /* \"#utility.yul\":18742:18764   */\n      tag_585\n        /* \"#utility.yul\":18760:18763   */\n      dup6\n        /* \"#utility.yul\":18742:18764   */\n      tag_352\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":18732:18740   */\n      dup4\n        /* \"#utility.yul\":18728:18765   */\n      add\n        /* \"#utility.yul\":18715:18726   */\n      dup3\n        /* \"#utility.yul\":18686:18766   */\n      tag_361\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18345:18776   */\n      pop\n      pop\n        /* \"#utility.yul\":18330:18776   */\n    tag_580:\n        /* \"#utility.yul\":18240:18783   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18789:18906   */\n    tag_363:\n        /* \"#utility.yul\":18843:18851   */\n      0x00\n        /* \"#utility.yul\":18893:18898   */\n      dup3\n        /* \"#utility.yul\":18887:18891   */\n      dup3\n        /* \"#utility.yul\":18883:18899   */\n      shr\n        /* \"#utility.yul\":18862:18899   */\n      swap1\n      pop\n        /* \"#utility.yul\":18789:18906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18912:19081   */\n    tag_364:\n        /* \"#utility.yul\":18956:18962   */\n      0x00\n        /* \"#utility.yul\":18989:19040   */\n      tag_588\n        /* \"#utility.yul\":19037:19038   */\n      0x00\n        /* \"#utility.yul\":19033:19039   */\n      not\n        /* \"#utility.yul\":19025:19030   */\n      dup5\n        /* \"#utility.yul\":19022:19023   */\n      0x08\n        /* \"#utility.yul\":19018:19031   */\n      mul\n        /* \"#utility.yul\":18989:19040   */\n      tag_363\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":18985:19041   */\n      not\n        /* \"#utility.yul\":19070:19074   */\n      dup1\n        /* \"#utility.yul\":19064:19068   */\n      dup4\n        /* \"#utility.yul\":19060:19075   */\n      and\n        /* \"#utility.yul\":19050:19075   */\n      swap2\n      pop\n        /* \"#utility.yul\":18963:19081   */\n      pop\n        /* \"#utility.yul\":18912:19081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19086:19381   */\n    tag_365:\n        /* \"#utility.yul\":19162:19166   */\n      0x00\n        /* \"#utility.yul\":19308:19337   */\n      tag_590\n        /* \"#utility.yul\":19333:19336   */\n      dup4\n        /* \"#utility.yul\":19327:19331   */\n      dup4\n        /* \"#utility.yul\":19308:19337   */\n      tag_364\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19300:19337   */\n      swap2\n      pop\n        /* \"#utility.yul\":19370:19373   */\n      dup3\n        /* \"#utility.yul\":19367:19368   */\n      0x02\n        /* \"#utility.yul\":19363:19374   */\n      mul\n        /* \"#utility.yul\":19357:19361   */\n      dup3\n        /* \"#utility.yul\":19354:19375   */\n      or\n        /* \"#utility.yul\":19346:19375   */\n      swap1\n      pop\n        /* \"#utility.yul\":19086:19381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19386:20781   */\n    tag_169:\n        /* \"#utility.yul\":19503:19540   */\n      tag_592\n        /* \"#utility.yul\":19536:19539   */\n      dup3\n        /* \"#utility.yul\":19503:19540   */\n      tag_303\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19605:19623   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19597:19603   */\n      dup2\n        /* \"#utility.yul\":19594:19624   */\n      gt\n        /* \"#utility.yul\":19591:19647   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":19627:19645   */\n      tag_594\n      tag_325\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":19591:19647   */\n    tag_593:\n        /* \"#utility.yul\":19671:19709   */\n      tag_595\n        /* \"#utility.yul\":19703:19707   */\n      dup3\n        /* \"#utility.yul\":19697:19708   */\n      sload\n        /* \"#utility.yul\":19671:19709   */\n      tag_129\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19756:19823   */\n      tag_596\n        /* \"#utility.yul\":19816:19822   */\n      dup3\n        /* \"#utility.yul\":19808:19814   */\n      dup3\n        /* \"#utility.yul\":19802:19806   */\n      dup6\n        /* \"#utility.yul\":19756:19823   */\n      tag_362\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19850:19851   */\n      0x00\n        /* \"#utility.yul\":19874:19878   */\n      0x20\n        /* \"#utility.yul\":19861:19878   */\n      swap1\n      pop\n        /* \"#utility.yul\":19906:19908   */\n      0x1f\n        /* \"#utility.yul\":19898:19904   */\n      dup4\n        /* \"#utility.yul\":19895:19909   */\n      gt\n        /* \"#utility.yul\":19923:19924   */\n      0x01\n        /* \"#utility.yul\":19918:20536   */\n      dup2\n      eq\n      tag_598\n      jumpi\n        /* \"#utility.yul\":20580:20581   */\n      0x00\n        /* \"#utility.yul\":20597:20603   */\n      dup5\n        /* \"#utility.yul\":20594:20671   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":20646:20655   */\n      dup3\n        /* \"#utility.yul\":20641:20644   */\n      dup8\n        /* \"#utility.yul\":20637:20656   */\n      add\n        /* \"#utility.yul\":20631:20657   */\n      mload\n        /* \"#utility.yul\":20622:20657   */\n      swap1\n      pop\n        /* \"#utility.yul\":20594:20671   */\n    tag_599:\n        /* \"#utility.yul\":20697:20764   */\n      tag_600\n        /* \"#utility.yul\":20757:20763   */\n      dup6\n        /* \"#utility.yul\":20750:20755   */\n      dup3\n        /* \"#utility.yul\":20697:20764   */\n      tag_365\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":20691:20695   */\n      dup7\n        /* \"#utility.yul\":20684:20765   */\n      sstore\n        /* \"#utility.yul\":20553:20775   */\n      pop\n        /* \"#utility.yul\":19888:20775   */\n      jump(tag_597)\n        /* \"#utility.yul\":19918:20536   */\n    tag_598:\n        /* \"#utility.yul\":19970:19974   */\n      0x1f\n        /* \"#utility.yul\":19966:19975   */\n      not\n        /* \"#utility.yul\":19958:19964   */\n      dup5\n        /* \"#utility.yul\":19954:19976   */\n      and\n        /* \"#utility.yul\":20004:20041   */\n      tag_601\n        /* \"#utility.yul\":20036:20040   */\n      dup7\n        /* \"#utility.yul\":20004:20041   */\n      tag_351\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":20063:20064   */\n      0x00\n        /* \"#utility.yul\":20077:20285   */\n    tag_602:\n        /* \"#utility.yul\":20091:20098   */\n      dup3\n        /* \"#utility.yul\":20088:20089   */\n      dup2\n        /* \"#utility.yul\":20085:20099   */\n      lt\n        /* \"#utility.yul\":20077:20285   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":20170:20179   */\n      dup5\n        /* \"#utility.yul\":20165:20168   */\n      dup10\n        /* \"#utility.yul\":20161:20180   */\n      add\n        /* \"#utility.yul\":20155:20181   */\n      mload\n        /* \"#utility.yul\":20147:20153   */\n      dup3\n        /* \"#utility.yul\":20140:20182   */\n      sstore\n        /* \"#utility.yul\":20221:20222   */\n      0x01\n        /* \"#utility.yul\":20213:20219   */\n      dup3\n        /* \"#utility.yul\":20209:20223   */\n      add\n        /* \"#utility.yul\":20199:20223   */\n      swap2\n      pop\n        /* \"#utility.yul\":20268:20270   */\n      0x20\n        /* \"#utility.yul\":20257:20266   */\n      dup6\n        /* \"#utility.yul\":20253:20271   */\n      add\n        /* \"#utility.yul\":20240:20271   */\n      swap5\n      pop\n        /* \"#utility.yul\":20114:20118   */\n      0x20\n        /* \"#utility.yul\":20111:20112   */\n      dup2\n        /* \"#utility.yul\":20107:20119   */\n      add\n        /* \"#utility.yul\":20102:20119   */\n      swap1\n      pop\n        /* \"#utility.yul\":20077:20285   */\n      jump(tag_602)\n    tag_604:\n        /* \"#utility.yul\":20313:20319   */\n      dup7\n        /* \"#utility.yul\":20304:20311   */\n      dup4\n        /* \"#utility.yul\":20301:20320   */\n      lt\n        /* \"#utility.yul\":20298:20477   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":20371:20380   */\n      dup5\n        /* \"#utility.yul\":20366:20369   */\n      dup10\n        /* \"#utility.yul\":20362:20381   */\n      add\n        /* \"#utility.yul\":20356:20382   */\n      mload\n        /* \"#utility.yul\":20414:20462   */\n      tag_606\n        /* \"#utility.yul\":20456:20460   */\n      0x1f\n        /* \"#utility.yul\":20448:20454   */\n      dup10\n        /* \"#utility.yul\":20444:20461   */\n      and\n        /* \"#utility.yul\":20433:20442   */\n      dup3\n        /* \"#utility.yul\":20414:20462   */\n      tag_364\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":20406:20412   */\n      dup4\n        /* \"#utility.yul\":20399:20463   */\n      sstore\n        /* \"#utility.yul\":20321:20477   */\n      pop\n        /* \"#utility.yul\":20298:20477   */\n    tag_605:\n        /* \"#utility.yul\":20523:20524   */\n      0x01\n        /* \"#utility.yul\":20519:20520   */\n      0x02\n        /* \"#utility.yul\":20511:20517   */\n      dup9\n        /* \"#utility.yul\":20507:20521   */\n      mul\n        /* \"#utility.yul\":20503:20525   */\n      add\n        /* \"#utility.yul\":20497:20501   */\n      dup9\n        /* \"#utility.yul\":20490:20526   */\n      sstore\n        /* \"#utility.yul\":19925:20536   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19888:20775   */\n    tag_597:\n      pop\n        /* \"#utility.yul\":19478:20781   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19386:20781   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20787:20967   */\n    tag_366:\n        /* \"#utility.yul\":20835:20912   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20832:20833   */\n      0x00\n        /* \"#utility.yul\":20825:20913   */\n      mstore\n        /* \"#utility.yul\":20932:20936   */\n      0x11\n        /* \"#utility.yul\":20929:20930   */\n      0x04\n        /* \"#utility.yul\":20922:20937   */\n      mstore\n        /* \"#utility.yul\":20956:20960   */\n      0x24\n        /* \"#utility.yul\":20953:20954   */\n      0x00\n        /* \"#utility.yul\":20946:20961   */\n      revert\n        /* \"#utility.yul\":20973:21140   */\n    tag_171:\n        /* \"#utility.yul\":21010:21013   */\n      0x00\n        /* \"#utility.yul\":21033:21055   */\n      tag_609\n        /* \"#utility.yul\":21049:21054   */\n      dup3\n        /* \"#utility.yul\":21033:21055   */\n      tag_321\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":21024:21055   */\n      swap2\n      pop\n        /* \"#utility.yul\":21077:21081   */\n      0xff\n        /* \"#utility.yul\":21070:21075   */\n      dup3\n        /* \"#utility.yul\":21067:21082   */\n      sub\n        /* \"#utility.yul\":21064:21105   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":21085:21103   */\n      tag_611\n      tag_366\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":21064:21105   */\n    tag_610:\n        /* \"#utility.yul\":21132:21133   */\n      0x01\n        /* \"#utility.yul\":21125:21130   */\n      dup3\n        /* \"#utility.yul\":21121:21134   */\n      add\n        /* \"#utility.yul\":21114:21134   */\n      swap1\n      pop\n        /* \"#utility.yul\":20973:21140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21146:21315   */\n    tag_367:\n        /* \"#utility.yul\":21286:21307   */\n      0x496e73756666696369656e7420616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":21282:21283   */\n      0x00\n        /* \"#utility.yul\":21274:21280   */\n      dup3\n        /* \"#utility.yul\":21270:21284   */\n      add\n        /* \"#utility.yul\":21263:21308   */\n      mstore\n        /* \"#utility.yul\":21146:21315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21321:21687   */\n    tag_368:\n        /* \"#utility.yul\":21463:21466   */\n      0x00\n        /* \"#utility.yul\":21484:21551   */\n      tag_614\n        /* \"#utility.yul\":21548:21550   */\n      0x13\n        /* \"#utility.yul\":21543:21546   */\n      dup4\n        /* \"#utility.yul\":21484:21551   */\n      tag_304\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":21477:21551   */\n      swap2\n      pop\n        /* \"#utility.yul\":21560:21653   */\n      tag_615\n        /* \"#utility.yul\":21649:21652   */\n      dup3\n        /* \"#utility.yul\":21560:21653   */\n      tag_367\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":21678:21680   */\n      0x20\n        /* \"#utility.yul\":21673:21676   */\n      dup3\n        /* \"#utility.yul\":21669:21681   */\n      add\n        /* \"#utility.yul\":21662:21681   */\n      swap1\n      pop\n        /* \"#utility.yul\":21321:21687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21693:22112   */\n    tag_186:\n        /* \"#utility.yul\":21859:21863   */\n      0x00\n        /* \"#utility.yul\":21897:21899   */\n      0x20\n        /* \"#utility.yul\":21886:21895   */\n      dup3\n        /* \"#utility.yul\":21882:21900   */\n      add\n        /* \"#utility.yul\":21874:21900   */\n      swap1\n      pop\n        /* \"#utility.yul\":21946:21955   */\n      dup2\n        /* \"#utility.yul\":21940:21944   */\n      dup2\n        /* \"#utility.yul\":21936:21956   */\n      sub\n        /* \"#utility.yul\":21932:21933   */\n      0x00\n        /* \"#utility.yul\":21921:21930   */\n      dup4\n        /* \"#utility.yul\":21917:21934   */\n      add\n        /* \"#utility.yul\":21910:21957   */\n      mstore\n        /* \"#utility.yul\":21974:22105   */\n      tag_617\n        /* \"#utility.yul\":22100:22104   */\n      dup2\n        /* \"#utility.yul\":21974:22105   */\n      tag_368\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":21966:22105   */\n      swap1\n      pop\n        /* \"#utility.yul\":21693:22112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22118:22282   */\n    tag_369:\n        /* \"#utility.yul\":22258:22274   */\n      0x4974656d206e6f7420666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":22254:22255   */\n      0x00\n        /* \"#utility.yul\":22246:22252   */\n      dup3\n        /* \"#utility.yul\":22242:22256   */\n      add\n        /* \"#utility.yul\":22235:22275   */\n      mstore\n        /* \"#utility.yul\":22118:22282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22288:22654   */\n    tag_370:\n        /* \"#utility.yul\":22430:22433   */\n      0x00\n        /* \"#utility.yul\":22451:22518   */\n      tag_620\n        /* \"#utility.yul\":22515:22517   */\n      0x0e\n        /* \"#utility.yul\":22510:22513   */\n      dup4\n        /* \"#utility.yul\":22451:22518   */\n      tag_304\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":22444:22518   */\n      swap2\n      pop\n        /* \"#utility.yul\":22527:22620   */\n      tag_621\n        /* \"#utility.yul\":22616:22619   */\n      dup3\n        /* \"#utility.yul\":22527:22620   */\n      tag_369\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":22645:22647   */\n      0x20\n        /* \"#utility.yul\":22640:22643   */\n      dup3\n        /* \"#utility.yul\":22636:22648   */\n      add\n        /* \"#utility.yul\":22629:22648   */\n      swap1\n      pop\n        /* \"#utility.yul\":22288:22654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22660:23079   */\n    tag_201:\n        /* \"#utility.yul\":22826:22830   */\n      0x00\n        /* \"#utility.yul\":22864:22866   */\n      0x20\n        /* \"#utility.yul\":22853:22862   */\n      dup3\n        /* \"#utility.yul\":22849:22867   */\n      add\n        /* \"#utility.yul\":22841:22867   */\n      swap1\n      pop\n        /* \"#utility.yul\":22913:22922   */\n      dup2\n        /* \"#utility.yul\":22907:22911   */\n      dup2\n        /* \"#utility.yul\":22903:22923   */\n      sub\n        /* \"#utility.yul\":22899:22900   */\n      0x00\n        /* \"#utility.yul\":22888:22897   */\n      dup4\n        /* \"#utility.yul\":22884:22901   */\n      add\n        /* \"#utility.yul\":22877:22924   */\n      mstore\n        /* \"#utility.yul\":22941:23072   */\n      tag_623\n        /* \"#utility.yul\":23067:23071   */\n      dup2\n        /* \"#utility.yul\":22941:23072   */\n      tag_370\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":22933:23072   */\n      swap1\n      pop\n        /* \"#utility.yul\":22660:23079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23085:23234   */\n    tag_371:\n        /* \"#utility.yul\":23134:23140   */\n      0x00\n        /* \"#utility.yul\":23168:23173   */\n      dup2\n        /* \"#utility.yul\":23162:23174   */\n      sload\n        /* \"#utility.yul\":23152:23174   */\n      swap1\n      pop\n        /* \"#utility.yul\":23194:23227   */\n      tag_625\n        /* \"#utility.yul\":23220:23226   */\n      dup2\n        /* \"#utility.yul\":23194:23227   */\n      tag_129\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":23184:23227   */\n      swap1\n      pop\n        /* \"#utility.yul\":23085:23234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23240:24691   */\n    tag_208:\n        /* \"#utility.yul\":23351:23354   */\n      dup2\n        /* \"#utility.yul\":23345:23349   */\n      dup2\n        /* \"#utility.yul\":23342:23355   */\n      sub\n        /* \"#utility.yul\":23339:23365   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":23358:23363   */\n      pop\n      pop\n      jump(tag_626)\n        /* \"#utility.yul\":23339:23365   */\n    tag_627:\n        /* \"#utility.yul\":23389:23423   */\n      tag_628\n        /* \"#utility.yul\":23419:23422   */\n      dup3\n        /* \"#utility.yul\":23389:23423   */\n      tag_371\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":23488:23506   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23480:23486   */\n      dup2\n        /* \"#utility.yul\":23477:23507   */\n      gt\n        /* \"#utility.yul\":23474:23530   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":23510:23528   */\n      tag_630\n      tag_325\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":23474:23530   */\n    tag_629:\n        /* \"#utility.yul\":23554:23592   */\n      tag_631\n        /* \"#utility.yul\":23586:23590   */\n      dup3\n        /* \"#utility.yul\":23580:23591   */\n      sload\n        /* \"#utility.yul\":23554:23592   */\n      tag_129\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":23639:23706   */\n      tag_632\n        /* \"#utility.yul\":23699:23705   */\n      dup3\n        /* \"#utility.yul\":23691:23697   */\n      dup3\n        /* \"#utility.yul\":23685:23689   */\n      dup6\n        /* \"#utility.yul\":23639:23706   */\n      tag_362\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":23733:23734   */\n      0x00\n        /* \"#utility.yul\":23762:23764   */\n      0x1f\n        /* \"#utility.yul\":23754:23760   */\n      dup4\n        /* \"#utility.yul\":23751:23765   */\n      gt\n        /* \"#utility.yul\":23779:23780   */\n      0x01\n        /* \"#utility.yul\":23774:24446   */\n      dup2\n      eq\n      tag_634\n      jumpi\n        /* \"#utility.yul\":24490:24491   */\n      0x00\n        /* \"#utility.yul\":24507:24513   */\n      dup5\n        /* \"#utility.yul\":24504:24581   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":24556:24565   */\n      dup3\n        /* \"#utility.yul\":24551:24554   */\n      dup8\n        /* \"#utility.yul\":24547:24566   */\n      add\n        /* \"#utility.yul\":24541:24567   */\n      sload\n        /* \"#utility.yul\":24532:24567   */\n      swap1\n      pop\n        /* \"#utility.yul\":24504:24581   */\n    tag_635:\n        /* \"#utility.yul\":24607:24674   */\n      tag_636\n        /* \"#utility.yul\":24667:24673   */\n      dup6\n        /* \"#utility.yul\":24660:24665   */\n      dup3\n        /* \"#utility.yul\":24607:24674   */\n      tag_365\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":24601:24605   */\n      dup7\n        /* \"#utility.yul\":24594:24675   */\n      sstore\n        /* \"#utility.yul\":24463:24685   */\n      pop\n        /* \"#utility.yul\":23744:24685   */\n      jump(tag_633)\n        /* \"#utility.yul\":23774:24446   */\n    tag_634:\n        /* \"#utility.yul\":23826:23830   */\n      0x1f\n        /* \"#utility.yul\":23822:23831   */\n      not\n        /* \"#utility.yul\":23814:23820   */\n      dup5\n        /* \"#utility.yul\":23810:23832   */\n      and\n        /* \"#utility.yul\":23852:23888   */\n      tag_637\n        /* \"#utility.yul\":23884:23887   */\n      dup8\n        /* \"#utility.yul\":23852:23888   */\n      tag_351\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":23845:23888   */\n      swap7\n      pop\n        /* \"#utility.yul\":23915:23952   */\n      tag_638\n        /* \"#utility.yul\":23947:23951   */\n      dup7\n        /* \"#utility.yul\":23915:23952   */\n      tag_351\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":23974:23975   */\n      0x00\n        /* \"#utility.yul\":23988:24195   */\n    tag_639:\n        /* \"#utility.yul\":24002:24009   */\n      dup3\n        /* \"#utility.yul\":23999:24000   */\n      dup2\n        /* \"#utility.yul\":23996:24010   */\n      lt\n        /* \"#utility.yul\":23988:24195   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":24081:24090   */\n      dup5\n        /* \"#utility.yul\":24076:24079   */\n      dup10\n        /* \"#utility.yul\":24072:24091   */\n      add\n        /* \"#utility.yul\":24066:24092   */\n      sload\n        /* \"#utility.yul\":24058:24064   */\n      dup3\n        /* \"#utility.yul\":24051:24093   */\n      sstore\n        /* \"#utility.yul\":24132:24133   */\n      0x01\n        /* \"#utility.yul\":24124:24130   */\n      dup3\n        /* \"#utility.yul\":24120:24134   */\n      add\n        /* \"#utility.yul\":24110:24134   */\n      swap2\n      pop\n        /* \"#utility.yul\":24179:24180   */\n      0x01\n        /* \"#utility.yul\":24168:24177   */\n      dup6\n        /* \"#utility.yul\":24164:24181   */\n      add\n        /* \"#utility.yul\":24151:24181   */\n      swap5\n      pop\n        /* \"#utility.yul\":24025:24029   */\n      0x20\n        /* \"#utility.yul\":24022:24023   */\n      dup2\n        /* \"#utility.yul\":24018:24030   */\n      add\n        /* \"#utility.yul\":24013:24030   */\n      swap1\n      pop\n        /* \"#utility.yul\":23988:24195   */\n      jump(tag_639)\n    tag_641:\n        /* \"#utility.yul\":24223:24229   */\n      dup7\n        /* \"#utility.yul\":24214:24221   */\n      dup4\n        /* \"#utility.yul\":24211:24230   */\n      lt\n        /* \"#utility.yul\":24208:24387   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":24281:24290   */\n      dup5\n        /* \"#utility.yul\":24276:24279   */\n      dup10\n        /* \"#utility.yul\":24272:24291   */\n      add\n        /* \"#utility.yul\":24266:24292   */\n      sload\n        /* \"#utility.yul\":24324:24372   */\n      tag_643\n        /* \"#utility.yul\":24366:24370   */\n      0x1f\n        /* \"#utility.yul\":24358:24364   */\n      dup10\n        /* \"#utility.yul\":24354:24371   */\n      and\n        /* \"#utility.yul\":24343:24352   */\n      dup3\n        /* \"#utility.yul\":24324:24372   */\n      tag_364\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":24316:24322   */\n      dup4\n        /* \"#utility.yul\":24309:24373   */\n      sstore\n        /* \"#utility.yul\":24231:24387   */\n      pop\n        /* \"#utility.yul\":24208:24387   */\n    tag_642:\n        /* \"#utility.yul\":24433:24434   */\n      0x01\n        /* \"#utility.yul\":24429:24430   */\n      0x02\n        /* \"#utility.yul\":24421:24427   */\n      dup9\n        /* \"#utility.yul\":24417:24431   */\n      mul\n        /* \"#utility.yul\":24413:24435   */\n      add\n        /* \"#utility.yul\":24407:24411   */\n      dup9\n        /* \"#utility.yul\":24400:24436   */\n      sstore\n        /* \"#utility.yul\":23781:24446   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23744:24685   */\n    tag_633:\n      pop\n        /* \"#utility.yul\":23329:24691   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23240:24691   */\n      pop\n      pop\n    tag_626:\n      jump\t// out\n        /* \"#utility.yul\":24721:25552   */\n    tag_372:\n        /* \"#utility.yul\":24806:24809   */\n      0x00\n        /* \"#utility.yul\":24843:24848   */\n      dup2\n        /* \"#utility.yul\":24837:24849   */\n      sload\n        /* \"#utility.yul\":24872:24908   */\n      tag_645\n        /* \"#utility.yul\":24898:24907   */\n      dup2\n        /* \"#utility.yul\":24872:24908   */\n      tag_129\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":24924:24995   */\n      tag_646\n        /* \"#utility.yul\":24988:24994   */\n      dup2\n        /* \"#utility.yul\":24983:24986   */\n      dup7\n        /* \"#utility.yul\":24924:24995   */\n      tag_304\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":24917:24995   */\n      swap5\n      pop\n        /* \"#utility.yul\":25026:25027   */\n      0x01\n        /* \"#utility.yul\":25015:25024   */\n      dup3\n        /* \"#utility.yul\":25011:25028   */\n      and\n        /* \"#utility.yul\":25042:25043   */\n      0x00\n        /* \"#utility.yul\":25037:25201   */\n      dup2\n      eq\n      tag_648\n      jumpi\n        /* \"#utility.yul\":25215:25216   */\n      0x01\n        /* \"#utility.yul\":25210:25546   */\n      dup2\n      eq\n      tag_649\n      jumpi\n        /* \"#utility.yul\":25004:25546   */\n      jump(tag_647)\n        /* \"#utility.yul\":25037:25201   */\n    tag_648:\n        /* \"#utility.yul\":25121:25125   */\n      0xff\n        /* \"#utility.yul\":25117:25126   */\n      not\n        /* \"#utility.yul\":25106:25115   */\n      dup4\n        /* \"#utility.yul\":25102:25127   */\n      and\n        /* \"#utility.yul\":25097:25100   */\n      dup7\n        /* \"#utility.yul\":25090:25128   */\n      mstore\n        /* \"#utility.yul\":25181:25187   */\n      dup2\n        /* \"#utility.yul\":25174:25188   */\n      iszero\n        /* \"#utility.yul\":25167:25189   */\n      iszero\n        /* \"#utility.yul\":25161:25165   */\n      0x20\n        /* \"#utility.yul\":25157:25190   */\n      mul\n        /* \"#utility.yul\":25152:25155   */\n      dup7\n        /* \"#utility.yul\":25148:25191   */\n      add\n        /* \"#utility.yul\":25141:25191   */\n      swap4\n      pop\n        /* \"#utility.yul\":25037:25201   */\n      jump(tag_647)\n        /* \"#utility.yul\":25210:25546   */\n    tag_649:\n        /* \"#utility.yul\":25277:25315   */\n      tag_650\n        /* \"#utility.yul\":25309:25314   */\n      dup6\n        /* \"#utility.yul\":25277:25315   */\n      tag_351\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":25337:25338   */\n      0x00\n        /* \"#utility.yul\":25351:25505   */\n    tag_651:\n        /* \"#utility.yul\":25365:25371   */\n      dup4\n        /* \"#utility.yul\":25362:25363   */\n      dup2\n        /* \"#utility.yul\":25359:25372   */\n      lt\n        /* \"#utility.yul\":25351:25505   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":25439:25446   */\n      dup2\n        /* \"#utility.yul\":25433:25447   */\n      sload\n        /* \"#utility.yul\":25429:25430   */\n      dup2\n        /* \"#utility.yul\":25424:25427   */\n      dup10\n        /* \"#utility.yul\":25420:25431   */\n      add\n        /* \"#utility.yul\":25413:25448   */\n      mstore\n        /* \"#utility.yul\":25489:25490   */\n      0x01\n        /* \"#utility.yul\":25480:25487   */\n      dup3\n        /* \"#utility.yul\":25476:25491   */\n      add\n        /* \"#utility.yul\":25465:25491   */\n      swap2\n      pop\n        /* \"#utility.yul\":25387:25391   */\n      0x20\n        /* \"#utility.yul\":25384:25385   */\n      dup2\n        /* \"#utility.yul\":25380:25392   */\n      add\n        /* \"#utility.yul\":25375:25392   */\n      swap1\n      pop\n        /* \"#utility.yul\":25351:25505   */\n      jump(tag_651)\n    tag_653:\n        /* \"#utility.yul\":25534:25535   */\n      dup1\n        /* \"#utility.yul\":25529:25532   */\n      dup9\n        /* \"#utility.yul\":25525:25536   */\n      add\n        /* \"#utility.yul\":25518:25536   */\n      swap6\n      pop\n        /* \"#utility.yul\":25217:25546   */\n      pop\n      pop\n        /* \"#utility.yul\":25004:25546   */\n    tag_647:\n      pop\n        /* \"#utility.yul\":24810:25552   */\n      pop\n      pop\n        /* \"#utility.yul\":24721:25552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25558:26077   */\n    tag_210:\n        /* \"#utility.yul\":25720:25724   */\n      0x00\n        /* \"#utility.yul\":25758:25760   */\n      0x60\n        /* \"#utility.yul\":25747:25756   */\n      dup3\n        /* \"#utility.yul\":25743:25761   */\n      add\n        /* \"#utility.yul\":25735:25761   */\n      swap1\n      pop\n        /* \"#utility.yul\":25771:25838   */\n      tag_655\n        /* \"#utility.yul\":25835:25836   */\n      0x00\n        /* \"#utility.yul\":25824:25833   */\n      dup4\n        /* \"#utility.yul\":25820:25837   */\n      add\n        /* \"#utility.yul\":25811:25817   */\n      dup7\n        /* \"#utility.yul\":25771:25838   */\n      tag_322\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":25885:25894   */\n      dup2\n        /* \"#utility.yul\":25879:25883   */\n      dup2\n        /* \"#utility.yul\":25875:25895   */\n      sub\n        /* \"#utility.yul\":25870:25872   */\n      0x20\n        /* \"#utility.yul\":25859:25868   */\n      dup4\n        /* \"#utility.yul\":25855:25873   */\n      add\n        /* \"#utility.yul\":25848:25896   */\n      mstore\n        /* \"#utility.yul\":25913:25988   */\n      tag_656\n        /* \"#utility.yul\":25983:25987   */\n      dup2\n        /* \"#utility.yul\":25974:25980   */\n      dup6\n        /* \"#utility.yul\":25913:25988   */\n      tag_372\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":25905:25988   */\n      swap1\n      pop\n        /* \"#utility.yul\":25998:26070   */\n      tag_657\n        /* \"#utility.yul\":26066:26068   */\n      0x40\n        /* \"#utility.yul\":26055:26064   */\n      dup4\n        /* \"#utility.yul\":26051:26069   */\n      add\n        /* \"#utility.yul\":26042:26048   */\n      dup5\n        /* \"#utility.yul\":25998:26070   */\n      tag_320\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":25558:26077   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26083:26162   */\n    tag_373:\n        /* \"#utility.yul\":26122:26129   */\n      0x00\n        /* \"#utility.yul\":26151:26156   */\n      dup2\n        /* \"#utility.yul\":26140:26156   */\n      swap1\n      pop\n        /* \"#utility.yul\":26083:26162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26168:26325   */\n    tag_374:\n        /* \"#utility.yul\":26273:26318   */\n      tag_660\n        /* \"#utility.yul\":26293:26317   */\n      tag_661\n        /* \"#utility.yul\":26311:26316   */\n      dup3\n        /* \"#utility.yul\":26293:26317   */\n      tag_315\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":26273:26318   */\n      tag_373\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":26268:26271   */\n      dup3\n        /* \"#utility.yul\":26261:26319   */\n      mstore\n        /* \"#utility.yul\":26168:26325   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26331:26425   */\n    tag_375:\n        /* \"#utility.yul\":26364:26372   */\n      0x00\n        /* \"#utility.yul\":26412:26417   */\n      dup2\n        /* \"#utility.yul\":26408:26410   */\n      0x60\n        /* \"#utility.yul\":26404:26418   */\n      shl\n        /* \"#utility.yul\":26383:26418   */\n      swap1\n      pop\n        /* \"#utility.yul\":26331:26425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26431:26525   */\n    tag_376:\n        /* \"#utility.yul\":26470:26477   */\n      0x00\n        /* \"#utility.yul\":26499:26519   */\n      tag_664\n        /* \"#utility.yul\":26513:26518   */\n      dup3\n        /* \"#utility.yul\":26499:26519   */\n      tag_375\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":26488:26519   */\n      swap1\n      pop\n        /* \"#utility.yul\":26431:26525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26531:26631   */\n    tag_377:\n        /* \"#utility.yul\":26570:26577   */\n      0x00\n        /* \"#utility.yul\":26599:26625   */\n      tag_666\n        /* \"#utility.yul\":26619:26624   */\n      dup3\n        /* \"#utility.yul\":26599:26625   */\n      tag_376\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":26588:26625   */\n      swap1\n      pop\n        /* \"#utility.yul\":26531:26631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26637:26794   */\n    tag_378:\n        /* \"#utility.yul\":26742:26787   */\n      tag_668\n        /* \"#utility.yul\":26762:26786   */\n      tag_669\n        /* \"#utility.yul\":26780:26785   */\n      dup3\n        /* \"#utility.yul\":26762:26786   */\n      tag_312\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":26742:26787   */\n      tag_377\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":26737:26740   */\n      dup3\n        /* \"#utility.yul\":26730:26788   */\n      mstore\n        /* \"#utility.yul\":26637:26794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26800:27197   */\n    tag_223:\n        /* \"#utility.yul\":26940:26943   */\n      0x00\n        /* \"#utility.yul\":26955:27030   */\n      tag_671\n        /* \"#utility.yul\":27026:27029   */\n      dup3\n        /* \"#utility.yul\":27017:27023   */\n      dup6\n        /* \"#utility.yul\":26955:27030   */\n      tag_374\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":27055:27057   */\n      0x20\n        /* \"#utility.yul\":27050:27053   */\n      dup3\n        /* \"#utility.yul\":27046:27058   */\n      add\n        /* \"#utility.yul\":27039:27058   */\n      swap2\n      pop\n        /* \"#utility.yul\":27068:27143   */\n      tag_672\n        /* \"#utility.yul\":27139:27142   */\n      dup3\n        /* \"#utility.yul\":27130:27136   */\n      dup5\n        /* \"#utility.yul\":27068:27143   */\n      tag_378\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":27168:27170   */\n      0x14\n        /* \"#utility.yul\":27163:27166   */\n      dup3\n        /* \"#utility.yul\":27159:27171   */\n      add\n        /* \"#utility.yul\":27152:27171   */\n      swap2\n      pop\n        /* \"#utility.yul\":27188:27191   */\n      dup2\n        /* \"#utility.yul\":27181:27191   */\n      swap1\n      pop\n        /* \"#utility.yul\":26800:27197   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27203:27383   */\n    tag_379:\n        /* \"#utility.yul\":27251:27328   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27248:27249   */\n      0x00\n        /* \"#utility.yul\":27241:27329   */\n      mstore\n        /* \"#utility.yul\":27348:27352   */\n      0x12\n        /* \"#utility.yul\":27345:27346   */\n      0x04\n        /* \"#utility.yul\":27338:27353   */\n      mstore\n        /* \"#utility.yul\":27372:27376   */\n      0x24\n        /* \"#utility.yul\":27369:27370   */\n      0x00\n        /* \"#utility.yul\":27362:27377   */\n      revert\n        /* \"#utility.yul\":27389:27565   */\n    tag_225:\n        /* \"#utility.yul\":27421:27422   */\n      0x00\n        /* \"#utility.yul\":27438:27458   */\n      tag_675\n        /* \"#utility.yul\":27456:27457   */\n      dup3\n        /* \"#utility.yul\":27438:27458   */\n      tag_315\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":27433:27458   */\n      swap2\n      pop\n        /* \"#utility.yul\":27472:27492   */\n      tag_676\n        /* \"#utility.yul\":27490:27491   */\n      dup4\n        /* \"#utility.yul\":27472:27492   */\n      tag_315\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":27467:27492   */\n      swap3\n      pop\n        /* \"#utility.yul\":27511:27512   */\n      dup3\n        /* \"#utility.yul\":27501:27536   */\n      tag_677\n      jumpi\n        /* \"#utility.yul\":27516:27534   */\n      tag_678\n      tag_379\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":27501:27536   */\n    tag_677:\n        /* \"#utility.yul\":27557:27558   */\n      dup3\n        /* \"#utility.yul\":27554:27555   */\n      dup3\n        /* \"#utility.yul\":27550:27559   */\n      mod\n        /* \"#utility.yul\":27545:27559   */\n      swap1\n      pop\n        /* \"#utility.yul\":27389:27565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27571:27981   */\n    tag_229:\n        /* \"#utility.yul\":27611:27618   */\n      0x00\n        /* \"#utility.yul\":27634:27654   */\n      tag_680\n        /* \"#utility.yul\":27652:27653   */\n      dup3\n        /* \"#utility.yul\":27634:27654   */\n      tag_315\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":27629:27654   */\n      swap2\n      pop\n        /* \"#utility.yul\":27668:27688   */\n      tag_681\n        /* \"#utility.yul\":27686:27687   */\n      dup4\n        /* \"#utility.yul\":27668:27688   */\n      tag_315\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":27663:27688   */\n      swap3\n      pop\n        /* \"#utility.yul\":27723:27724   */\n      dup3\n        /* \"#utility.yul\":27720:27721   */\n      dup3\n        /* \"#utility.yul\":27716:27725   */\n      mul\n        /* \"#utility.yul\":27745:27775   */\n      tag_682\n        /* \"#utility.yul\":27763:27774   */\n      dup2\n        /* \"#utility.yul\":27745:27775   */\n      tag_315\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":27734:27775   */\n      swap2\n      pop\n        /* \"#utility.yul\":27924:27925   */\n      dup3\n        /* \"#utility.yul\":27915:27922   */\n      dup3\n        /* \"#utility.yul\":27911:27926   */\n      div\n        /* \"#utility.yul\":27908:27909   */\n      dup5\n        /* \"#utility.yul\":27905:27927   */\n      eq\n        /* \"#utility.yul\":27885:27886   */\n      dup4\n        /* \"#utility.yul\":27878:27887   */\n      iszero\n        /* \"#utility.yul\":27858:27941   */\n      or\n        /* \"#utility.yul\":27835:27974   */\n      tag_683\n      jumpi\n        /* \"#utility.yul\":27954:27972   */\n      tag_684\n      tag_366\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":27835:27974   */\n    tag_683:\n        /* \"#utility.yul\":27619:27981   */\n      pop\n        /* \"#utility.yul\":27571:27981   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27987:28140   */\n    tag_380:\n        /* \"#utility.yul\":28127:28132   */\n      0x776f6e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28123:28124   */\n      0x00\n        /* \"#utility.yul\":28115:28121   */\n      dup3\n        /* \"#utility.yul\":28111:28125   */\n      add\n        /* \"#utility.yul\":28104:28133   */\n      mstore\n        /* \"#utility.yul\":27987:28140   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28146:28511   */\n    tag_381:\n        /* \"#utility.yul\":28288:28291   */\n      0x00\n        /* \"#utility.yul\":28309:28375   */\n      tag_687\n        /* \"#utility.yul\":28373:28374   */\n      0x03\n        /* \"#utility.yul\":28368:28371   */\n      dup4\n        /* \"#utility.yul\":28309:28375   */\n      tag_304\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":28302:28375   */\n      swap2\n      pop\n        /* \"#utility.yul\":28384:28477   */\n      tag_688\n        /* \"#utility.yul\":28473:28476   */\n      dup3\n        /* \"#utility.yul\":28384:28477   */\n      tag_380\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":28502:28504   */\n      0x20\n        /* \"#utility.yul\":28497:28500   */\n      dup3\n        /* \"#utility.yul\":28493:28505   */\n      add\n        /* \"#utility.yul\":28486:28505   */\n      swap1\n      pop\n        /* \"#utility.yul\":28146:28511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28517:29144   */\n    tag_231:\n        /* \"#utility.yul\":28733:28737   */\n      0x00\n        /* \"#utility.yul\":28771:28773   */\n      0x60\n        /* \"#utility.yul\":28760:28769   */\n      dup3\n        /* \"#utility.yul\":28756:28774   */\n      add\n        /* \"#utility.yul\":28748:28774   */\n      swap1\n      pop\n        /* \"#utility.yul\":28784:28855   */\n      tag_690\n        /* \"#utility.yul\":28852:28853   */\n      0x00\n        /* \"#utility.yul\":28841:28850   */\n      dup4\n        /* \"#utility.yul\":28837:28854   */\n      add\n        /* \"#utility.yul\":28828:28834   */\n      dup6\n        /* \"#utility.yul\":28784:28855   */\n      tag_320\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":28865:28931   */\n      tag_691\n        /* \"#utility.yul\":28927:28929   */\n      0x20\n        /* \"#utility.yul\":28916:28925   */\n      dup4\n        /* \"#utility.yul\":28912:28930   */\n      add\n        /* \"#utility.yul\":28903:28909   */\n      dup5\n        /* \"#utility.yul\":28865:28931   */\n      tag_319\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":28978:28987   */\n      dup2\n        /* \"#utility.yul\":28972:28976   */\n      dup2\n        /* \"#utility.yul\":28968:28988   */\n      sub\n        /* \"#utility.yul\":28963:28965   */\n      0x40\n        /* \"#utility.yul\":28952:28961   */\n      dup4\n        /* \"#utility.yul\":28948:28966   */\n      add\n        /* \"#utility.yul\":28941:28989   */\n      mstore\n        /* \"#utility.yul\":29006:29137   */\n      tag_692\n        /* \"#utility.yul\":29132:29136   */\n      dup2\n        /* \"#utility.yul\":29006:29137   */\n      tag_381\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":28998:29137   */\n      swap1\n      pop\n        /* \"#utility.yul\":28517:29144   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29150:29304   */\n    tag_382:\n        /* \"#utility.yul\":29290:29296   */\n      0x6c6f737400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29286:29287   */\n      0x00\n        /* \"#utility.yul\":29278:29284   */\n      dup3\n        /* \"#utility.yul\":29274:29288   */\n      add\n        /* \"#utility.yul\":29267:29297   */\n      mstore\n        /* \"#utility.yul\":29150:29304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29310:29675   */\n    tag_383:\n        /* \"#utility.yul\":29452:29455   */\n      0x00\n        /* \"#utility.yul\":29473:29539   */\n      tag_695\n        /* \"#utility.yul\":29537:29538   */\n      0x04\n        /* \"#utility.yul\":29532:29535   */\n      dup4\n        /* \"#utility.yul\":29473:29539   */\n      tag_304\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":29466:29539   */\n      swap2\n      pop\n        /* \"#utility.yul\":29548:29641   */\n      tag_696\n        /* \"#utility.yul\":29637:29640   */\n      dup3\n        /* \"#utility.yul\":29548:29641   */\n      tag_382\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":29666:29668   */\n      0x20\n        /* \"#utility.yul\":29661:29664   */\n      dup3\n        /* \"#utility.yul\":29657:29669   */\n      add\n        /* \"#utility.yul\":29650:29669   */\n      swap1\n      pop\n        /* \"#utility.yul\":29310:29675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29681:30308   */\n    tag_235:\n        /* \"#utility.yul\":29897:29901   */\n      0x00\n        /* \"#utility.yul\":29935:29937   */\n      0x60\n        /* \"#utility.yul\":29924:29933   */\n      dup3\n        /* \"#utility.yul\":29920:29938   */\n      add\n        /* \"#utility.yul\":29912:29938   */\n      swap1\n      pop\n        /* \"#utility.yul\":29948:30019   */\n      tag_698\n        /* \"#utility.yul\":30016:30017   */\n      0x00\n        /* \"#utility.yul\":30005:30014   */\n      dup4\n        /* \"#utility.yul\":30001:30018   */\n      add\n        /* \"#utility.yul\":29992:29998   */\n      dup6\n        /* \"#utility.yul\":29948:30019   */\n      tag_320\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":30029:30095   */\n      tag_699\n        /* \"#utility.yul\":30091:30093   */\n      0x20\n        /* \"#utility.yul\":30080:30089   */\n      dup4\n        /* \"#utility.yul\":30076:30094   */\n      add\n        /* \"#utility.yul\":30067:30073   */\n      dup5\n        /* \"#utility.yul\":30029:30095   */\n      tag_319\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":30142:30151   */\n      dup2\n        /* \"#utility.yul\":30136:30140   */\n      dup2\n        /* \"#utility.yul\":30132:30152   */\n      sub\n        /* \"#utility.yul\":30127:30129   */\n      0x40\n        /* \"#utility.yul\":30116:30125   */\n      dup4\n        /* \"#utility.yul\":30112:30130   */\n      add\n        /* \"#utility.yul\":30105:30153   */\n      mstore\n        /* \"#utility.yul\":30170:30301   */\n      tag_700\n        /* \"#utility.yul\":30296:30300   */\n      dup2\n        /* \"#utility.yul\":30170:30301   */\n      tag_383\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":30162:30301   */\n      swap1\n      pop\n        /* \"#utility.yul\":29681:30308   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30314:30542   */\n    tag_384:\n        /* \"#utility.yul\":30454:30488   */\n      0x596f7527766520616c726561647920636c61696d656420796f75722077656c63\n        /* \"#utility.yul\":30450:30451   */\n      0x00\n        /* \"#utility.yul\":30442:30448   */\n      dup3\n        /* \"#utility.yul\":30438:30452   */\n      add\n        /* \"#utility.yul\":30431:30489   */\n      mstore\n        /* \"#utility.yul\":30523:30534   */\n      0x6f6d6520626f6e75730000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30518:30520   */\n      0x20\n        /* \"#utility.yul\":30510:30516   */\n      dup3\n        /* \"#utility.yul\":30506:30521   */\n      add\n        /* \"#utility.yul\":30499:30535   */\n      mstore\n        /* \"#utility.yul\":30314:30542   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30548:30914   */\n    tag_385:\n        /* \"#utility.yul\":30690:30693   */\n      0x00\n        /* \"#utility.yul\":30711:30778   */\n      tag_703\n        /* \"#utility.yul\":30775:30777   */\n      0x29\n        /* \"#utility.yul\":30770:30773   */\n      dup4\n        /* \"#utility.yul\":30711:30778   */\n      tag_304\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":30704:30778   */\n      swap2\n      pop\n        /* \"#utility.yul\":30787:30880   */\n      tag_704\n        /* \"#utility.yul\":30876:30879   */\n      dup3\n        /* \"#utility.yul\":30787:30880   */\n      tag_384\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":30905:30907   */\n      0x40\n        /* \"#utility.yul\":30900:30903   */\n      dup3\n        /* \"#utility.yul\":30896:30908   */\n      add\n        /* \"#utility.yul\":30889:30908   */\n      swap1\n      pop\n        /* \"#utility.yul\":30548:30914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30920:31339   */\n    tag_246:\n        /* \"#utility.yul\":31086:31090   */\n      0x00\n        /* \"#utility.yul\":31124:31126   */\n      0x20\n        /* \"#utility.yul\":31113:31122   */\n      dup3\n        /* \"#utility.yul\":31109:31127   */\n      add\n        /* \"#utility.yul\":31101:31127   */\n      swap1\n      pop\n        /* \"#utility.yul\":31173:31182   */\n      dup2\n        /* \"#utility.yul\":31167:31171   */\n      dup2\n        /* \"#utility.yul\":31163:31183   */\n      sub\n        /* \"#utility.yul\":31159:31160   */\n      0x00\n        /* \"#utility.yul\":31148:31157   */\n      dup4\n        /* \"#utility.yul\":31144:31161   */\n      add\n        /* \"#utility.yul\":31137:31184   */\n      mstore\n        /* \"#utility.yul\":31201:31332   */\n      tag_706\n        /* \"#utility.yul\":31327:31331   */\n      dup2\n        /* \"#utility.yul\":31201:31332   */\n      tag_385\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":31193:31332   */\n      swap1\n      pop\n        /* \"#utility.yul\":30920:31339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31345:31787   */\n    tag_262:\n        /* \"#utility.yul\":31494:31498   */\n      0x00\n        /* \"#utility.yul\":31532:31534   */\n      0x60\n        /* \"#utility.yul\":31521:31530   */\n      dup3\n        /* \"#utility.yul\":31517:31535   */\n      add\n        /* \"#utility.yul\":31509:31535   */\n      swap1\n      pop\n        /* \"#utility.yul\":31545:31616   */\n      tag_708\n        /* \"#utility.yul\":31613:31614   */\n      0x00\n        /* \"#utility.yul\":31602:31611   */\n      dup4\n        /* \"#utility.yul\":31598:31615   */\n      add\n        /* \"#utility.yul\":31589:31595   */\n      dup7\n        /* \"#utility.yul\":31545:31616   */\n      tag_332\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":31626:31698   */\n      tag_709\n        /* \"#utility.yul\":31694:31696   */\n      0x20\n        /* \"#utility.yul\":31683:31692   */\n      dup4\n        /* \"#utility.yul\":31679:31697   */\n      add\n        /* \"#utility.yul\":31670:31676   */\n      dup6\n        /* \"#utility.yul\":31626:31698   */\n      tag_320\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":31708:31780   */\n      tag_710\n        /* \"#utility.yul\":31776:31778   */\n      0x40\n        /* \"#utility.yul\":31765:31774   */\n      dup4\n        /* \"#utility.yul\":31761:31779   */\n      add\n        /* \"#utility.yul\":31752:31758   */\n      dup5\n        /* \"#utility.yul\":31708:31780   */\n      tag_320\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":31345:31787   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31793:31984   */\n    tag_296:\n        /* \"#utility.yul\":31833:31836   */\n      0x00\n        /* \"#utility.yul\":31852:31872   */\n      tag_712\n        /* \"#utility.yul\":31870:31871   */\n      dup3\n        /* \"#utility.yul\":31852:31872   */\n      tag_315\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":31847:31872   */\n      swap2\n      pop\n        /* \"#utility.yul\":31886:31906   */\n      tag_713\n        /* \"#utility.yul\":31904:31905   */\n      dup4\n        /* \"#utility.yul\":31886:31906   */\n      tag_315\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":31881:31906   */\n      swap3\n      pop\n        /* \"#utility.yul\":31929:31930   */\n      dup3\n        /* \"#utility.yul\":31926:31927   */\n      dup3\n        /* \"#utility.yul\":31922:31931   */\n      add\n        /* \"#utility.yul\":31915:31931   */\n      swap1\n      pop\n        /* \"#utility.yul\":31950:31953   */\n      dup1\n        /* \"#utility.yul\":31947:31948   */\n      dup3\n        /* \"#utility.yul\":31944:31954   */\n      gt\n        /* \"#utility.yul\":31941:31977   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":31957:31975   */\n      tag_715\n      tag_366\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":31941:31977   */\n    tag_714:\n        /* \"#utility.yul\":31793:31984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fe4e2975c141cb4f61c7ffe8ddd28321463c1cc8f1fdc0f14ca8d9d9e900b16464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1104": {
									"entryPoint": null,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1458,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1611,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 1744,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1229,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1791,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1128": {
									"entryPoint": 1424,
									"id": 1128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1751,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3454,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8394:8",
										"nodeType": "YulBlock",
										"src": "0:8394:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "890:32:8",
													"nodeType": "YulBlock",
													"src": "890:32:8",
													"statements": [
														{
															"nativeSrc": "900:16:8",
															"nodeType": "YulAssignment",
															"src": "900:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:8",
																"nodeType": "YulIdentifier",
																"src": "911:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:8",
														"nodeType": "YulTypedName",
														"src": "872:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:8",
														"nodeType": "YulTypedName",
														"src": "882:7:8",
														"type": ""
													}
												],
												"src": "845:77:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1299:413:8",
													"nodeType": "YulBlock",
													"src": "1299:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:8",
																"nodeType": "YulBlock",
																"src": "1345:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:8"
																			},
																			"nativeSrc": "1347:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:8"
																		},
																		"nativeSrc": "1347:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:8"
																		},
																		"nativeSrc": "1316:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:8"
																},
																"nativeSrc": "1312:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:8"
															},
															"nativeSrc": "1309:119:8",
															"nodeType": "YulIf",
															"src": "1309:119:8"
														},
														{
															"nativeSrc": "1438:128:8",
															"nodeType": "YulBlock",
															"src": "1438:128:8",
															"statements": [
																{
																	"nativeSrc": "1453:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:8"
																				},
																				"nativeSrc": "1524:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:8"
																		},
																		"nativeSrc": "1492:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:8",
															"nodeType": "YulBlock",
															"src": "1576:129:8",
															"statements": [
																{
																	"nativeSrc": "1591:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:8"
																				},
																				"nativeSrc": "1663:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:8"
																		},
																		"nativeSrc": "1631:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:8",
														"nodeType": "YulTypedName",
														"src": "1261:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:8",
														"nodeType": "YulTypedName",
														"src": "1272:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:8",
														"nodeType": "YulTypedName",
														"src": "1284:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:8",
														"nodeType": "YulTypedName",
														"src": "1292:6:8",
														"type": ""
													}
												],
												"src": "1205:507:8"
											},
											{
												"body": {
													"nativeSrc": "1777:40:8",
													"nodeType": "YulBlock",
													"src": "1777:40:8",
													"statements": [
														{
															"nativeSrc": "1788:22:8",
															"nodeType": "YulAssignment",
															"src": "1788:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1804:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1798:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:8"
																},
																"nativeSrc": "1798:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1798:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1788:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1718:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:8",
														"nodeType": "YulTypedName",
														"src": "1760:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1770:6:8",
														"nodeType": "YulTypedName",
														"src": "1770:6:8",
														"type": ""
													}
												],
												"src": "1718:99:8"
											},
											{
												"body": {
													"nativeSrc": "1851:152:8",
													"nodeType": "YulBlock",
													"src": "1851:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:8"
																},
																"nativeSrc": "1861:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1861:88:8"
															},
															"nativeSrc": "1861:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:8"
																},
																"nativeSrc": "1958:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1958:15:8"
															},
															"nativeSrc": "1958:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:8"
																},
																"nativeSrc": "1982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1982:15:8"
															},
															"nativeSrc": "1982:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1823:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:8"
											},
											{
												"body": {
													"nativeSrc": "2037:152:8",
													"nodeType": "YulBlock",
													"src": "2037:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:8"
																},
																"nativeSrc": "2047:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2047:88:8"
															},
															"nativeSrc": "2047:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2154:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:8"
																},
																"nativeSrc": "2144:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2144:15:8"
															},
															"nativeSrc": "2144:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2168:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:8"
																},
																"nativeSrc": "2168:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2168:15:8"
															},
															"nativeSrc": "2168:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2009:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:8"
											},
											{
												"body": {
													"nativeSrc": "2246:269:8",
													"nodeType": "YulBlock",
													"src": "2246:269:8",
													"statements": [
														{
															"nativeSrc": "2256:22:8",
															"nodeType": "YulAssignment",
															"src": "2256:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:8"
																},
																"nativeSrc": "2266:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:8"
																}
															]
														},
														{
															"nativeSrc": "2287:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2313:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:8"
																},
																"nativeSrc": "2313:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2313:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2291:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2364:51:8",
																"nodeType": "YulBlock",
																"src": "2364:51:8",
																"statements": [
																	{
																		"nativeSrc": "2378:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2378:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2392:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2388:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:8"
																			},
																			"nativeSrc": "2388:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2378:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2344:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:8"
																},
																"nativeSrc": "2337:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2337:26:8"
															},
															"nativeSrc": "2334:81:8",
															"nodeType": "YulIf",
															"src": "2334:81:8"
														},
														{
															"body": {
																"nativeSrc": "2467:42:8",
																"nodeType": "YulBlock",
																"src": "2467:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2481:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:8"
																			},
																			"nativeSrc": "2481:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:8"
																		},
																		"nativeSrc": "2481:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2431:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2454:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2462:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2451:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:8"
																		},
																		"nativeSrc": "2451:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2428:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:8"
																},
																"nativeSrc": "2428:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2428:38:8"
															},
															"nativeSrc": "2425:84:8",
															"nodeType": "YulIf",
															"src": "2425:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2195:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2230:4:8",
														"nodeType": "YulTypedName",
														"src": "2230:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2239:6:8",
														"nodeType": "YulTypedName",
														"src": "2239:6:8",
														"type": ""
													}
												],
												"src": "2195:320:8"
											},
											{
												"body": {
													"nativeSrc": "2575:87:8",
													"nodeType": "YulBlock",
													"src": "2575:87:8",
													"statements": [
														{
															"nativeSrc": "2585:11:8",
															"nodeType": "YulAssignment",
															"src": "2585:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2593:3:8",
																"nodeType": "YulIdentifier",
																"src": "2593:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2585:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:8"
																},
																"nativeSrc": "2606:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2606:14:8"
															},
															"nativeSrc": "2606:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:8"
														},
														{
															"nativeSrc": "2629:26:8",
															"nodeType": "YulAssignment",
															"src": "2629:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2637:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:8"
																},
																"nativeSrc": "2637:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2637:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2629:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2521:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2562:3:8",
														"nodeType": "YulTypedName",
														"src": "2562:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2570:4:8",
														"nodeType": "YulTypedName",
														"src": "2570:4:8",
														"type": ""
													}
												],
												"src": "2521:141:8"
											},
											{
												"body": {
													"nativeSrc": "2712:49:8",
													"nodeType": "YulBlock",
													"src": "2712:49:8",
													"statements": [
														{
															"nativeSrc": "2722:33:8",
															"nodeType": "YulAssignment",
															"src": "2722:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2740:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2736:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:8"
																		},
																		"nativeSrc": "2736:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:8"
																},
																"nativeSrc": "2732:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2732:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2722:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2668:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:8",
														"nodeType": "YulTypedName",
														"src": "2695:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2705:6:8",
														"nodeType": "YulTypedName",
														"src": "2705:6:8",
														"type": ""
													}
												],
												"src": "2668:93:8"
											},
											{
												"body": {
													"nativeSrc": "2820:54:8",
													"nodeType": "YulBlock",
													"src": "2820:54:8",
													"statements": [
														{
															"nativeSrc": "2830:37:8",
															"nodeType": "YulAssignment",
															"src": "2830:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2855:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2861:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:8"
																},
																"nativeSrc": "2851:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2851:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2830:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2767:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2795:4:8",
														"nodeType": "YulTypedName",
														"src": "2795:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2801:5:8",
														"nodeType": "YulTypedName",
														"src": "2801:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2811:8:8",
														"nodeType": "YulTypedName",
														"src": "2811:8:8",
														"type": ""
													}
												],
												"src": "2767:107:8"
											},
											{
												"body": {
													"nativeSrc": "2956:317:8",
													"nodeType": "YulBlock",
													"src": "2956:317:8",
													"statements": [
														{
															"nativeSrc": "2966:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2987:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2999:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:8"
																},
																"nativeSrc": "2983:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2970:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3010:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3041:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3022:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:8"
																},
																"nativeSrc": "3022:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3022:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3014:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3128:51:8",
															"nodeType": "YulAssignment",
															"src": "3128:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3159:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3170:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3140:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:8"
																},
																"nativeSrc": "3140:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3140:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3128:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:8"
																}
															]
														},
														{
															"nativeSrc": "3188:30:8",
															"nodeType": "YulAssignment",
															"src": "3188:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3212:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:8"
																		},
																		"nativeSrc": "3208:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:8"
																},
																"nativeSrc": "3197:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3197:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:8"
																}
															]
														},
														{
															"nativeSrc": "3227:40:8",
															"nodeType": "YulAssignment",
															"src": "3227:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3240:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3251:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3261:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:8"
																		},
																		"nativeSrc": "3247:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3237:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:8"
																},
																"nativeSrc": "3237:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3237:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2880:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:8",
														"nodeType": "YulTypedName",
														"src": "2917:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2924:10:8",
														"nodeType": "YulTypedName",
														"src": "2924:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2936:8:8",
														"nodeType": "YulTypedName",
														"src": "2936:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2949:6:8",
														"nodeType": "YulTypedName",
														"src": "2949:6:8",
														"type": ""
													}
												],
												"src": "2880:393:8"
											},
											{
												"body": {
													"nativeSrc": "3311:28:8",
													"nodeType": "YulBlock",
													"src": "3311:28:8",
													"statements": [
														{
															"nativeSrc": "3321:12:8",
															"nodeType": "YulAssignment",
															"src": "3321:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3328:5:8",
																"nodeType": "YulIdentifier",
																"src": "3328:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3279:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3297:5:8",
														"nodeType": "YulTypedName",
														"src": "3297:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3307:3:8",
														"nodeType": "YulTypedName",
														"src": "3307:3:8",
														"type": ""
													}
												],
												"src": "3279:60:8"
											},
											{
												"body": {
													"nativeSrc": "3405:82:8",
													"nodeType": "YulBlock",
													"src": "3405:82:8",
													"statements": [
														{
															"nativeSrc": "3415:66:8",
															"nodeType": "YulAssignment",
															"src": "3415:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3473:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3455:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:8"
																				},
																				"nativeSrc": "3455:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3446:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:8"
																		},
																		"nativeSrc": "3446:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3428:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:8"
																},
																"nativeSrc": "3428:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3428:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3415:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3345:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3385:5:8",
														"nodeType": "YulTypedName",
														"src": "3385:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3395:9:8",
														"nodeType": "YulTypedName",
														"src": "3395:9:8",
														"type": ""
													}
												],
												"src": "3345:142:8"
											},
											{
												"body": {
													"nativeSrc": "3540:28:8",
													"nodeType": "YulBlock",
													"src": "3540:28:8",
													"statements": [
														{
															"nativeSrc": "3550:12:8",
															"nodeType": "YulAssignment",
															"src": "3550:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3557:5:8",
																"nodeType": "YulIdentifier",
																"src": "3557:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3493:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:8",
														"nodeType": "YulTypedName",
														"src": "3526:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3536:3:8",
														"nodeType": "YulTypedName",
														"src": "3536:3:8",
														"type": ""
													}
												],
												"src": "3493:75:8"
											},
											{
												"body": {
													"nativeSrc": "3650:193:8",
													"nodeType": "YulBlock",
													"src": "3650:193:8",
													"statements": [
														{
															"nativeSrc": "3660:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3715:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3684:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:8"
																},
																"nativeSrc": "3684:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3684:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3664:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3739:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3779:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3773:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:8"
																				},
																				"nativeSrc": "3773:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3818:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3794:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:8"
																				},
																				"nativeSrc": "3794:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3745:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:8"
																		},
																		"nativeSrc": "3745:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3732:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:8"
																},
																"nativeSrc": "3732:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3732:105:8"
															},
															"nativeSrc": "3732:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3574:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3627:4:8",
														"nodeType": "YulTypedName",
														"src": "3627:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3633:6:8",
														"nodeType": "YulTypedName",
														"src": "3633:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3641:7:8",
														"nodeType": "YulTypedName",
														"src": "3641:7:8",
														"type": ""
													}
												],
												"src": "3574:269:8"
											},
											{
												"body": {
													"nativeSrc": "3898:24:8",
													"nodeType": "YulBlock",
													"src": "3898:24:8",
													"statements": [
														{
															"nativeSrc": "3908:8:8",
															"nodeType": "YulAssignment",
															"src": "3908:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3915:1:8",
																"nodeType": "YulLiteral",
																"src": "3915:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3908:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3849:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3894:3:8",
														"nodeType": "YulTypedName",
														"src": "3894:3:8",
														"type": ""
													}
												],
												"src": "3849:73:8"
											},
											{
												"body": {
													"nativeSrc": "3981:136:8",
													"nodeType": "YulBlock",
													"src": "3981:136:8",
													"statements": [
														{
															"nativeSrc": "3991:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4005:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:8"
																},
																"nativeSrc": "4005:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3995:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4090:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4096:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4104:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4046:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:8"
																},
																"nativeSrc": "4046:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4046:65:8"
															},
															"nativeSrc": "4046:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3928:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3967:4:8",
														"nodeType": "YulTypedName",
														"src": "3967:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3973:6:8",
														"nodeType": "YulTypedName",
														"src": "3973:6:8",
														"type": ""
													}
												],
												"src": "3928:189:8"
											},
											{
												"body": {
													"nativeSrc": "4173:136:8",
													"nodeType": "YulBlock",
													"src": "4173:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:63:8",
																"nodeType": "YulBlock",
																"src": "4240:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4284:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4291:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4254:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:8"
																			},
																			"nativeSrc": "4254:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:8"
																		},
																		"nativeSrc": "4254:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4193:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4200:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4190:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:8"
																},
																"nativeSrc": "4190:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4190:14:8"
															},
															"nativeSrc": "4183:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4205:26:8",
																"nodeType": "YulBlock",
																"src": "4205:26:8",
																"statements": [
																	{
																		"nativeSrc": "4207:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4207:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4220:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4227:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4216:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:8"
																			},
																			"nativeSrc": "4216:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4207:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4187:2:8",
																"nodeType": "YulBlock",
																"src": "4187:2:8",
																"statements": []
															},
															"src": "4183:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4123:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4161:5:8",
														"nodeType": "YulTypedName",
														"src": "4161:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4168:3:8",
														"nodeType": "YulTypedName",
														"src": "4168:3:8",
														"type": ""
													}
												],
												"src": "4123:186:8"
											},
											{
												"body": {
													"nativeSrc": "4394:464:8",
													"nodeType": "YulBlock",
													"src": "4394:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:431:8",
																"nodeType": "YulBlock",
																"src": "4420:431:8",
																"statements": [
																	{
																		"nativeSrc": "4434:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4482:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4450:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:8"
																			},
																			"nativeSrc": "4450:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4438:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4501:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4524:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4552:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4534:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:8"
																					},
																					"nativeSrc": "4534:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:8"
																			},
																			"nativeSrc": "4520:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4505:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4721:27:8",
																			"nodeType": "YulBlock",
																			"src": "4721:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4723:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4723:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4738:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4723:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4705:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4717:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4702:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:8"
																			},
																			"nativeSrc": "4702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:8"
																		},
																		"nativeSrc": "4699:49:8",
																		"nodeType": "YulIf",
																		"src": "4699:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4790:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4807:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4835:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4817:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:8"
																							},
																							"nativeSrc": "4817:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4803:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:8"
																					},
																					"nativeSrc": "4803:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4761:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:8"
																			},
																			"nativeSrc": "4761:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:8"
																		},
																		"nativeSrc": "4761:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4411:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4408:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:8"
																},
																"nativeSrc": "4408:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4408:11:8"
															},
															"nativeSrc": "4405:446:8",
															"nodeType": "YulIf",
															"src": "4405:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4315:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4370:5:8",
														"nodeType": "YulTypedName",
														"src": "4370:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4377:3:8",
														"nodeType": "YulTypedName",
														"src": "4377:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4382:10:8",
														"nodeType": "YulTypedName",
														"src": "4382:10:8",
														"type": ""
													}
												],
												"src": "4315:543:8"
											},
											{
												"body": {
													"nativeSrc": "4927:54:8",
													"nodeType": "YulBlock",
													"src": "4927:54:8",
													"statements": [
														{
															"nativeSrc": "4937:37:8",
															"nodeType": "YulAssignment",
															"src": "4937:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4962:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4968:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4958:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:8"
																},
																"nativeSrc": "4958:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4958:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4937:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4864:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4902:4:8",
														"nodeType": "YulTypedName",
														"src": "4902:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4908:5:8",
														"nodeType": "YulTypedName",
														"src": "4908:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4918:8:8",
														"nodeType": "YulTypedName",
														"src": "4918:8:8",
														"type": ""
													}
												],
												"src": "4864:117:8"
											},
											{
												"body": {
													"nativeSrc": "5038:118:8",
													"nodeType": "YulBlock",
													"src": "5038:118:8",
													"statements": [
														{
															"nativeSrc": "5048:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5097:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5100:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5093:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:8"
																				},
																				"nativeSrc": "5093:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5112:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5108:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:8"
																				},
																				"nativeSrc": "5108:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5064:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:8"
																		},
																		"nativeSrc": "5064:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:8"
																},
																"nativeSrc": "5060:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5060:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5052:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5125:25:8",
															"nodeType": "YulAssignment",
															"src": "5125:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5139:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5145:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:8"
																},
																"nativeSrc": "5135:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5135:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5125:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4987:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5015:4:8",
														"nodeType": "YulTypedName",
														"src": "5015:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5021:5:8",
														"nodeType": "YulTypedName",
														"src": "5021:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5031:6:8",
														"nodeType": "YulTypedName",
														"src": "5031:6:8",
														"type": ""
													}
												],
												"src": "4987:169:8"
											},
											{
												"body": {
													"nativeSrc": "5242:214:8",
													"nodeType": "YulBlock",
													"src": "5242:214:8",
													"statements": [
														{
															"nativeSrc": "5375:37:8",
															"nodeType": "YulAssignment",
															"src": "5375:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5402:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5408:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5383:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:8"
																},
																"nativeSrc": "5383:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5383:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5375:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:8"
																}
															]
														},
														{
															"nativeSrc": "5421:29:8",
															"nodeType": "YulAssignment",
															"src": "5421:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5432:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5442:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5445:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5438:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:8"
																		},
																		"nativeSrc": "5438:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:8"
																},
																"nativeSrc": "5429:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5429:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5161:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5223:4:8",
														"nodeType": "YulTypedName",
														"src": "5223:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5229:3:8",
														"nodeType": "YulTypedName",
														"src": "5229:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5237:4:8",
														"nodeType": "YulTypedName",
														"src": "5237:4:8",
														"type": ""
													}
												],
												"src": "5161:295:8"
											},
											{
												"body": {
													"nativeSrc": "5553:1303:8",
													"nodeType": "YulBlock",
													"src": "5553:1303:8",
													"statements": [
														{
															"nativeSrc": "5564:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5611:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5578:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:8"
																},
																"nativeSrc": "5578:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5578:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5568:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5700:22:8",
																"nodeType": "YulBlock",
																"src": "5700:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5702:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:8"
																			},
																			"nativeSrc": "5702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:8"
																		},
																		"nativeSrc": "5702:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5672:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5669:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:8"
																},
																"nativeSrc": "5669:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5669:30:8"
															},
															"nativeSrc": "5666:56:8",
															"nodeType": "YulIf",
															"src": "5666:56:8"
														},
														{
															"nativeSrc": "5732:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5778:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5772:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:8"
																		},
																		"nativeSrc": "5772:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5746:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:8"
																},
																"nativeSrc": "5746:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5746:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5736:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5877:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5891:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5831:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:8"
																},
																"nativeSrc": "5831:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5831:67:8"
															},
															"nativeSrc": "5831:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:8"
														},
														{
															"nativeSrc": "5908:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5925:1:8",
																"nodeType": "YulLiteral",
																"src": "5925:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5912:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:17:8",
															"nodeType": "YulAssignment",
															"src": "5936:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5949:4:8",
																"nodeType": "YulLiteral",
																"src": "5949:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5936:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6000:611:8",
																		"nodeType": "YulBlock",
																		"src": "6000:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6014:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6045:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6041:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:8"
																							},
																							"nativeSrc": "6041:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6029:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:8"
																					},
																					"nativeSrc": "6029:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6018:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6065:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6111:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6079:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:8"
																					},
																					"nativeSrc": "6079:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6069:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6129:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6138:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6133:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6197:163:8",
																					"nodeType": "YulBlock",
																					"src": "6197:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6222:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6240:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6245:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6236:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:8"
																												},
																												"nativeSrc": "6236:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6230:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:8"
																										},
																										"nativeSrc": "6230:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6215:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:8"
																								},
																								"nativeSrc": "6215:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:8"
																							},
																							"nativeSrc": "6215:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:8"
																						},
																						{
																							"nativeSrc": "6274:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6274:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6288:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6296:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6284:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:8"
																								},
																								"nativeSrc": "6284:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6274:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6315:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6315:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6332:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6343:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6328:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:8"
																								},
																								"nativeSrc": "6328:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6315:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6163:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6166:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6160:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:8"
																					},
																					"nativeSrc": "6160:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:8"
																				},
																				"nativeSrc": "6152:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6175:21:8",
																					"nodeType": "YulBlock",
																					"src": "6175:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6177:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6177:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6186:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6189:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6182:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:8"
																								},
																								"nativeSrc": "6182:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6177:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6156:3:8",
																					"nodeType": "YulBlock",
																					"src": "6156:3:8",
																					"statements": []
																				},
																				"src": "6152:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6396:156:8",
																					"nodeType": "YulBlock",
																					"src": "6396:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6414:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6441:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6446:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6437:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:8"
																										},
																										"nativeSrc": "6437:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6431:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:8"
																								},
																								"nativeSrc": "6431:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6418:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6481:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6508:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6523:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6531:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6519:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:8"
																												},
																												"nativeSrc": "6519:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6489:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:8"
																										},
																										"nativeSrc": "6489:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6474:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:8"
																								},
																								"nativeSrc": "6474:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:8"
																							},
																							"nativeSrc": "6474:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6379:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6388:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6376:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:8"
																					},
																					"nativeSrc": "6376:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:8"
																				},
																				"nativeSrc": "6373:179:8",
																				"nodeType": "YulIf",
																				"src": "6373:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6572:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6586:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6594:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6582:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:8"
																									},
																									"nativeSrc": "6582:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6598:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6578:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:8"
																							},
																							"nativeSrc": "6578:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6565:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:8"
																					},
																					"nativeSrc": "6565:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:8"
																				},
																				"nativeSrc": "6565:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5993:618:8",
																	"nodeType": "YulCase",
																	"src": "5993:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6628:222:8",
																		"nodeType": "YulBlock",
																		"src": "6628:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6642:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6655:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6646:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6679:67:8",
																					"nodeType": "YulBlock",
																					"src": "6679:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6697:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6697:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6716:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6721:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6712:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:8"
																										},
																										"nativeSrc": "6712:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6706:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:8"
																								},
																								"nativeSrc": "6706:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6697:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6672:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:8"
																				},
																				"nativeSrc": "6669:77:8",
																				"nodeType": "YulIf",
																				"src": "6669:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6766:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6825:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6832:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6772:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:8"
																							},
																							"nativeSrc": "6772:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6759:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:8"
																					},
																					"nativeSrc": "6759:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:8"
																				},
																				"nativeSrc": "6759:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6620:230:8",
																	"nodeType": "YulCase",
																	"src": "6620:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5973:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5970:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:8"
																},
																"nativeSrc": "5970:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5970:14:8"
															},
															"nativeSrc": "5963:887:8",
															"nodeType": "YulSwitch",
															"src": "5963:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5461:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5542:4:8",
														"nodeType": "YulTypedName",
														"src": "5542:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5548:3:8",
														"nodeType": "YulTypedName",
														"src": "5548:3:8",
														"type": ""
													}
												],
												"src": "5461:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6927:53:8",
													"nodeType": "YulBlock",
													"src": "6927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6949:17:8"
																		},
																		"nativeSrc": "6949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:8"
																},
																"nativeSrc": "6937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6937:37:8"
															},
															"nativeSrc": "6937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6937:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:8",
														"nodeType": "YulTypedName",
														"src": "6915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:8",
														"nodeType": "YulTypedName",
														"src": "6922:3:8",
														"type": ""
													}
												],
												"src": "6862:118:8"
											},
											{
												"body": {
													"nativeSrc": "7084:124:8",
													"nodeType": "YulBlock",
													"src": "7084:124:8",
													"statements": [
														{
															"nativeSrc": "7094:26:8",
															"nodeType": "YulAssignment",
															"src": "7094:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7106:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7117:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:8"
																},
																"nativeSrc": "7102:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7102:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7094:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7174:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7187:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7198:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7183:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:8"
																		},
																		"nativeSrc": "7183:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7130:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:8"
																},
																"nativeSrc": "7130:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:8"
															},
															"nativeSrc": "7130:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7130:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6986:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:8",
														"nodeType": "YulTypedName",
														"src": "7056:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7068:6:8",
														"nodeType": "YulTypedName",
														"src": "7068:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:8",
														"nodeType": "YulTypedName",
														"src": "7079:4:8",
														"type": ""
													}
												],
												"src": "6986:222:8"
											},
											{
												"body": {
													"nativeSrc": "7242:152:8",
													"nodeType": "YulBlock",
													"src": "7242:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7262:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:8"
																},
																"nativeSrc": "7252:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7252:88:8"
															},
															"nativeSrc": "7252:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7252:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7356:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7356:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7359:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7359:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:8"
																},
																"nativeSrc": "7349:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7349:15:8"
															},
															"nativeSrc": "7349:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7349:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7380:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:8"
																},
																"nativeSrc": "7373:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7373:15:8"
															},
															"nativeSrc": "7373:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7373:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7214:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7214:180:8"
											},
											{
												"body": {
													"nativeSrc": "7444:147:8",
													"nodeType": "YulBlock",
													"src": "7444:147:8",
													"statements": [
														{
															"nativeSrc": "7454:25:8",
															"nodeType": "YulAssignment",
															"src": "7454:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7477:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7477:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7459:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7459:17:8"
																},
																"nativeSrc": "7459:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7459:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7454:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7454:1:8"
																}
															]
														},
														{
															"nativeSrc": "7488:25:8",
															"nodeType": "YulAssignment",
															"src": "7488:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7511:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7511:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7493:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7493:17:8"
																},
																"nativeSrc": "7493:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7493:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7488:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7488:1:8"
																}
															]
														},
														{
															"nativeSrc": "7522:16:8",
															"nodeType": "YulAssignment",
															"src": "7522:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7533:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7533:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7536:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7536:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:3:8"
																},
																"nativeSrc": "7529:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7529:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7522:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7562:22:8",
																"nodeType": "YulBlock",
																"src": "7562:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7564:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7564:16:8"
																			},
																			"nativeSrc": "7564:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7564:18:8"
																		},
																		"nativeSrc": "7564:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7564:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7554:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7554:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7557:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7551:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7551:2:8"
																},
																"nativeSrc": "7551:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7551:10:8"
															},
															"nativeSrc": "7548:36:8",
															"nodeType": "YulIf",
															"src": "7548:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7400:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7431:1:8",
														"nodeType": "YulTypedName",
														"src": "7431:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7434:1:8",
														"nodeType": "YulTypedName",
														"src": "7434:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7440:3:8",
														"nodeType": "YulTypedName",
														"src": "7440:3:8",
														"type": ""
													}
												],
												"src": "7400:191:8"
											},
											{
												"body": {
													"nativeSrc": "7662:53:8",
													"nodeType": "YulBlock",
													"src": "7662:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7679:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7679:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7702:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7702:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7684:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7684:17:8"
																		},
																		"nativeSrc": "7684:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7684:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:8"
																},
																"nativeSrc": "7672:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7672:37:8"
															},
															"nativeSrc": "7672:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7672:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7597:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7650:5:8",
														"nodeType": "YulTypedName",
														"src": "7650:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7657:3:8",
														"nodeType": "YulTypedName",
														"src": "7657:3:8",
														"type": ""
													}
												],
												"src": "7597:118:8"
											},
											{
												"body": {
													"nativeSrc": "7875:288:8",
													"nodeType": "YulBlock",
													"src": "7875:288:8",
													"statements": [
														{
															"nativeSrc": "7885:26:8",
															"nodeType": "YulAssignment",
															"src": "7885:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7897:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7897:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7908:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7893:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7893:3:8"
																},
																"nativeSrc": "7893:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7893:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7885:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7885:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7965:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7989:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7989:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7974:3:8"
																		},
																		"nativeSrc": "7974:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7974:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7921:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7921:43:8"
																},
																"nativeSrc": "7921:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7921:71:8"
															},
															"nativeSrc": "7921:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7921:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8046:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8059:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8070:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8070:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:8"
																		},
																		"nativeSrc": "8055:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8002:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8002:43:8"
																},
																"nativeSrc": "8002:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8002:72:8"
															},
															"nativeSrc": "8002:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8002:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8128:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8128:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8141:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8141:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8152:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8152:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8137:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8137:3:8"
																		},
																		"nativeSrc": "8137:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8137:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8084:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8084:43:8"
																},
																"nativeSrc": "8084:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8084:72:8"
															},
															"nativeSrc": "8084:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8084:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7721:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7831:9:8",
														"nodeType": "YulTypedName",
														"src": "7831:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7843:6:8",
														"nodeType": "YulTypedName",
														"src": "7843:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7851:6:8",
														"nodeType": "YulTypedName",
														"src": "7851:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7859:6:8",
														"nodeType": "YulTypedName",
														"src": "7859:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7870:4:8",
														"nodeType": "YulTypedName",
														"src": "7870:4:8",
														"type": ""
													}
												],
												"src": "7721:442:8"
											},
											{
												"body": {
													"nativeSrc": "8267:124:8",
													"nodeType": "YulBlock",
													"src": "8267:124:8",
													"statements": [
														{
															"nativeSrc": "8277:26:8",
															"nodeType": "YulAssignment",
															"src": "8277:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8289:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8289:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8300:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8300:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8285:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:8"
																},
																"nativeSrc": "8285:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8285:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8277:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8277:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8357:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8357:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8370:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8370:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8381:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8381:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8366:3:8"
																		},
																		"nativeSrc": "8366:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8366:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8313:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8313:43:8"
																},
																"nativeSrc": "8313:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8313:71:8"
															},
															"nativeSrc": "8313:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8313:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8169:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8239:9:8",
														"nodeType": "YulTypedName",
														"src": "8239:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8251:6:8",
														"nodeType": "YulTypedName",
														"src": "8251:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8262:4:8",
														"nodeType": "YulTypedName",
														"src": "8262:4:8",
														"type": ""
													}
												],
												"src": "8169:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3586 CODESIZE SUB DUP1 PUSH2 0x3586 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446567656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44474E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x4CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x150 DUP3 DUP3 PUSH2 0x590 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F76696365204E6176696761746F7200000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D7974686963204D6176657269636B0000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2BC DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x2 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43656C65737469616C2043727573686572000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4B0 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41737472616C2041636500000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x898 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x4 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446976696E6520446F6D696E61746F7200000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x960 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0xDCC JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x5B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x5AE DUP3 DUP3 PUSH2 0x64B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x6D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E4 PUSH2 0x6D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x649 JUMPI PUSH2 0x60D PUSH2 0x6D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0xCF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CC PUSH0 DUP4 DUP4 PUSH2 0x6FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x74F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0xD3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x81D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8AE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x90B SWAP2 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x945 DUP3 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x955 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP2 EQ PUSH2 0x95F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x970 DUP2 PUSH2 0x94C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x988 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP2 EQ PUSH2 0x992 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x9A3 DUP2 PUSH2 0x97F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BF JUMPI PUSH2 0x9BE PUSH2 0x918 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9CC DUP6 DUP3 DUP7 ADD PUSH2 0x962 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9DD DUP6 DUP3 DUP7 ADD PUSH2 0x995 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA62 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0xA1E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xAD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xAE1 DUP7 DUP4 PUSH2 0xA9C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C PUSH2 0xB17 PUSH2 0xB12 DUP5 PUSH2 0x976 JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB35 DUP4 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0xB49 PUSH2 0xB41 DUP3 PUSH2 0xB23 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xAA8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xB5D PUSH2 0xB51 JUMP JUMPDEST PUSH2 0xB68 DUP2 DUP5 DUP5 PUSH2 0xB2C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB8B JUMPI PUSH2 0xB80 PUSH0 DUP3 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB6E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBA1 DUP2 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0xBAA DUP5 PUSH2 0xA8D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xBB9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xBCD PUSH2 0xBC5 DUP6 PUSH2 0xA8D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB6D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBF0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xBD5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC08 DUP4 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC21 DUP3 PUSH2 0x9E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0x9F1 JUMP JUMPDEST JUMPDEST PUSH2 0xC44 DUP3 SLOAD PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xC4F DUP3 DUP3 DUP6 PUSH2 0xB8F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC80 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xC6E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC78 DUP6 DUP3 PUSH2 0xBFD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC8E DUP7 PUSH2 0xA7B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCB5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC90 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xCD2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xCCE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xBE1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0x93B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD09 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD46 DUP3 PUSH2 0x976 JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP4 PUSH2 0x976 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0xD0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD78 DUP2 PUSH2 0x976 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD91 PUSH0 DUP4 ADD DUP7 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xD9E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0xDAB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC6 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27AD DUP1 PUSH2 0xDD9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xAF3BCB7D GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xEA5E65E0 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEA5E65E0 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xF5112F87 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xFBD1A97B EQ PUSH2 0x477 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xCE6019B4 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x405 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x389 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x62D6BBDF EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1925 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x755 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x475 PUSH2 0xE50 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B8 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x506 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x512 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x543 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH2 0x550 DUP2 DUP6 DUP6 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x565 CALLER PUSH2 0x710 JUMP JUMPDEST LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH2 0x897 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5BF CALLER PUSH2 0x710 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E9 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH2 0x5F6 DUP6 DUP3 DUP6 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x601 DUP6 DUP6 DUP6 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x619 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x623 DUP3 DUP3 PUSH2 0x1181 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x638 PUSH2 0x632 PUSH2 0xF5F JUMP JUMPDEST DUP3 PUSH2 0x1200 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6F3 SWAP1 PUSH2 0x219C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75D PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x766 PUSH0 PUSH2 0x127F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x77A DUP3 PUSH2 0x774 PUSH2 0xF5F JUMP JUMPDEST DUP4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x784 DUP3 DUP3 PUSH2 0x1200 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x792 CALLER PUSH2 0x710 JUMP JUMPDEST LT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x220E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x627 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x816 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x842 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x88D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x864 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x88D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x870 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8A1 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH2 0x8AE DUP2 DUP6 DUP6 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x939 CALLER PUSH2 0x710 JUMP JUMPDEST LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x971 SWAP1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x99D PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x627 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xADE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xC2C JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xB77 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBA3 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCCF SWAP3 SWAP2 SWAP1 PUSH2 0x24B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0xD6D JUMPI PUSH2 0xD17 CALLER PUSH1 0x2 DUP5 PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x2538 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD60 SWAP3 SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0xD76 DUP3 PUSH2 0x627 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xDBE SWAP3 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDD4 PUSH2 0x10FA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0x127F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE5A CALLER PUSH2 0x710 JUMP JUMPDEST EQ PUSH2 0xE9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE91 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA5 CALLER PUSH1 0x32 PUSH2 0x1181 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xEC6 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF73 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1342 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF83 DUP5 DUP5 PUSH2 0xC37 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1004 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFF5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1003 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F5 DUP4 DUP4 DUP4 PUSH2 0x1511 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1102 PUSH2 0xF5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1120 PUSH2 0x7DF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x117F JUMPI PUSH2 0x1143 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FC PUSH0 DUP4 DUP4 PUSH2 0x1511 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1270 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x127B DUP3 PUSH0 DUP4 PUSH2 0x1511 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1422 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1419 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x150B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1502 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1561 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x2744 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x162F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x15EA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1676 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x171D SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x176C DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1776 DUP2 DUP6 PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP PUSH2 0x1786 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x178F DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B2 DUP2 DUP5 PUSH2 0x1762 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F4 DUP3 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1804 DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP2 EQ PUSH2 0x180E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x181F DUP2 PUSH2 0x17FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x1825 JUMP JUMPDEST DUP2 EQ PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1852 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187B DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x188C DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AA DUP2 PUSH2 0x1896 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x1825 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18EB PUSH0 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1906 DUP2 PUSH2 0x18F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x191F PUSH0 DUP4 ADD DUP5 PUSH2 0x18FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x193C JUMPI PUSH2 0x193B PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1949 DUP7 DUP3 DUP8 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x195A DUP7 DUP3 DUP8 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x196B DUP7 DUP3 DUP8 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198A JUMPI PUSH2 0x1989 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1997 DUP5 DUP3 DUP6 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x19DE DUP3 PUSH2 0x1752 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0F PUSH2 0x17BA JUMP JUMPDEST SWAP1 POP PUSH2 0x1A1B DUP3 DUP3 PUSH2 0x19D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A39 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH2 0x1A43 DUP3 PUSH2 0x1752 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A70 PUSH2 0x1A6B DUP5 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x1A06 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x19A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1A97 DUP5 DUP3 DUP6 PUSH2 0x1A50 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AC3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE2 JUMPI PUSH2 0x1AE1 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x17C7 JUMP JUMPDEST JUMPDEST PUSH2 0x1B0B DUP6 DUP3 DUP7 ADD PUSH2 0x1A9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1C DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B48 DUP5 DUP3 DUP6 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x18F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB7 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C11 DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1C1B DUP2 DUP6 PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C2B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x1C34 DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C48 DUP2 PUSH2 0x18F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C57 DUP2 PUSH2 0x1825 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1C77 DUP3 DUP3 PUSH2 0x1C07 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1C8C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1C3F JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1C9F PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1C4E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB5 DUP4 DUP4 PUSH2 0x1C5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD3 DUP3 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x1CDD DUP2 DUP6 PUSH2 0x1BD8 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1CEF DUP6 PUSH2 0x1BE8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1D2A JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1D0B DUP6 DUP3 PUSH2 0x1CAA JUMP JUMPDEST SWAP5 POP PUSH2 0x1D16 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CF2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D54 DUP2 DUP5 PUSH2 0x1CC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D72 JUMPI PUSH2 0x1D71 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7F DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D90 DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x1896 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DBE DUP2 PUSH2 0x1D9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1DB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF8 DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1A DUP2 DUP7 PUSH2 0x1762 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E29 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x1E36 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E82 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E95 JUMPI PUSH2 0x1E94 PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ECF PUSH1 0x14 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDA DUP3 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F5F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x1F69 DUP7 DUP4 PUSH2 0x1F24 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA4 PUSH2 0x1F9F PUSH2 0x1F9A DUP5 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x1825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBD DUP4 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x1FD1 PUSH2 0x1FC9 DUP3 PUSH2 0x1FAB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F30 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1FE5 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x1FF0 DUP2 DUP5 DUP5 PUSH2 0x1FB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2013 JUMPI PUSH2 0x2008 PUSH0 DUP3 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FF6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2058 JUMPI PUSH2 0x2029 DUP2 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x2032 DUP5 PUSH2 0x1F15 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2041 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2055 PUSH2 0x204D DUP6 PUSH2 0x1F15 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1FF5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2078 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x205D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2090 DUP4 DUP4 PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20A9 DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH2 0x20CC DUP3 SLOAD PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x20D7 DUP3 DUP3 DUP6 PUSH2 0x2017 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2108 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x20F6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2100 DUP6 DUP3 PUSH2 0x2085 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2116 DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x213D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2118 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x215A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2156 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2069 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21A6 DUP3 PUSH2 0x18F1 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x21B9 JUMPI PUSH2 0x21B8 PUSH2 0x216F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F8 PUSH1 0x13 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x2203 DUP3 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2225 DUP2 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2260 PUSH1 0xE DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x226B DUP3 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228D DUP2 PUSH2 0x2254 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x22A2 DUP2 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x22B7 JUMPI POP POP PUSH2 0x238C JUMP JUMPDEST PUSH2 0x22C0 DUP3 PUSH2 0x2294 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH2 0x22E3 DUP3 SLOAD PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x22EE DUP3 DUP3 DUP6 PUSH2 0x2017 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x231B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2309 JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x2313 DUP6 DUP3 PUSH2 0x2085 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2329 DUP8 PUSH2 0x1F03 JUMP JUMPDEST SWAP7 POP PUSH2 0x2334 DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x235B JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2336 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2378 JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2374 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2069 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x239A DUP2 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x23A4 DUP2 DUP7 PUSH2 0x1734 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x23BE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x23D4 JUMPI PUSH2 0x2406 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x23DD DUP6 PUSH2 0x1F03 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23FE JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23DF JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2422 PUSH0 DUP4 ADD DUP7 PUSH2 0x18FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2434 DUP2 DUP6 PUSH2 0x238E JUMP JUMPDEST SWAP1 POP PUSH2 0x2443 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2465 PUSH2 0x2460 DUP3 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x244B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2481 DUP3 PUSH2 0x246B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2492 DUP3 PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AA PUSH2 0x24A5 DUP3 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x2488 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24BB DUP3 DUP6 PUSH2 0x2454 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x24CB DUP3 DUP5 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2512 DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP PUSH2 0x251D DUP4 PUSH2 0x1825 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x252D JUMPI PUSH2 0x252C PUSH2 0x24DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2542 DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP PUSH2 0x254D DUP4 PUSH2 0x1825 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x255B DUP2 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2572 JUMPI PUSH2 0x2571 PUSH2 0x216F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776F6E0000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25AD PUSH1 0x3 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x25B8 DUP3 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25D6 PUSH0 DUP4 ADD DUP6 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x25E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18A1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x25F4 DUP2 PUSH2 0x25A1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6C6F737400000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2631 PUSH1 0x4 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x263C DUP3 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x265A PUSH0 DUP4 ADD DUP6 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x2667 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18A1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2678 DUP2 PUSH2 0x2625 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F7527766520616C726561647920636C61696D656420796F75722077656C63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6D6520626F6E75730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26DB PUSH1 0x29 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E6 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2708 DUP2 PUSH2 0x26CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2722 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x272F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x273C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x274E DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP PUSH2 0x2759 DUP4 PUSH2 0x1825 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2771 JUMPI PUSH2 0x2770 PUSH2 0x216F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4E 0x29 PUSH22 0xC141CB4F61C7FFE8DDD28321463C1CC8F1FDC0F14CA8 0xD9 0xD9 0xE9 STOP 0xB1 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "785:3037:7:-:0;;;1243:437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1326:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1351:31:7::2;1356:12;1370:11;1351:4;;;:31;;:::i;:::-;1414;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1438:1;1414:31;;;;;;1441:3;1414:31;;::::0;1403:5:::2;:8;1409:1;1403:8;;;;;;;;;;;;;:42;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:31;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1489:1;1465:31;;;;;;1492:3;1465:31;;::::0;1456:5:::2;:8;1462:1;1456:8;;;;;;;;;;;;;:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1516:34;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1542:1;1516:34;;;;;;1545:4;1516:34;;::::0;1507:5:::2;:8;1513:1;1507:8;;;;;;;;;;;;;:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:27;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1589:1;1570:27;;;;;;1592:4;1570:27;;::::0;1561:5:::2;:8;1567:1;1561:8;;;;;;;;;;;;;:36;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1617:33;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;1642:1;1617:33;;;;;;1645:4;1617:33;;::::0;1608:5:::2;:8;1614:1;1608:8;;;;;;;;;;;;;:42;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:1;1661:7;;:9;;;;;;;;;;;;;;;;;;1243:437:::0;;785:3037;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1804:95:7:-;1531:13:0;:11;;;:13;;:::i;:::-;1874:17:7::1;1880:2;1884:6;1874:5;;;:17;;:::i;:::-;1804:95:::0;;:::o;1796:162:0:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:180::-;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:191;7440:3;7459:20;7477:1;7459:20;:::i;:::-;7454:25;;7493:20;7511:1;7493:20;:::i;:::-;7488:25;;7536:1;7533;7529:9;7522:16;;7557:3;7554:1;7551:10;7548:36;;;7564:18;;:::i;:::-;7548:36;7400:191;;;;:::o;7597:118::-;7684:24;7702:5;7684:24;:::i;:::-;7679:3;7672:37;7597:118;;:::o;7721:442::-;7870:4;7908:2;7897:9;7893:18;7885:26;;7921:71;7989:1;7978:9;7974:17;7965:6;7921:71;:::i;:::-;8002:72;8070:2;8059:9;8055:18;8046:6;8002:72;:::i;:::-;8084;8152:2;8141:9;8137:18;8128:6;8084:72;:::i;:::-;7721:442;;;;;;:::o;8169:222::-;8262:4;8300:2;8289:9;8285:18;8277:26;;8313:71;8381:1;8370:9;8366:17;8357:6;8313:71;:::i;:::-;8169:222;;;;:::o;785:3037:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3942,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4930,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4608,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4346,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4481,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": 3935,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3960,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4735,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4106,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5393,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addItem_1194": {
									"entryPoint": 1595,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3127,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1337,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1808,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1896,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnToken_1361": {
									"entryPoint": 1928,
									"id": 1361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1575,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1113": {
									"entryPoint": 1549,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalance_1341": {
									"entryPoint": 1461,
									"id": 1341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserItems_1330": {
									"entryPoint": 2793,
									"id": 1330,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLessThanFive_1256": {
									"entryPoint": 3257,
									"id": 1256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@items_1002": {
									"entryPoint": 3751,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1128": {
									"entryPoint": 1553,
									"id": 1128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1193,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2015,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@purchaseItem_1316": {
									"entryPoint": 2233,
									"id": 1316,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1877,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2055,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenId_1010": {
									"entryPoint": 1476,
									"id": 1010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1494,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1503,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3532,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferToken_1151": {
									"entryPoint": 1371,
									"id": 1151,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2199,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@welcomeBonus_1171": {
									"entryPoint": 3664,
									"id": 1171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 7620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 7075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 9369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr": {
									"entryPoint": 7261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 9300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 7231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9392,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9999,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 9231,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_storage": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 9352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 9335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 9291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 9323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98": {
									"entryPoint": 9857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427": {
									"entryPoint": 9593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888": {
									"entryPoint": 9725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c": {
									"entryPoint": 8748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496": {
									"entryPoint": 8644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:31987:8",
										"nodeType": "YulBlock",
										"src": "0:31987:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3734:43:8",
													"nodeType": "YulBlock",
													"src": "3734:43:8",
													"statements": [
														{
															"nativeSrc": "3744:27:8",
															"nodeType": "YulAssignment",
															"src": "3744:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3759:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3759:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3766:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3766:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3755:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3755:3:8"
																},
																"nativeSrc": "3755:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3755:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3744:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3744:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3691:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3716:5:8",
														"nodeType": "YulTypedName",
														"src": "3716:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3726:7:8",
														"nodeType": "YulTypedName",
														"src": "3726:7:8",
														"type": ""
													}
												],
												"src": "3691:86:8"
											},
											{
												"body": {
													"nativeSrc": "3844:51:8",
													"nodeType": "YulBlock",
													"src": "3844:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3861:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3882:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3882:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "3866:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "3866:15:8"
																		},
																		"nativeSrc": "3866:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3866:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3854:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:8"
																},
																"nativeSrc": "3854:35:8",
																"nodeType": "YulFunctionCall",
																"src": "3854:35:8"
															},
															"nativeSrc": "3854:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "3854:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "3783:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3832:5:8",
														"nodeType": "YulTypedName",
														"src": "3832:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3839:3:8",
														"nodeType": "YulTypedName",
														"src": "3839:3:8",
														"type": ""
													}
												],
												"src": "3783:112:8"
											},
											{
												"body": {
													"nativeSrc": "3995:120:8",
													"nodeType": "YulBlock",
													"src": "3995:120:8",
													"statements": [
														{
															"nativeSrc": "4005:26:8",
															"nodeType": "YulAssignment",
															"src": "4005:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4017:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4017:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4028:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4013:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																},
																"nativeSrc": "4013:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4013:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4005:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4081:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4081:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4094:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4105:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4105:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4090:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4090:3:8"
																		},
																		"nativeSrc": "4090:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4090:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4041:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4041:39:8"
																},
																"nativeSrc": "4041:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4041:67:8"
															},
															"nativeSrc": "4041:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4041:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3901:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3967:9:8",
														"nodeType": "YulTypedName",
														"src": "3967:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3979:6:8",
														"nodeType": "YulTypedName",
														"src": "3979:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3990:4:8",
														"nodeType": "YulTypedName",
														"src": "3990:4:8",
														"type": ""
													}
												],
												"src": "3901:214:8"
											},
											{
												"body": {
													"nativeSrc": "4221:519:8",
													"nodeType": "YulBlock",
													"src": "4221:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4267:83:8",
																"nodeType": "YulBlock",
																"src": "4267:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4269:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4269:77:8"
																			},
																			"nativeSrc": "4269:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:79:8"
																		},
																		"nativeSrc": "4269:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4269:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4242:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4242:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4251:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4251:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4238:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4238:3:8"
																		},
																		"nativeSrc": "4238:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4234:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4234:3:8"
																},
																"nativeSrc": "4234:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4234:32:8"
															},
															"nativeSrc": "4231:119:8",
															"nodeType": "YulIf",
															"src": "4231:119:8"
														},
														{
															"nativeSrc": "4360:117:8",
															"nodeType": "YulBlock",
															"src": "4360:117:8",
															"statements": [
																{
																	"nativeSrc": "4375:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4375:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4389:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4389:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4379:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4379:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4404:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4404:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4439:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4439:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4450:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4435:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4435:3:8"
																				},
																				"nativeSrc": "4435:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4435:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4459:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4459:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4414:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4414:20:8"
																		},
																		"nativeSrc": "4414:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4414:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4404:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4404:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4487:118:8",
															"nodeType": "YulBlock",
															"src": "4487:118:8",
															"statements": [
																{
																	"nativeSrc": "4502:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4502:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4516:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4506:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4506:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4532:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4532:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4567:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4567:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4578:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4578:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4563:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:8"
																				},
																				"nativeSrc": "4563:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4563:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4587:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4587:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4542:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4542:20:8"
																		},
																		"nativeSrc": "4542:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4542:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4532:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4532:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4615:118:8",
															"nodeType": "YulBlock",
															"src": "4615:118:8",
															"statements": [
																{
																	"nativeSrc": "4630:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4630:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4644:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4634:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4634:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4660:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4660:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4695:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4695:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4706:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4706:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4691:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4691:3:8"
																				},
																				"nativeSrc": "4691:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4691:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4715:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4715:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4670:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4670:20:8"
																		},
																		"nativeSrc": "4670:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4660:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4660:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4121:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4175:9:8",
														"nodeType": "YulTypedName",
														"src": "4175:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4186:7:8",
														"nodeType": "YulTypedName",
														"src": "4186:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4198:6:8",
														"nodeType": "YulTypedName",
														"src": "4198:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4206:6:8",
														"nodeType": "YulTypedName",
														"src": "4206:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4214:6:8",
														"nodeType": "YulTypedName",
														"src": "4214:6:8",
														"type": ""
													}
												],
												"src": "4121:619:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5170:28:8",
													"nodeType": "YulBlock",
													"src": "5170:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:8"
																},
																"nativeSrc": "5180:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5180:12:8"
															},
															"nativeSrc": "5180:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5180:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5081:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:117:8"
											},
											{
												"body": {
													"nativeSrc": "5293:28:8",
													"nodeType": "YulBlock",
													"src": "5293:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5310:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5313:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5303:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:8"
																},
																"nativeSrc": "5303:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5303:12:8"
															},
															"nativeSrc": "5303:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5303:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5204:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5204:117:8"
											},
											{
												"body": {
													"nativeSrc": "5355:152:8",
													"nodeType": "YulBlock",
													"src": "5355:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5372:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5372:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5375:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5365:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:8"
																},
																"nativeSrc": "5365:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5365:88:8"
															},
															"nativeSrc": "5365:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5365:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5469:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5469:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5472:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5472:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5462:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:8"
																},
																"nativeSrc": "5462:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5462:15:8"
															},
															"nativeSrc": "5462:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5462:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5493:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5493:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5496:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5496:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5486:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5486:6:8"
																},
																"nativeSrc": "5486:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5486:15:8"
															},
															"nativeSrc": "5486:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5486:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5327:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5327:180:8"
											},
											{
												"body": {
													"nativeSrc": "5556:238:8",
													"nodeType": "YulBlock",
													"src": "5556:238:8",
													"statements": [
														{
															"nativeSrc": "5566:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5566:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5588:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5588:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5618:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5618:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5596:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "5596:21:8"
																		},
																		"nativeSrc": "5596:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5584:3:8"
																},
																"nativeSrc": "5584:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5584:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5570:10:8",
																	"nodeType": "YulTypedName",
																	"src": "5570:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5735:22:8",
																"nodeType": "YulBlock",
																"src": "5735:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5737:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5737:16:8"
																			},
																			"nativeSrc": "5737:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5737:18:8"
																		},
																		"nativeSrc": "5737:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5737:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5678:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5678:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5690:18:8",
																				"nodeType": "YulLiteral",
																				"src": "5690:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5675:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5675:2:8"
																		},
																		"nativeSrc": "5675:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5675:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5714:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5714:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5726:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5726:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5711:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5711:2:8"
																		},
																		"nativeSrc": "5711:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5711:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5672:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5672:2:8"
																},
																"nativeSrc": "5672:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5672:62:8"
															},
															"nativeSrc": "5669:88:8",
															"nodeType": "YulIf",
															"src": "5669:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5773:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5773:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5777:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5777:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5766:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:8"
																},
																"nativeSrc": "5766:22:8",
																"nodeType": "YulFunctionCall",
																"src": "5766:22:8"
															},
															"nativeSrc": "5766:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "5766:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5513:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5542:6:8",
														"nodeType": "YulTypedName",
														"src": "5542:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5550:4:8",
														"nodeType": "YulTypedName",
														"src": "5550:4:8",
														"type": ""
													}
												],
												"src": "5513:281:8"
											},
											{
												"body": {
													"nativeSrc": "5841:88:8",
													"nodeType": "YulBlock",
													"src": "5841:88:8",
													"statements": [
														{
															"nativeSrc": "5851:30:8",
															"nodeType": "YulAssignment",
															"src": "5851:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5861:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5861:18:8"
																},
																"nativeSrc": "5861:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5861:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5851:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5910:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5910:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5918:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5918:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5890:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "5890:19:8"
																},
																"nativeSrc": "5890:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5890:33:8"
															},
															"nativeSrc": "5890:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5890:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5800:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5825:4:8",
														"nodeType": "YulTypedName",
														"src": "5825:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5834:6:8",
														"nodeType": "YulTypedName",
														"src": "5834:6:8",
														"type": ""
													}
												],
												"src": "5800:129:8"
											},
											{
												"body": {
													"nativeSrc": "6002:241:8",
													"nodeType": "YulBlock",
													"src": "6002:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6107:22:8",
																"nodeType": "YulBlock",
																"src": "6107:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6109:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6109:16:8"
																			},
																			"nativeSrc": "6109:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6109:18:8"
																		},
																		"nativeSrc": "6109:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6109:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6079:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6079:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6087:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6087:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6076:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6076:2:8"
																},
																"nativeSrc": "6076:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6076:30:8"
															},
															"nativeSrc": "6073:56:8",
															"nodeType": "YulIf",
															"src": "6073:56:8"
														},
														{
															"nativeSrc": "6139:37:8",
															"nodeType": "YulAssignment",
															"src": "6139:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6169:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6147:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "6147:21:8"
																},
																"nativeSrc": "6147:29:8",
																"nodeType": "YulFunctionCall",
																"src": "6147:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6139:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6139:4:8"
																}
															]
														},
														{
															"nativeSrc": "6213:23:8",
															"nodeType": "YulAssignment",
															"src": "6213:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6225:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6225:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6231:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6231:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6221:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:8"
																},
																"nativeSrc": "6221:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6221:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6213:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6213:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5935:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5986:6:8",
														"nodeType": "YulTypedName",
														"src": "5986:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5997:4:8",
														"nodeType": "YulTypedName",
														"src": "5997:4:8",
														"type": ""
													}
												],
												"src": "5935:308:8"
											},
											{
												"body": {
													"nativeSrc": "6313:84:8",
													"nodeType": "YulBlock",
													"src": "6313:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6337:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6337:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6342:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6342:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6347:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6347:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6324:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6324:12:8"
																},
																"nativeSrc": "6324:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6324:30:8"
															},
															"nativeSrc": "6324:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6324:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6374:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6374:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6379:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6379:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6370:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6370:3:8"
																		},
																		"nativeSrc": "6370:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6370:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6388:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6388:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6363:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:8"
																},
																"nativeSrc": "6363:27:8",
																"nodeType": "YulFunctionCall",
																"src": "6363:27:8"
															},
															"nativeSrc": "6363:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "6363:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6249:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6295:3:8",
														"nodeType": "YulTypedName",
														"src": "6295:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6300:3:8",
														"nodeType": "YulTypedName",
														"src": "6300:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6305:6:8",
														"nodeType": "YulTypedName",
														"src": "6305:6:8",
														"type": ""
													}
												],
												"src": "6249:148:8"
											},
											{
												"body": {
													"nativeSrc": "6487:341:8",
													"nodeType": "YulBlock",
													"src": "6487:341:8",
													"statements": [
														{
															"nativeSrc": "6497:75:8",
															"nodeType": "YulAssignment",
															"src": "6497:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6564:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6564:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6522:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "6522:41:8"
																		},
																		"nativeSrc": "6522:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6522:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6506:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "6506:15:8"
																},
																"nativeSrc": "6506:66:8",
																"nodeType": "YulFunctionCall",
																"src": "6506:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6497:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6497:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6588:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6588:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6595:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6595:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6581:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6581:6:8"
																},
																"nativeSrc": "6581:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6581:21:8"
															},
															"nativeSrc": "6581:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6581:21:8"
														},
														{
															"nativeSrc": "6611:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6611:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6626:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6626:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6633:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6633:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6622:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6622:3:8"
																},
																"nativeSrc": "6622:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6622:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6615:3:8",
																	"nodeType": "YulTypedName",
																	"src": "6615:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6676:83:8",
																"nodeType": "YulBlock",
																"src": "6676:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6678:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6678:77:8"
																			},
																			"nativeSrc": "6678:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6678:79:8"
																		},
																		"nativeSrc": "6678:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6678:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6657:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6657:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6662:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6662:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6653:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6653:3:8"
																		},
																		"nativeSrc": "6653:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6653:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6671:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6671:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6650:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6650:2:8"
																},
																"nativeSrc": "6650:25:8",
																"nodeType": "YulFunctionCall",
																"src": "6650:25:8"
															},
															"nativeSrc": "6647:112:8",
															"nodeType": "YulIf",
															"src": "6647:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6805:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6805:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6810:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6810:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6815:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6815:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6768:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "6768:36:8"
																},
																"nativeSrc": "6768:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6768:54:8"
															},
															"nativeSrc": "6768:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "6768:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6403:425:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6460:3:8",
														"nodeType": "YulTypedName",
														"src": "6460:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6465:6:8",
														"nodeType": "YulTypedName",
														"src": "6465:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6473:3:8",
														"nodeType": "YulTypedName",
														"src": "6473:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6481:5:8",
														"nodeType": "YulTypedName",
														"src": "6481:5:8",
														"type": ""
													}
												],
												"src": "6403:425:8"
											},
											{
												"body": {
													"nativeSrc": "6910:278:8",
													"nodeType": "YulBlock",
													"src": "6910:278:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6959:83:8",
																"nodeType": "YulBlock",
																"src": "6959:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6961:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6961:77:8"
																			},
																			"nativeSrc": "6961:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6961:79:8"
																		},
																		"nativeSrc": "6961:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6961:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6938:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6938:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6946:4:8",
																						"nodeType": "YulLiteral",
																						"src": "6946:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6934:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6934:3:8"
																				},
																				"nativeSrc": "6934:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6934:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6953:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6953:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6930:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:8"
																		},
																		"nativeSrc": "6930:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6923:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:8"
																},
																"nativeSrc": "6923:35:8",
																"nodeType": "YulFunctionCall",
																"src": "6923:35:8"
															},
															"nativeSrc": "6920:122:8",
															"nodeType": "YulIf",
															"src": "6920:122:8"
														},
														{
															"nativeSrc": "7051:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7051:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7078:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7078:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7065:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7065:12:8"
																},
																"nativeSrc": "7065:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7065:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7055:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7055:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7094:88:8",
															"nodeType": "YulAssignment",
															"src": "7094:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7155:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7163:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7163:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7151:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7151:3:8"
																		},
																		"nativeSrc": "7151:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7151:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7170:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7170:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7178:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7178:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7103:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "7103:47:8"
																},
																"nativeSrc": "7103:79:8",
																"nodeType": "YulFunctionCall",
																"src": "7103:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7094:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6848:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6888:6:8",
														"nodeType": "YulTypedName",
														"src": "6888:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6896:3:8",
														"nodeType": "YulTypedName",
														"src": "6896:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6904:5:8",
														"nodeType": "YulTypedName",
														"src": "6904:5:8",
														"type": ""
													}
												],
												"src": "6848:340:8"
											},
											{
												"body": {
													"nativeSrc": "7287:561:8",
													"nodeType": "YulBlock",
													"src": "7287:561:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7333:83:8",
																"nodeType": "YulBlock",
																"src": "7333:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7335:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7335:77:8"
																			},
																			"nativeSrc": "7335:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7335:79:8"
																		},
																		"nativeSrc": "7335:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7335:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7308:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7308:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7317:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7304:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7304:3:8"
																		},
																		"nativeSrc": "7304:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7304:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7329:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7329:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7300:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7300:3:8"
																},
																"nativeSrc": "7300:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7300:32:8"
															},
															"nativeSrc": "7297:119:8",
															"nodeType": "YulIf",
															"src": "7297:119:8"
														},
														{
															"nativeSrc": "7426:287:8",
															"nodeType": "YulBlock",
															"src": "7426:287:8",
															"statements": [
																{
																	"nativeSrc": "7441:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7441:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7472:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7483:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7483:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7468:3:8"
																				},
																				"nativeSrc": "7468:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7468:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7455:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "7455:12:8"
																		},
																		"nativeSrc": "7455:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7455:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7445:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7445:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7533:83:8",
																		"nodeType": "YulBlock",
																		"src": "7533:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7535:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "7535:77:8"
																					},
																					"nativeSrc": "7535:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7535:79:8"
																				},
																				"nativeSrc": "7535:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7535:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7505:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7505:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7513:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7513:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7502:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7502:2:8"
																		},
																		"nativeSrc": "7502:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7502:30:8"
																	},
																	"nativeSrc": "7499:117:8",
																	"nodeType": "YulIf",
																	"src": "7499:117:8"
																},
																{
																	"nativeSrc": "7630:73:8",
																	"nodeType": "YulAssignment",
																	"src": "7630:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7675:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7675:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7686:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7686:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7671:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7671:3:8"
																				},
																				"nativeSrc": "7671:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7671:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7695:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7695:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7640:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "7640:30:8"
																		},
																		"nativeSrc": "7640:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7640:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7630:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7630:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7723:118:8",
															"nodeType": "YulBlock",
															"src": "7723:118:8",
															"statements": [
																{
																	"nativeSrc": "7738:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7738:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7752:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7742:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7742:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7768:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7768:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7803:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7803:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7814:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7814:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7799:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7799:3:8"
																				},
																				"nativeSrc": "7799:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7799:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7823:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7823:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7778:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7778:20:8"
																		},
																		"nativeSrc": "7778:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7778:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7768:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7768:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "7194:654:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7249:9:8",
														"nodeType": "YulTypedName",
														"src": "7249:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7260:7:8",
														"nodeType": "YulTypedName",
														"src": "7260:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7272:6:8",
														"nodeType": "YulTypedName",
														"src": "7272:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7280:6:8",
														"nodeType": "YulTypedName",
														"src": "7280:6:8",
														"type": ""
													}
												],
												"src": "7194:654:8"
											},
											{
												"body": {
													"nativeSrc": "7920:263:8",
													"nodeType": "YulBlock",
													"src": "7920:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7966:83:8",
																"nodeType": "YulBlock",
																"src": "7966:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7968:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7968:77:8"
																			},
																			"nativeSrc": "7968:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7968:79:8"
																		},
																		"nativeSrc": "7968:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7968:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7941:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7941:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7950:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7950:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7937:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7937:3:8"
																		},
																		"nativeSrc": "7937:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7937:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7962:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7962:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7933:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7933:3:8"
																},
																"nativeSrc": "7933:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7933:32:8"
															},
															"nativeSrc": "7930:119:8",
															"nodeType": "YulIf",
															"src": "7930:119:8"
														},
														{
															"nativeSrc": "8059:117:8",
															"nodeType": "YulBlock",
															"src": "8059:117:8",
															"statements": [
																{
																	"nativeSrc": "8074:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8074:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8088:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8088:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8078:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8078:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8103:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8103:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8138:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8138:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8149:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8149:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8134:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8134:3:8"
																				},
																				"nativeSrc": "8134:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8134:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8158:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8158:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8113:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8113:20:8"
																		},
																		"nativeSrc": "8113:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8113:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8103:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8103:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7854:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7890:9:8",
														"nodeType": "YulTypedName",
														"src": "7890:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7901:7:8",
														"nodeType": "YulTypedName",
														"src": "7901:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7913:6:8",
														"nodeType": "YulTypedName",
														"src": "7913:6:8",
														"type": ""
													}
												],
												"src": "7854:329:8"
											},
											{
												"body": {
													"nativeSrc": "8254:53:8",
													"nodeType": "YulBlock",
													"src": "8254:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8271:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8271:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8294:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8294:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8276:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8276:17:8"
																		},
																		"nativeSrc": "8276:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8276:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8264:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8264:6:8"
																},
																"nativeSrc": "8264:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8264:37:8"
															},
															"nativeSrc": "8264:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8264:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8189:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8242:5:8",
														"nodeType": "YulTypedName",
														"src": "8242:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8249:3:8",
														"nodeType": "YulTypedName",
														"src": "8249:3:8",
														"type": ""
													}
												],
												"src": "8189:118:8"
											},
											{
												"body": {
													"nativeSrc": "8411:124:8",
													"nodeType": "YulBlock",
													"src": "8411:124:8",
													"statements": [
														{
															"nativeSrc": "8421:26:8",
															"nodeType": "YulAssignment",
															"src": "8421:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8433:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8433:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8444:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8444:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8429:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8429:3:8"
																},
																"nativeSrc": "8429:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8429:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8421:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8501:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8501:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8514:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8514:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8525:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8525:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8510:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8510:3:8"
																		},
																		"nativeSrc": "8510:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8510:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8457:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8457:43:8"
																},
																"nativeSrc": "8457:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8457:71:8"
															},
															"nativeSrc": "8457:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8457:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8313:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8383:9:8",
														"nodeType": "YulTypedName",
														"src": "8383:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8395:6:8",
														"nodeType": "YulTypedName",
														"src": "8395:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8406:4:8",
														"nodeType": "YulTypedName",
														"src": "8406:4:8",
														"type": ""
													}
												],
												"src": "8313:222:8"
											},
											{
												"body": {
													"nativeSrc": "8582:77:8",
													"nodeType": "YulBlock",
													"src": "8582:77:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8637:16:8",
																"nodeType": "YulBlock",
																"src": "8637:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8646:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8646:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8649:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8649:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8639:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8639:6:8"
																			},
																			"nativeSrc": "8639:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8639:12:8"
																		},
																		"nativeSrc": "8639:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8639:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8605:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8605:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8628:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8628:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "8612:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "8612:15:8"
																				},
																				"nativeSrc": "8612:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8612:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8602:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8602:2:8"
																		},
																		"nativeSrc": "8602:33:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8595:6:8"
																},
																"nativeSrc": "8595:41:8",
																"nodeType": "YulFunctionCall",
																"src": "8595:41:8"
															},
															"nativeSrc": "8592:61:8",
															"nodeType": "YulIf",
															"src": "8592:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "8541:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8575:5:8",
														"nodeType": "YulTypedName",
														"src": "8575:5:8",
														"type": ""
													}
												],
												"src": "8541:118:8"
											},
											{
												"body": {
													"nativeSrc": "8715:85:8",
													"nodeType": "YulBlock",
													"src": "8715:85:8",
													"statements": [
														{
															"nativeSrc": "8725:29:8",
															"nodeType": "YulAssignment",
															"src": "8725:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8747:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8747:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8734:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "8734:12:8"
																},
																"nativeSrc": "8734:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8734:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8725:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8725:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8788:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8788:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "8763:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "8763:24:8"
																},
																"nativeSrc": "8763:31:8",
																"nodeType": "YulFunctionCall",
																"src": "8763:31:8"
															},
															"nativeSrc": "8763:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "8763:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "8665:135:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8693:6:8",
														"nodeType": "YulTypedName",
														"src": "8693:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8701:3:8",
														"nodeType": "YulTypedName",
														"src": "8701:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8709:5:8",
														"nodeType": "YulTypedName",
														"src": "8709:5:8",
														"type": ""
													}
												],
												"src": "8665:135:8"
											},
											{
												"body": {
													"nativeSrc": "8870:261:8",
													"nodeType": "YulBlock",
													"src": "8870:261:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8916:83:8",
																"nodeType": "YulBlock",
																"src": "8916:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8918:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8918:77:8"
																			},
																			"nativeSrc": "8918:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8918:79:8"
																		},
																		"nativeSrc": "8918:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8918:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8891:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8891:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8900:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8900:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8887:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8887:3:8"
																		},
																		"nativeSrc": "8887:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8887:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8912:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8883:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:8"
																},
																"nativeSrc": "8883:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8883:32:8"
															},
															"nativeSrc": "8880:119:8",
															"nodeType": "YulIf",
															"src": "8880:119:8"
														},
														{
															"nativeSrc": "9009:115:8",
															"nodeType": "YulBlock",
															"src": "9009:115:8",
															"statements": [
																{
																	"nativeSrc": "9024:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9024:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9038:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9038:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9028:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9028:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9053:61:8",
																	"nodeType": "YulAssignment",
																	"src": "9053:61:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9086:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9086:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9097:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9097:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9082:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9082:3:8"
																				},
																				"nativeSrc": "9082:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9082:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9106:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9106:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "9063:18:8",
																			"nodeType": "YulIdentifier",
																			"src": "9063:18:8"
																		},
																		"nativeSrc": "9063:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9063:51:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9053:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9053:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "8806:325:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8840:9:8",
														"nodeType": "YulTypedName",
														"src": "8840:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8851:7:8",
														"nodeType": "YulTypedName",
														"src": "8851:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8863:6:8",
														"nodeType": "YulTypedName",
														"src": "8863:6:8",
														"type": ""
													}
												],
												"src": "8806:325:8"
											},
											{
												"body": {
													"nativeSrc": "9232:40:8",
													"nodeType": "YulBlock",
													"src": "9232:40:8",
													"statements": [
														{
															"nativeSrc": "9243:22:8",
															"nodeType": "YulAssignment",
															"src": "9243:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9259:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9259:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9253:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9253:5:8"
																},
																"nativeSrc": "9253:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9253:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9243:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9137:135:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9215:5:8",
														"nodeType": "YulTypedName",
														"src": "9215:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9225:6:8",
														"nodeType": "YulTypedName",
														"src": "9225:6:8",
														"type": ""
													}
												],
												"src": "9137:135:8"
											},
											{
												"body": {
													"nativeSrc": "9410:73:8",
													"nodeType": "YulBlock",
													"src": "9410:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9427:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9427:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9432:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9432:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9420:6:8"
																},
																"nativeSrc": "9420:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9420:19:8"
															},
															"nativeSrc": "9420:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "9420:19:8"
														},
														{
															"nativeSrc": "9448:29:8",
															"nodeType": "YulAssignment",
															"src": "9448:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9467:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9467:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9472:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9472:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9463:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9463:3:8"
																},
																"nativeSrc": "9463:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9463:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9448:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9448:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9278:205:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9382:3:8",
														"nodeType": "YulTypedName",
														"src": "9382:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9387:6:8",
														"nodeType": "YulTypedName",
														"src": "9387:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9398:11:8",
														"nodeType": "YulTypedName",
														"src": "9398:11:8",
														"type": ""
													}
												],
												"src": "9278:205:8"
											},
											{
												"body": {
													"nativeSrc": "9582:60:8",
													"nodeType": "YulBlock",
													"src": "9582:60:8",
													"statements": [
														{
															"nativeSrc": "9592:11:8",
															"nodeType": "YulAssignment",
															"src": "9592:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "9600:3:8",
																"nodeType": "YulIdentifier",
																"src": "9600:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9592:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9592:4:8"
																}
															]
														},
														{
															"nativeSrc": "9613:22:8",
															"nodeType": "YulAssignment",
															"src": "9613:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9625:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9625:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9630:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9630:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9621:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:8"
																},
																"nativeSrc": "9621:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9621:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9613:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9613:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9489:153:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9569:3:8",
														"nodeType": "YulTypedName",
														"src": "9569:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9577:4:8",
														"nodeType": "YulTypedName",
														"src": "9577:4:8",
														"type": ""
													}
												],
												"src": "9489:153:8"
											},
											{
												"body": {
													"nativeSrc": "9734:73:8",
													"nodeType": "YulBlock",
													"src": "9734:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9751:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9751:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9756:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9756:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9744:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9744:6:8"
																},
																"nativeSrc": "9744:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9744:19:8"
															},
															"nativeSrc": "9744:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "9744:19:8"
														},
														{
															"nativeSrc": "9772:29:8",
															"nodeType": "YulAssignment",
															"src": "9772:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9791:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9791:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9796:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9796:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9787:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:8"
																},
																"nativeSrc": "9787:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9787:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9772:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9772:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "9648:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9706:3:8",
														"nodeType": "YulTypedName",
														"src": "9706:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9711:6:8",
														"nodeType": "YulTypedName",
														"src": "9711:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9722:11:8",
														"nodeType": "YulTypedName",
														"src": "9722:11:8",
														"type": ""
													}
												],
												"src": "9648:159:8"
											},
											{
												"body": {
													"nativeSrc": "9895:275:8",
													"nodeType": "YulBlock",
													"src": "9895:275:8",
													"statements": [
														{
															"nativeSrc": "9905:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9905:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9952:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9952:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9919:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "9919:32:8"
																},
																"nativeSrc": "9919:39:8",
																"nodeType": "YulFunctionCall",
																"src": "9919:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9909:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9909:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9967:68:8",
															"nodeType": "YulAssignment",
															"src": "9967:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10023:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10023:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10028:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10028:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "9974:48:8",
																	"nodeType": "YulIdentifier",
																	"src": "9974:48:8"
																},
																"nativeSrc": "9974:61:8",
																"nodeType": "YulFunctionCall",
																"src": "9974:61:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9967:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9967:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10083:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10083:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10090:4:8",
																				"nodeType": "YulLiteral",
																				"src": "10090:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10079:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10079:3:8"
																		},
																		"nativeSrc": "10079:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10079:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10097:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10097:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10102:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10102:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10044:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "10044:34:8"
																},
																"nativeSrc": "10044:65:8",
																"nodeType": "YulFunctionCall",
																"src": "10044:65:8"
															},
															"nativeSrc": "10044:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "10044:65:8"
														},
														{
															"nativeSrc": "10118:46:8",
															"nodeType": "YulAssignment",
															"src": "10118:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10129:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10129:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10156:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10156:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10134:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "10134:21:8"
																		},
																		"nativeSrc": "10134:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10134:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10125:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:8"
																},
																"nativeSrc": "10125:39:8",
																"nodeType": "YulFunctionCall",
																"src": "10125:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10118:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "9813:357:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9876:5:8",
														"nodeType": "YulTypedName",
														"src": "9876:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9883:3:8",
														"nodeType": "YulTypedName",
														"src": "9883:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9891:3:8",
														"nodeType": "YulTypedName",
														"src": "9891:3:8",
														"type": ""
													}
												],
												"src": "9813:357:8"
											},
											{
												"body": {
													"nativeSrc": "10227:51:8",
													"nodeType": "YulBlock",
													"src": "10227:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10244:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10244:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10265:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10265:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "10249:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "10249:15:8"
																		},
																		"nativeSrc": "10249:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10249:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10237:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10237:6:8"
																},
																"nativeSrc": "10237:35:8",
																"nodeType": "YulFunctionCall",
																"src": "10237:35:8"
															},
															"nativeSrc": "10237:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "10237:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nativeSrc": "10176:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10215:5:8",
														"nodeType": "YulTypedName",
														"src": "10215:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10222:3:8",
														"nodeType": "YulTypedName",
														"src": "10222:3:8",
														"type": ""
													}
												],
												"src": "10176:102:8"
											},
											{
												"body": {
													"nativeSrc": "10339:53:8",
													"nodeType": "YulBlock",
													"src": "10339:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10356:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10356:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10379:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10379:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10361:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10361:17:8"
																		},
																		"nativeSrc": "10361:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10361:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10349:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10349:6:8"
																},
																"nativeSrc": "10349:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10349:37:8"
															},
															"nativeSrc": "10349:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10349:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "10284:108:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10327:5:8",
														"nodeType": "YulTypedName",
														"src": "10327:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10334:3:8",
														"nodeType": "YulTypedName",
														"src": "10334:3:8",
														"type": ""
													}
												],
												"src": "10284:108:8"
											},
											{
												"body": {
													"nativeSrc": "10560:655:8",
													"nodeType": "YulBlock",
													"src": "10560:655:8",
													"statements": [
														{
															"nativeSrc": "10570:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10570:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10586:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10586:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10591:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10591:4:8",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10582:3:8"
																},
																"nativeSrc": "10582:14:8",
																"nodeType": "YulFunctionCall",
																"src": "10582:14:8"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "10574:4:8",
																	"nodeType": "YulTypedName",
																	"src": "10574:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10606:235:8",
															"nodeType": "YulBlock",
															"src": "10606:235:8",
															"statements": [
																{
																	"nativeSrc": "10641:43:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10641:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10671:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10671:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10678:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10678:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10667:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10667:3:8"
																				},
																				"nativeSrc": "10667:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10667:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10661:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "10661:5:8"
																		},
																		"nativeSrc": "10661:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10661:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10645:12:8",
																			"nodeType": "YulTypedName",
																			"src": "10645:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10709:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "10709:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10714:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10714:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10705:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10705:3:8"
																				},
																				"nativeSrc": "10705:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10705:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10725:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "10725:4:8"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10731:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "10731:3:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10721:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10721:3:8"
																				},
																				"nativeSrc": "10721:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10721:14:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10698:6:8"
																		},
																		"nativeSrc": "10698:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10698:38:8"
																	},
																	"nativeSrc": "10698:38:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "10698:38:8"
																},
																{
																	"nativeSrc": "10749:81:8",
																	"nodeType": "YulAssignment",
																	"src": "10749:81:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10811:12:8",
																				"nodeType": "YulIdentifier",
																				"src": "10811:12:8"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10825:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10825:4:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "10757:53:8",
																			"nodeType": "YulIdentifier",
																			"src": "10757:53:8"
																		},
																		"nativeSrc": "10757:73:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10757:73:8"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10749:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "10749:4:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10851:162:8",
															"nodeType": "YulBlock",
															"src": "10851:162:8",
															"statements": [
																{
																	"nativeSrc": "10888:43:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10888:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10918:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "10918:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10925:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10925:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10914:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10914:3:8"
																				},
																				"nativeSrc": "10914:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10914:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10908:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "10908:5:8"
																		},
																		"nativeSrc": "10908:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10908:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10892:12:8",
																			"nodeType": "YulTypedName",
																			"src": "10892:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10974:12:8",
																				"nodeType": "YulIdentifier",
																				"src": "10974:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10992:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "10992:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10997:4:8",
																						"nodeType": "YulLiteral",
																						"src": "10997:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10988:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10988:3:8"
																				},
																				"nativeSrc": "10988:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10988:14:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nativeSrc": "10944:29:8",
																			"nodeType": "YulIdentifier",
																			"src": "10944:29:8"
																		},
																		"nativeSrc": "10944:59:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10944:59:8"
																	},
																	"nativeSrc": "10944:59:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "10944:59:8"
																}
															]
														},
														{
															"nativeSrc": "11023:165:8",
															"nodeType": "YulBlock",
															"src": "11023:165:8",
															"statements": [
																{
																	"nativeSrc": "11059:43:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11059:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11089:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11089:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11096:4:8",
																						"nodeType": "YulLiteral",
																						"src": "11096:4:8",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11085:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11085:3:8"
																				},
																				"nativeSrc": "11085:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11085:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11079:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "11079:5:8"
																		},
																		"nativeSrc": "11079:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11079:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11063:12:8",
																			"nodeType": "YulTypedName",
																			"src": "11063:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11149:12:8",
																				"nodeType": "YulIdentifier",
																				"src": "11149:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11167:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "11167:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11172:4:8",
																						"nodeType": "YulLiteral",
																						"src": "11172:4:8",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11163:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11163:3:8"
																				},
																				"nativeSrc": "11163:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11163:14:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11115:33:8",
																			"nodeType": "YulIdentifier",
																			"src": "11115:33:8"
																		},
																		"nativeSrc": "11115:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11115:63:8"
																	},
																	"nativeSrc": "11115:63:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "11115:63:8"
																}
															]
														},
														{
															"nativeSrc": "11198:11:8",
															"nodeType": "YulAssignment",
															"src": "11198:11:8",
															"value": {
																"name": "tail",
																"nativeSrc": "11205:4:8",
																"nodeType": "YulIdentifier",
																"src": "11205:4:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11198:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11198:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr",
												"nativeSrc": "10454:761:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10539:5:8",
														"nodeType": "YulTypedName",
														"src": "10539:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10546:3:8",
														"nodeType": "YulTypedName",
														"src": "10546:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10555:3:8",
														"nodeType": "YulTypedName",
														"src": "10555:3:8",
														"type": ""
													}
												],
												"src": "10454:761:8"
											},
											{
												"body": {
													"nativeSrc": "11343:118:8",
													"nodeType": "YulBlock",
													"src": "11343:118:8",
													"statements": [
														{
															"nativeSrc": "11353:102:8",
															"nodeType": "YulAssignment",
															"src": "11353:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11443:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11443:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11451:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11451:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr",
																	"nativeSrc": "11367:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "11367:75:8"
																},
																"nativeSrc": "11367:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11367:88:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "11353:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "11353:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr",
												"nativeSrc": "11221:240:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "11316:6:8",
														"nodeType": "YulTypedName",
														"src": "11316:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11324:3:8",
														"nodeType": "YulTypedName",
														"src": "11324:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "11332:10:8",
														"nodeType": "YulTypedName",
														"src": "11332:10:8",
														"type": ""
													}
												],
												"src": "11221:240:8"
											},
											{
												"body": {
													"nativeSrc": "11563:38:8",
													"nodeType": "YulBlock",
													"src": "11563:38:8",
													"statements": [
														{
															"nativeSrc": "11573:22:8",
															"nodeType": "YulAssignment",
															"src": "11573:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11585:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11585:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11590:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11590:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11581:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11581:3:8"
																},
																"nativeSrc": "11581:14:8",
																"nodeType": "YulFunctionCall",
																"src": "11581:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "11573:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11573:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11467:134:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11550:3:8",
														"nodeType": "YulTypedName",
														"src": "11550:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "11558:4:8",
														"nodeType": "YulTypedName",
														"src": "11558:4:8",
														"type": ""
													}
												],
												"src": "11467:134:8"
											},
											{
												"body": {
													"nativeSrc": "11833:913:8",
													"nodeType": "YulBlock",
													"src": "11833:913:8",
													"statements": [
														{
															"nativeSrc": "11843:89:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11843:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11926:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11926:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "11857:68:8",
																	"nodeType": "YulIdentifier",
																	"src": "11857:68:8"
																},
																"nativeSrc": "11857:75:8",
																"nodeType": "YulFunctionCall",
																"src": "11857:75:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11847:6:8",
																	"nodeType": "YulTypedName",
																	"src": "11847:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11941:114:8",
															"nodeType": "YulAssignment",
															"src": "11941:114:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12043:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12043:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12048:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12048:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "11948:94:8",
																	"nodeType": "YulIdentifier",
																	"src": "11948:94:8"
																},
																"nativeSrc": "11948:107:8",
																"nodeType": "YulFunctionCall",
																"src": "11948:107:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11941:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11941:3:8"
																}
															]
														},
														{
															"nativeSrc": "12064:20:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12064:20:8",
															"value": {
																"name": "pos",
																"nativeSrc": "12081:3:8",
																"nodeType": "YulIdentifier",
																"src": "12081:3:8"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "12068:9:8",
																	"nodeType": "YulTypedName",
																	"src": "12068:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12093:39:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12093:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12109:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12109:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12118:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12118:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12126:4:8",
																				"nodeType": "YulLiteral",
																				"src": "12126:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12114:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12114:3:8"
																		},
																		"nativeSrc": "12114:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12114:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12105:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12105:3:8"
																},
																"nativeSrc": "12105:27:8",
																"nodeType": "YulFunctionCall",
																"src": "12105:27:8"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "12097:4:8",
																	"nodeType": "YulTypedName",
																	"src": "12097:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12141:92:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12141:92:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12227:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12227:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "12156:70:8",
																	"nodeType": "YulIdentifier",
																	"src": "12156:70:8"
																},
																"nativeSrc": "12156:77:8",
																"nodeType": "YulFunctionCall",
																"src": "12156:77:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "12145:7:8",
																	"nodeType": "YulTypedName",
																	"src": "12145:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12242:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12242:21:8",
															"value": {
																"name": "baseRef",
																"nativeSrc": "12256:7:8",
																"nodeType": "YulIdentifier",
																"src": "12256:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "12246:6:8",
																	"nodeType": "YulTypedName",
																	"src": "12246:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12332:369:8",
																"nodeType": "YulBlock",
																"src": "12332:369:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "12353:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12353:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "12362:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "12362:4:8"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "12368:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "12368:9:8"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "12358:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "12358:3:8"
																					},
																					"nativeSrc": "12358:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "12358:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12346:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12346:6:8"
																			},
																			"nativeSrc": "12346:33:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12346:33:8"
																		},
																		"nativeSrc": "12346:33:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12346:33:8"
																	},
																	{
																		"nativeSrc": "12392:34:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12392:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12419:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "12419:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12413:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12413:5:8"
																			},
																			"nativeSrc": "12413:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12413:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "12396:13:8",
																				"nodeType": "YulTypedName",
																				"src": "12396:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12439:114:8",
																		"nodeType": "YulAssignment",
																		"src": "12439:114:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "12533:13:8",
																					"nodeType": "YulIdentifier",
																					"src": "12533:13:8"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "12548:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "12548:4:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr",
																				"nativeSrc": "12447:85:8",
																				"nodeType": "YulIdentifier",
																				"src": "12447:85:8"
																			},
																			"nativeSrc": "12447:106:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12447:106:8"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "12439:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12439:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12566:91:8",
																		"nodeType": "YulAssignment",
																		"src": "12566:91:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12650:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "12650:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "12576:73:8",
																				"nodeType": "YulIdentifier",
																				"src": "12576:73:8"
																			},
																			"nativeSrc": "12576:81:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12576:81:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "12566:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12566:6:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12670:21:8",
																		"nodeType": "YulAssignment",
																		"src": "12670:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "12681:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12681:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12686:4:8",
																					"nodeType": "YulLiteral",
																					"src": "12686:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12677:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12677:3:8"
																			},
																			"nativeSrc": "12677:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12677:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "12670:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12670:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12294:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12294:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12297:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12291:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12291:2:8"
																},
																"nativeSrc": "12291:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12291:13:8"
															},
															"nativeSrc": "12272:429:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12305:18:8",
																"nodeType": "YulBlock",
																"src": "12305:18:8",
																"statements": [
																	{
																		"nativeSrc": "12307:14:8",
																		"nodeType": "YulAssignment",
																		"src": "12307:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12316:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "12316:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12319:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12319:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12312:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12312:3:8"
																			},
																			"nativeSrc": "12312:9:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12312:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12307:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "12307:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12276:14:8",
																"nodeType": "YulBlock",
																"src": "12276:14:8",
																"statements": [
																	{
																		"nativeSrc": "12278:10:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12278:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12287:1:8",
																			"nodeType": "YulLiteral",
																			"src": "12287:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "12282:1:8",
																				"nodeType": "YulTypedName",
																				"src": "12282:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12272:429:8"
														},
														{
															"nativeSrc": "12710:11:8",
															"nodeType": "YulAssignment",
															"src": "12710:11:8",
															"value": {
																"name": "tail",
																"nativeSrc": "12717:4:8",
																"nodeType": "YulIdentifier",
																"src": "12717:4:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12710:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12710:3:8"
																}
															]
														},
														{
															"nativeSrc": "12730:10:8",
															"nodeType": "YulAssignment",
															"src": "12730:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "12737:3:8",
																"nodeType": "YulIdentifier",
																"src": "12737:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12730:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12730:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11667:1079:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11812:5:8",
														"nodeType": "YulTypedName",
														"src": "11812:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11819:3:8",
														"nodeType": "YulTypedName",
														"src": "11819:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11828:3:8",
														"nodeType": "YulTypedName",
														"src": "11828:3:8",
														"type": ""
													}
												],
												"src": "11667:1079:8"
											},
											{
												"body": {
													"nativeSrc": "12942:267:8",
													"nodeType": "YulBlock",
													"src": "12942:267:8",
													"statements": [
														{
															"nativeSrc": "12952:26:8",
															"nodeType": "YulAssignment",
															"src": "12952:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12964:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12964:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12975:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12975:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12960:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12960:3:8"
																},
																"nativeSrc": "12960:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12960:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12952:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12952:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12999:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12999:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13010:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13010:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12995:3:8"
																		},
																		"nativeSrc": "12995:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12995:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13018:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13018:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13024:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13024:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13014:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13014:3:8"
																		},
																		"nativeSrc": "13014:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13014:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12988:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12988:6:8"
																},
																"nativeSrc": "12988:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12988:47:8"
															},
															"nativeSrc": "12988:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12988:47:8"
														},
														{
															"nativeSrc": "13044:158:8",
															"nodeType": "YulAssignment",
															"src": "13044:158:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13188:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13188:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13197:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13197:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13052:135:8",
																	"nodeType": "YulIdentifier",
																	"src": "13052:135:8"
																},
																"nativeSrc": "13052:150:8",
																"nodeType": "YulFunctionCall",
																"src": "13052:150:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13044:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13044:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "12752:457:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12914:9:8",
														"nodeType": "YulTypedName",
														"src": "12914:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12926:6:8",
														"nodeType": "YulTypedName",
														"src": "12926:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12937:4:8",
														"nodeType": "YulTypedName",
														"src": "12937:4:8",
														"type": ""
													}
												],
												"src": "12752:457:8"
											},
											{
												"body": {
													"nativeSrc": "13298:391:8",
													"nodeType": "YulBlock",
													"src": "13298:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "13344:83:8",
																"nodeType": "YulBlock",
																"src": "13344:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13346:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "13346:77:8"
																			},
																			"nativeSrc": "13346:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13346:79:8"
																		},
																		"nativeSrc": "13346:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13346:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13319:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "13319:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13328:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13328:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13315:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13315:3:8"
																		},
																		"nativeSrc": "13315:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13315:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13340:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13340:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13311:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13311:3:8"
																},
																"nativeSrc": "13311:32:8",
																"nodeType": "YulFunctionCall",
																"src": "13311:32:8"
															},
															"nativeSrc": "13308:119:8",
															"nodeType": "YulIf",
															"src": "13308:119:8"
														},
														{
															"nativeSrc": "13437:117:8",
															"nodeType": "YulBlock",
															"src": "13437:117:8",
															"statements": [
																{
																	"nativeSrc": "13452:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13452:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13466:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13466:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13456:6:8",
																			"nodeType": "YulTypedName",
																			"src": "13456:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13481:63:8",
																	"nodeType": "YulAssignment",
																	"src": "13481:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13516:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "13516:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13527:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "13527:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13512:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "13512:3:8"
																				},
																				"nativeSrc": "13512:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13512:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "13536:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13491:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "13491:20:8"
																		},
																		"nativeSrc": "13491:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13491:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13481:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "13481:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13564:118:8",
															"nodeType": "YulBlock",
															"src": "13564:118:8",
															"statements": [
																{
																	"nativeSrc": "13579:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13579:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13593:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13593:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13583:6:8",
																			"nodeType": "YulTypedName",
																			"src": "13583:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13609:63:8",
																	"nodeType": "YulAssignment",
																	"src": "13609:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13644:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "13644:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13655:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "13655:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13640:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "13640:3:8"
																				},
																				"nativeSrc": "13640:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13640:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13664:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "13664:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13619:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "13619:20:8"
																		},
																		"nativeSrc": "13619:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13619:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13609:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "13609:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13215:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13260:9:8",
														"nodeType": "YulTypedName",
														"src": "13260:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13271:7:8",
														"nodeType": "YulTypedName",
														"src": "13271:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13283:6:8",
														"nodeType": "YulTypedName",
														"src": "13283:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13291:6:8",
														"nodeType": "YulTypedName",
														"src": "13291:6:8",
														"type": ""
													}
												],
												"src": "13215:474:8"
											},
											{
												"body": {
													"nativeSrc": "13735:76:8",
													"nodeType": "YulBlock",
													"src": "13735:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "13789:16:8",
																"nodeType": "YulBlock",
																"src": "13789:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13798:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13798:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13801:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13801:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13791:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13791:6:8"
																			},
																			"nativeSrc": "13791:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13791:12:8"
																		},
																		"nativeSrc": "13791:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13791:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13758:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13758:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13780:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13780:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13765:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "13765:14:8"
																				},
																				"nativeSrc": "13765:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13765:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13755:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13755:2:8"
																		},
																		"nativeSrc": "13755:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13755:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13748:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13748:6:8"
																},
																"nativeSrc": "13748:40:8",
																"nodeType": "YulFunctionCall",
																"src": "13748:40:8"
															},
															"nativeSrc": "13745:60:8",
															"nodeType": "YulIf",
															"src": "13745:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13695:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13728:5:8",
														"nodeType": "YulTypedName",
														"src": "13728:5:8",
														"type": ""
													}
												],
												"src": "13695:116:8"
											},
											{
												"body": {
													"nativeSrc": "13866:84:8",
													"nodeType": "YulBlock",
													"src": "13866:84:8",
													"statements": [
														{
															"nativeSrc": "13876:29:8",
															"nodeType": "YulAssignment",
															"src": "13876:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13898:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13898:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13885:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "13885:12:8"
																},
																"nativeSrc": "13885:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13885:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13876:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13876:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13938:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13938:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13914:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "13914:23:8"
																},
																"nativeSrc": "13914:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13914:30:8"
															},
															"nativeSrc": "13914:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "13914:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "13817:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13844:6:8",
														"nodeType": "YulTypedName",
														"src": "13844:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13852:3:8",
														"nodeType": "YulTypedName",
														"src": "13852:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13860:5:8",
														"nodeType": "YulTypedName",
														"src": "13860:5:8",
														"type": ""
													}
												],
												"src": "13817:133:8"
											},
											{
												"body": {
													"nativeSrc": "14036:388:8",
													"nodeType": "YulBlock",
													"src": "14036:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "14082:83:8",
																"nodeType": "YulBlock",
																"src": "14082:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14084:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "14084:77:8"
																			},
																			"nativeSrc": "14084:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14084:79:8"
																		},
																		"nativeSrc": "14084:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14084:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14057:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14057:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14066:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14066:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14053:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14053:3:8"
																		},
																		"nativeSrc": "14053:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14053:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14078:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14078:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14049:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14049:3:8"
																},
																"nativeSrc": "14049:32:8",
																"nodeType": "YulFunctionCall",
																"src": "14049:32:8"
															},
															"nativeSrc": "14046:119:8",
															"nodeType": "YulIf",
															"src": "14046:119:8"
														},
														{
															"nativeSrc": "14175:114:8",
															"nodeType": "YulBlock",
															"src": "14175:114:8",
															"statements": [
																{
																	"nativeSrc": "14190:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14190:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14204:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14204:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14194:6:8",
																			"nodeType": "YulTypedName",
																			"src": "14194:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14219:60:8",
																	"nodeType": "YulAssignment",
																	"src": "14219:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14251:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14251:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14262:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14262:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14247:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14247:3:8"
																				},
																				"nativeSrc": "14247:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14247:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14271:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14271:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "14229:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "14229:17:8"
																		},
																		"nativeSrc": "14229:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14219:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "14219:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14299:118:8",
															"nodeType": "YulBlock",
															"src": "14299:118:8",
															"statements": [
																{
																	"nativeSrc": "14314:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14314:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14328:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14328:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14318:6:8",
																			"nodeType": "YulTypedName",
																			"src": "14318:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14344:63:8",
																	"nodeType": "YulAssignment",
																	"src": "14344:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14379:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14379:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14390:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14390:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14375:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14375:3:8"
																				},
																				"nativeSrc": "14375:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14375:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14399:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14399:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "14354:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "14354:20:8"
																		},
																		"nativeSrc": "14354:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14354:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14344:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "14344:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nativeSrc": "13956:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13998:9:8",
														"nodeType": "YulTypedName",
														"src": "13998:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14009:7:8",
														"nodeType": "YulTypedName",
														"src": "14009:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14021:6:8",
														"nodeType": "YulTypedName",
														"src": "14021:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14029:6:8",
														"nodeType": "YulTypedName",
														"src": "14029:6:8",
														"type": ""
													}
												],
												"src": "13956:468:8"
											},
											{
												"body": {
													"nativeSrc": "14600:355:8",
													"nodeType": "YulBlock",
													"src": "14600:355:8",
													"statements": [
														{
															"nativeSrc": "14610:26:8",
															"nodeType": "YulAssignment",
															"src": "14610:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14622:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14622:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14633:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14633:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14618:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14618:3:8"
																},
																"nativeSrc": "14618:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14618:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14610:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14610:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14657:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14657:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14668:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14668:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14653:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14653:3:8"
																		},
																		"nativeSrc": "14653:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14653:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14676:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14676:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14682:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14682:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14672:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:8"
																		},
																		"nativeSrc": "14672:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14672:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14646:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14646:6:8"
																},
																"nativeSrc": "14646:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14646:47:8"
															},
															"nativeSrc": "14646:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14646:47:8"
														},
														{
															"nativeSrc": "14702:86:8",
															"nodeType": "YulAssignment",
															"src": "14702:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14774:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14774:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14783:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14783:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14710:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "14710:63:8"
																},
																"nativeSrc": "14710:78:8",
																"nodeType": "YulFunctionCall",
																"src": "14710:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14702:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14702:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14838:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14838:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14851:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14851:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14862:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14862:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14847:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14847:3:8"
																		},
																		"nativeSrc": "14847:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14847:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "14798:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "14798:39:8"
																},
																"nativeSrc": "14798:68:8",
																"nodeType": "YulFunctionCall",
																"src": "14798:68:8"
															},
															"nativeSrc": "14798:68:8",
															"nodeType": "YulExpressionStatement",
															"src": "14798:68:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14920:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14920:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14933:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14933:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14944:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14944:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14929:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14929:3:8"
																		},
																		"nativeSrc": "14929:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14929:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14876:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14876:43:8"
																},
																"nativeSrc": "14876:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14876:72:8"
															},
															"nativeSrc": "14876:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14876:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "14430:525:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14556:9:8",
														"nodeType": "YulTypedName",
														"src": "14556:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14568:6:8",
														"nodeType": "YulTypedName",
														"src": "14568:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14576:6:8",
														"nodeType": "YulTypedName",
														"src": "14576:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14584:6:8",
														"nodeType": "YulTypedName",
														"src": "14584:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14595:4:8",
														"nodeType": "YulTypedName",
														"src": "14595:4:8",
														"type": ""
													}
												],
												"src": "14430:525:8"
											},
											{
												"body": {
													"nativeSrc": "14989:152:8",
													"nodeType": "YulBlock",
													"src": "14989:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15006:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15006:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15009:77:8",
																		"nodeType": "YulLiteral",
																		"src": "15009:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14999:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14999:6:8"
																},
																"nativeSrc": "14999:88:8",
																"nodeType": "YulFunctionCall",
																"src": "14999:88:8"
															},
															"nativeSrc": "14999:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "14999:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15106:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15096:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15096:6:8"
																},
																"nativeSrc": "15096:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15096:15:8"
															},
															"nativeSrc": "15096:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15096:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15120:6:8"
																},
																"nativeSrc": "15120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15120:15:8"
															},
															"nativeSrc": "15120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15120:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14961:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14961:180:8"
											},
											{
												"body": {
													"nativeSrc": "15198:269:8",
													"nodeType": "YulBlock",
													"src": "15198:269:8",
													"statements": [
														{
															"nativeSrc": "15208:22:8",
															"nodeType": "YulAssignment",
															"src": "15208:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15222:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15222:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15228:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15228:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15218:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15218:3:8"
																},
																"nativeSrc": "15218:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15218:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15208:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15208:6:8"
																}
															]
														},
														{
															"nativeSrc": "15239:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15239:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15269:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15269:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15275:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15275:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15265:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15265:3:8"
																},
																"nativeSrc": "15265:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15265:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "15243:18:8",
																	"nodeType": "YulTypedName",
																	"src": "15243:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15316:51:8",
																"nodeType": "YulBlock",
																"src": "15316:51:8",
																"statements": [
																	{
																		"nativeSrc": "15330:27:8",
																		"nodeType": "YulAssignment",
																		"src": "15330:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "15344:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "15344:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15352:4:8",
																					"nodeType": "YulLiteral",
																					"src": "15352:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15340:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "15340:3:8"
																			},
																			"nativeSrc": "15340:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15340:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "15330:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15330:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15296:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "15296:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15289:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15289:6:8"
																},
																"nativeSrc": "15289:26:8",
																"nodeType": "YulFunctionCall",
																"src": "15289:26:8"
															},
															"nativeSrc": "15286:81:8",
															"nodeType": "YulIf",
															"src": "15286:81:8"
														},
														{
															"body": {
																"nativeSrc": "15419:42:8",
																"nodeType": "YulBlock",
																"src": "15419:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "15433:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "15433:16:8"
																			},
																			"nativeSrc": "15433:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15433:18:8"
																		},
																		"nativeSrc": "15433:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15433:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15383:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "15383:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15406:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15406:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15414:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15414:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "15403:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "15403:2:8"
																		},
																		"nativeSrc": "15403:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15403:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15380:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "15380:2:8"
																},
																"nativeSrc": "15380:38:8",
																"nodeType": "YulFunctionCall",
																"src": "15380:38:8"
															},
															"nativeSrc": "15377:84:8",
															"nodeType": "YulIf",
															"src": "15377:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "15147:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15182:4:8",
														"nodeType": "YulTypedName",
														"src": "15182:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15191:6:8",
														"nodeType": "YulTypedName",
														"src": "15191:6:8",
														"type": ""
													}
												],
												"src": "15147:320:8"
											},
											{
												"body": {
													"nativeSrc": "15579:64:8",
													"nodeType": "YulBlock",
													"src": "15579:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15601:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15601:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15609:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15597:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15597:3:8"
																		},
																		"nativeSrc": "15597:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15597:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "15613:22:8",
																		"nodeType": "YulLiteral",
																		"src": "15613:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15590:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15590:6:8"
																},
																"nativeSrc": "15590:46:8",
																"nodeType": "YulFunctionCall",
																"src": "15590:46:8"
															},
															"nativeSrc": "15590:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "15590:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "15473:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15571:6:8",
														"nodeType": "YulTypedName",
														"src": "15571:6:8",
														"type": ""
													}
												],
												"src": "15473:170:8"
											},
											{
												"body": {
													"nativeSrc": "15795:220:8",
													"nodeType": "YulBlock",
													"src": "15795:220:8",
													"statements": [
														{
															"nativeSrc": "15805:74:8",
															"nodeType": "YulAssignment",
															"src": "15805:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15871:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15871:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15876:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15876:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15812:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15812:58:8"
																},
																"nativeSrc": "15812:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15812:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15805:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15805:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15977:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15977:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "15888:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15888:88:8"
																},
																"nativeSrc": "15888:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15888:93:8"
															},
															"nativeSrc": "15888:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15888:93:8"
														},
														{
															"nativeSrc": "15990:19:8",
															"nodeType": "YulAssignment",
															"src": "15990:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16001:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16001:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16006:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16006:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15997:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15997:3:8"
																},
																"nativeSrc": "15997:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15997:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15990:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15990:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15649:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15783:3:8",
														"nodeType": "YulTypedName",
														"src": "15783:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15791:3:8",
														"nodeType": "YulTypedName",
														"src": "15791:3:8",
														"type": ""
													}
												],
												"src": "15649:366:8"
											},
											{
												"body": {
													"nativeSrc": "16192:248:8",
													"nodeType": "YulBlock",
													"src": "16192:248:8",
													"statements": [
														{
															"nativeSrc": "16202:26:8",
															"nodeType": "YulAssignment",
															"src": "16202:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16214:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16214:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16225:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16225:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16210:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16210:3:8"
																},
																"nativeSrc": "16210:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16210:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16202:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16202:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16249:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16249:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16260:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16260:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16245:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16245:3:8"
																		},
																		"nativeSrc": "16245:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16245:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16268:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "16268:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16274:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16274:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16264:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16264:3:8"
																		},
																		"nativeSrc": "16264:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16264:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16238:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16238:6:8"
																},
																"nativeSrc": "16238:47:8",
																"nodeType": "YulFunctionCall",
																"src": "16238:47:8"
															},
															"nativeSrc": "16238:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "16238:47:8"
														},
														{
															"nativeSrc": "16294:139:8",
															"nodeType": "YulAssignment",
															"src": "16294:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16428:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16428:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16302:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "16302:124:8"
																},
																"nativeSrc": "16302:131:8",
																"nodeType": "YulFunctionCall",
																"src": "16302:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16294:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16294:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16021:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16172:9:8",
														"nodeType": "YulTypedName",
														"src": "16172:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16187:4:8",
														"nodeType": "YulTypedName",
														"src": "16187:4:8",
														"type": ""
													}
												],
												"src": "16021:419:8"
											},
											{
												"body": {
													"nativeSrc": "16500:87:8",
													"nodeType": "YulBlock",
													"src": "16500:87:8",
													"statements": [
														{
															"nativeSrc": "16510:11:8",
															"nodeType": "YulAssignment",
															"src": "16510:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "16518:3:8",
																"nodeType": "YulIdentifier",
																"src": "16518:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16510:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16510:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16538:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16538:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16541:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16541:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16531:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16531:6:8"
																},
																"nativeSrc": "16531:14:8",
																"nodeType": "YulFunctionCall",
																"src": "16531:14:8"
															},
															"nativeSrc": "16531:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "16531:14:8"
														},
														{
															"nativeSrc": "16554:26:8",
															"nodeType": "YulAssignment",
															"src": "16554:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16572:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16572:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16575:4:8",
																		"nodeType": "YulLiteral",
																		"src": "16575:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16562:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "16562:9:8"
																},
																"nativeSrc": "16562:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16562:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16554:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16554:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16446:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16487:3:8",
														"nodeType": "YulTypedName",
														"src": "16487:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16495:4:8",
														"nodeType": "YulTypedName",
														"src": "16495:4:8",
														"type": ""
													}
												],
												"src": "16446:141:8"
											},
											{
												"body": {
													"nativeSrc": "16637:49:8",
													"nodeType": "YulBlock",
													"src": "16637:49:8",
													"statements": [
														{
															"nativeSrc": "16647:33:8",
															"nodeType": "YulAssignment",
															"src": "16647:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16665:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "16665:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16672:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16661:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16661:3:8"
																		},
																		"nativeSrc": "16661:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16661:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16677:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16677:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16657:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16657:3:8"
																},
																"nativeSrc": "16657:23:8",
																"nodeType": "YulFunctionCall",
																"src": "16657:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16647:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16647:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16593:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16620:5:8",
														"nodeType": "YulTypedName",
														"src": "16620:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16630:6:8",
														"nodeType": "YulTypedName",
														"src": "16630:6:8",
														"type": ""
													}
												],
												"src": "16593:93:8"
											},
											{
												"body": {
													"nativeSrc": "16745:54:8",
													"nodeType": "YulBlock",
													"src": "16745:54:8",
													"statements": [
														{
															"nativeSrc": "16755:37:8",
															"nodeType": "YulAssignment",
															"src": "16755:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16780:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16780:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16786:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16786:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16776:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16776:3:8"
																},
																"nativeSrc": "16776:16:8",
																"nodeType": "YulFunctionCall",
																"src": "16776:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16755:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "16755:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16692:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16720:4:8",
														"nodeType": "YulTypedName",
														"src": "16720:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16726:5:8",
														"nodeType": "YulTypedName",
														"src": "16726:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16736:8:8",
														"nodeType": "YulTypedName",
														"src": "16736:8:8",
														"type": ""
													}
												],
												"src": "16692:107:8"
											},
											{
												"body": {
													"nativeSrc": "16881:317:8",
													"nodeType": "YulBlock",
													"src": "16881:317:8",
													"statements": [
														{
															"nativeSrc": "16891:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16891:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16912:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "16912:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16924:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16924:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16908:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16908:3:8"
																},
																"nativeSrc": "16908:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16908:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16895:9:8",
																	"nodeType": "YulTypedName",
																	"src": "16895:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16935:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16935:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16966:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16966:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16977:66:8",
																		"nodeType": "YulLiteral",
																		"src": "16977:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16947:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "16947:18:8"
																},
																"nativeSrc": "16947:97:8",
																"nodeType": "YulFunctionCall",
																"src": "16947:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16939:4:8",
																	"nodeType": "YulTypedName",
																	"src": "16939:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17053:51:8",
															"nodeType": "YulAssignment",
															"src": "17053:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17084:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17084:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "17095:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "17095:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17065:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "17065:18:8"
																},
																"nativeSrc": "17065:39:8",
																"nodeType": "YulFunctionCall",
																"src": "17065:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "17053:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "17053:8:8"
																}
															]
														},
														{
															"nativeSrc": "17113:30:8",
															"nodeType": "YulAssignment",
															"src": "17113:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17126:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "17126:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "17137:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17137:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17133:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17133:3:8"
																		},
																		"nativeSrc": "17133:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17133:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17122:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17122:3:8"
																},
																"nativeSrc": "17122:21:8",
																"nodeType": "YulFunctionCall",
																"src": "17122:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17113:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "17113:5:8"
																}
															]
														},
														{
															"nativeSrc": "17152:40:8",
															"nodeType": "YulAssignment",
															"src": "17152:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17165:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "17165:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "17176:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "17176:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "17186:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17186:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17172:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17172:3:8"
																		},
																		"nativeSrc": "17172:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17172:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17162:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17162:2:8"
																},
																"nativeSrc": "17162:30:8",
																"nodeType": "YulFunctionCall",
																"src": "17162:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17152:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17152:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16805:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16842:5:8",
														"nodeType": "YulTypedName",
														"src": "16842:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16849:10:8",
														"nodeType": "YulTypedName",
														"src": "16849:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16861:8:8",
														"nodeType": "YulTypedName",
														"src": "16861:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16874:6:8",
														"nodeType": "YulTypedName",
														"src": "16874:6:8",
														"type": ""
													}
												],
												"src": "16805:393:8"
											},
											{
												"body": {
													"nativeSrc": "17236:28:8",
													"nodeType": "YulBlock",
													"src": "17236:28:8",
													"statements": [
														{
															"nativeSrc": "17246:12:8",
															"nodeType": "YulAssignment",
															"src": "17246:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "17253:5:8",
																"nodeType": "YulIdentifier",
																"src": "17253:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17246:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17246:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "17204:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17222:5:8",
														"nodeType": "YulTypedName",
														"src": "17222:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17232:3:8",
														"nodeType": "YulTypedName",
														"src": "17232:3:8",
														"type": ""
													}
												],
												"src": "17204:60:8"
											},
											{
												"body": {
													"nativeSrc": "17330:82:8",
													"nodeType": "YulBlock",
													"src": "17330:82:8",
													"statements": [
														{
															"nativeSrc": "17340:66:8",
															"nodeType": "YulAssignment",
															"src": "17340:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17398:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "17398:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17380:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "17380:17:8"
																				},
																				"nativeSrc": "17380:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17380:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17371:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "17371:8:8"
																		},
																		"nativeSrc": "17371:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17371:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17353:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "17353:17:8"
																},
																"nativeSrc": "17353:53:8",
																"nodeType": "YulFunctionCall",
																"src": "17353:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17340:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "17340:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "17270:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17310:5:8",
														"nodeType": "YulTypedName",
														"src": "17310:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17320:9:8",
														"nodeType": "YulTypedName",
														"src": "17320:9:8",
														"type": ""
													}
												],
												"src": "17270:142:8"
											},
											{
												"body": {
													"nativeSrc": "17465:28:8",
													"nodeType": "YulBlock",
													"src": "17465:28:8",
													"statements": [
														{
															"nativeSrc": "17475:12:8",
															"nodeType": "YulAssignment",
															"src": "17475:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "17482:5:8",
																"nodeType": "YulIdentifier",
																"src": "17482:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17475:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17418:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17451:5:8",
														"nodeType": "YulTypedName",
														"src": "17451:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17461:3:8",
														"nodeType": "YulTypedName",
														"src": "17461:3:8",
														"type": ""
													}
												],
												"src": "17418:75:8"
											},
											{
												"body": {
													"nativeSrc": "17575:193:8",
													"nodeType": "YulBlock",
													"src": "17575:193:8",
													"statements": [
														{
															"nativeSrc": "17585:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17585:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17640:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "17640:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17609:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "17609:30:8"
																},
																"nativeSrc": "17609:39:8",
																"nodeType": "YulFunctionCall",
																"src": "17609:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17589:16:8",
																	"nodeType": "YulTypedName",
																	"src": "17589:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17664:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17664:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17704:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "17704:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17698:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "17698:5:8"
																				},
																				"nativeSrc": "17698:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17698:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17711:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17711:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17743:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "17743:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17719:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "17719:23:8"
																				},
																				"nativeSrc": "17719:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17719:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17670:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "17670:27:8"
																		},
																		"nativeSrc": "17670:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17670:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17657:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17657:6:8"
																},
																"nativeSrc": "17657:105:8",
																"nodeType": "YulFunctionCall",
																"src": "17657:105:8"
															},
															"nativeSrc": "17657:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "17657:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17499:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17552:4:8",
														"nodeType": "YulTypedName",
														"src": "17552:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17558:6:8",
														"nodeType": "YulTypedName",
														"src": "17558:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17566:7:8",
														"nodeType": "YulTypedName",
														"src": "17566:7:8",
														"type": ""
													}
												],
												"src": "17499:269:8"
											},
											{
												"body": {
													"nativeSrc": "17823:24:8",
													"nodeType": "YulBlock",
													"src": "17823:24:8",
													"statements": [
														{
															"nativeSrc": "17833:8:8",
															"nodeType": "YulAssignment",
															"src": "17833:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "17840:1:8",
																"nodeType": "YulLiteral",
																"src": "17840:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17833:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17833:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17774:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17819:3:8",
														"nodeType": "YulTypedName",
														"src": "17819:3:8",
														"type": ""
													}
												],
												"src": "17774:73:8"
											},
											{
												"body": {
													"nativeSrc": "17906:136:8",
													"nodeType": "YulBlock",
													"src": "17906:136:8",
													"statements": [
														{
															"nativeSrc": "17916:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17916:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17930:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "17930:30:8"
																},
																"nativeSrc": "17930:32:8",
																"nodeType": "YulFunctionCall",
																"src": "17930:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17920:6:8",
																	"nodeType": "YulTypedName",
																	"src": "17920:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18015:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18015:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18021:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18021:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "18029:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "18029:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17971:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17971:43:8"
																},
																"nativeSrc": "17971:65:8",
																"nodeType": "YulFunctionCall",
																"src": "17971:65:8"
															},
															"nativeSrc": "17971:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "17971:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17853:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17892:4:8",
														"nodeType": "YulTypedName",
														"src": "17892:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17898:6:8",
														"nodeType": "YulTypedName",
														"src": "17898:6:8",
														"type": ""
													}
												],
												"src": "17853:189:8"
											},
											{
												"body": {
													"nativeSrc": "18098:136:8",
													"nodeType": "YulBlock",
													"src": "18098:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "18165:63:8",
																"nodeType": "YulBlock",
																"src": "18165:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18209:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "18209:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18216:1:8",
																					"nodeType": "YulLiteral",
																					"src": "18216:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "18179:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "18179:29:8"
																			},
																			"nativeSrc": "18179:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18179:39:8"
																		},
																		"nativeSrc": "18179:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "18179:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "18118:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18118:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "18125:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18125:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18115:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18115:2:8"
																},
																"nativeSrc": "18115:14:8",
																"nodeType": "YulFunctionCall",
																"src": "18115:14:8"
															},
															"nativeSrc": "18108:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18130:26:8",
																"nodeType": "YulBlock",
																"src": "18130:26:8",
																"statements": [
																	{
																		"nativeSrc": "18132:22:8",
																		"nodeType": "YulAssignment",
																		"src": "18132:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18145:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "18145:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18152:1:8",
																					"nodeType": "YulLiteral",
																					"src": "18152:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18141:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18141:3:8"
																			},
																			"nativeSrc": "18141:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18141:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "18132:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "18132:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18112:2:8",
																"nodeType": "YulBlock",
																"src": "18112:2:8",
																"statements": []
															},
															"src": "18108:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "18048:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "18086:5:8",
														"nodeType": "YulTypedName",
														"src": "18086:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18093:3:8",
														"nodeType": "YulTypedName",
														"src": "18093:3:8",
														"type": ""
													}
												],
												"src": "18048:186:8"
											},
											{
												"body": {
													"nativeSrc": "18319:464:8",
													"nodeType": "YulBlock",
													"src": "18319:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "18345:431:8",
																"nodeType": "YulBlock",
																"src": "18345:431:8",
																"statements": [
																	{
																		"nativeSrc": "18359:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18359:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18407:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "18407:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "18375:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "18375:31:8"
																			},
																			"nativeSrc": "18375:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18375:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "18363:8:8",
																				"nodeType": "YulTypedName",
																				"src": "18363:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18426:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18426:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18449:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "18449:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18477:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "18477:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18459:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "18459:17:8"
																					},
																					"nativeSrc": "18459:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18459:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18445:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18445:3:8"
																			},
																			"nativeSrc": "18445:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18445:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18430:11:8",
																				"nodeType": "YulTypedName",
																				"src": "18430:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18646:27:8",
																			"nodeType": "YulBlock",
																			"src": "18646:27:8",
																			"statements": [
																				{
																					"nativeSrc": "18648:23:8",
																					"nodeType": "YulAssignment",
																					"src": "18648:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18663:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "18663:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18648:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "18648:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18630:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "18630:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18642:2:8",
																					"nodeType": "YulLiteral",
																					"src": "18642:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18627:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "18627:2:8"
																			},
																			"nativeSrc": "18627:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18627:18:8"
																		},
																		"nativeSrc": "18624:49:8",
																		"nodeType": "YulIf",
																		"src": "18624:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18715:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "18715:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18732:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "18732:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18760:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "18760:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18742:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "18742:17:8"
																							},
																							"nativeSrc": "18742:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "18742:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18728:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "18728:3:8"
																					},
																					"nativeSrc": "18728:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18728:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18686:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "18686:28:8"
																			},
																			"nativeSrc": "18686:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18686:80:8"
																		},
																		"nativeSrc": "18686:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "18686:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18336:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18336:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18341:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18341:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18333:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18333:2:8"
																},
																"nativeSrc": "18333:11:8",
																"nodeType": "YulFunctionCall",
																"src": "18333:11:8"
															},
															"nativeSrc": "18330:446:8",
															"nodeType": "YulIf",
															"src": "18330:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "18240:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18295:5:8",
														"nodeType": "YulTypedName",
														"src": "18295:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18302:3:8",
														"nodeType": "YulTypedName",
														"src": "18302:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18307:10:8",
														"nodeType": "YulTypedName",
														"src": "18307:10:8",
														"type": ""
													}
												],
												"src": "18240:543:8"
											},
											{
												"body": {
													"nativeSrc": "18852:54:8",
													"nodeType": "YulBlock",
													"src": "18852:54:8",
													"statements": [
														{
															"nativeSrc": "18862:37:8",
															"nodeType": "YulAssignment",
															"src": "18862:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18887:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18887:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18893:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "18893:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18883:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18883:3:8"
																},
																"nativeSrc": "18883:16:8",
																"nodeType": "YulFunctionCall",
																"src": "18883:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18862:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "18862:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18789:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18827:4:8",
														"nodeType": "YulTypedName",
														"src": "18827:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18833:5:8",
														"nodeType": "YulTypedName",
														"src": "18833:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18843:8:8",
														"nodeType": "YulTypedName",
														"src": "18843:8:8",
														"type": ""
													}
												],
												"src": "18789:117:8"
											},
											{
												"body": {
													"nativeSrc": "18963:118:8",
													"nodeType": "YulBlock",
													"src": "18963:118:8",
													"statements": [
														{
															"nativeSrc": "18973:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "18973:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19022:1:8",
																						"nodeType": "YulLiteral",
																						"src": "19022:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "19025:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "19025:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "19018:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "19018:3:8"
																				},
																				"nativeSrc": "19018:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "19018:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19037:1:8",
																						"nodeType": "YulLiteral",
																						"src": "19037:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19033:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "19033:3:8"
																				},
																				"nativeSrc": "19033:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "19033:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18989:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "18989:28:8"
																		},
																		"nativeSrc": "18989:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18989:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18985:3:8"
																},
																"nativeSrc": "18985:56:8",
																"nodeType": "YulFunctionCall",
																"src": "18985:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18977:4:8",
																	"nodeType": "YulTypedName",
																	"src": "18977:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19050:25:8",
															"nodeType": "YulAssignment",
															"src": "19050:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19064:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19064:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "19070:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19070:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19060:3:8"
																},
																"nativeSrc": "19060:15:8",
																"nodeType": "YulFunctionCall",
																"src": "19060:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19050:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19050:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18912:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18940:4:8",
														"nodeType": "YulTypedName",
														"src": "18940:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18946:5:8",
														"nodeType": "YulTypedName",
														"src": "18946:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18956:6:8",
														"nodeType": "YulTypedName",
														"src": "18956:6:8",
														"type": ""
													}
												],
												"src": "18912:169:8"
											},
											{
												"body": {
													"nativeSrc": "19167:214:8",
													"nodeType": "YulBlock",
													"src": "19167:214:8",
													"statements": [
														{
															"nativeSrc": "19300:37:8",
															"nodeType": "YulAssignment",
															"src": "19300:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19327:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19327:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "19333:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19333:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "19308:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "19308:18:8"
																},
																"nativeSrc": "19308:29:8",
																"nodeType": "YulFunctionCall",
																"src": "19308:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19300:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19300:4:8"
																}
															]
														},
														{
															"nativeSrc": "19346:29:8",
															"nodeType": "YulAssignment",
															"src": "19346:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19357:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19357:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19367:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19367:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19370:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "19370:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19363:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19363:3:8"
																		},
																		"nativeSrc": "19363:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19363:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19354:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "19354:2:8"
																},
																"nativeSrc": "19354:21:8",
																"nodeType": "YulFunctionCall",
																"src": "19354:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19346:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19346:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "19086:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19148:4:8",
														"nodeType": "YulTypedName",
														"src": "19148:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19154:3:8",
														"nodeType": "YulTypedName",
														"src": "19154:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "19162:4:8",
														"nodeType": "YulTypedName",
														"src": "19162:4:8",
														"type": ""
													}
												],
												"src": "19086:295:8"
											},
											{
												"body": {
													"nativeSrc": "19478:1303:8",
													"nodeType": "YulBlock",
													"src": "19478:1303:8",
													"statements": [
														{
															"nativeSrc": "19489:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "19489:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19536:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19536:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19503:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "19503:32:8"
																},
																"nativeSrc": "19503:37:8",
																"nodeType": "YulFunctionCall",
																"src": "19503:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19493:6:8",
																	"nodeType": "YulTypedName",
																	"src": "19493:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19625:22:8",
																"nodeType": "YulBlock",
																"src": "19625:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19627:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "19627:16:8"
																			},
																			"nativeSrc": "19627:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "19627:18:8"
																		},
																		"nativeSrc": "19627:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "19627:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19597:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19597:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19605:18:8",
																		"nodeType": "YulLiteral",
																		"src": "19605:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19594:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "19594:2:8"
																},
																"nativeSrc": "19594:30:8",
																"nodeType": "YulFunctionCall",
																"src": "19594:30:8"
															},
															"nativeSrc": "19591:56:8",
															"nodeType": "YulIf",
															"src": "19591:56:8"
														},
														{
															"nativeSrc": "19657:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "19657:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19703:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19703:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19697:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "19697:5:8"
																		},
																		"nativeSrc": "19697:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19697:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19671:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "19671:25:8"
																},
																"nativeSrc": "19671:38:8",
																"nodeType": "YulFunctionCall",
																"src": "19671:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19661:6:8",
																	"nodeType": "YulTypedName",
																	"src": "19661:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19802:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19802:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19808:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19808:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19816:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19816:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19756:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "19756:45:8"
																},
																"nativeSrc": "19756:67:8",
																"nodeType": "YulFunctionCall",
																"src": "19756:67:8"
															},
															"nativeSrc": "19756:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "19756:67:8"
														},
														{
															"nativeSrc": "19833:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "19833:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "19850:1:8",
																"nodeType": "YulLiteral",
																"src": "19850:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19837:9:8",
																	"nodeType": "YulTypedName",
																	"src": "19837:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19861:17:8",
															"nodeType": "YulAssignment",
															"src": "19861:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "19874:4:8",
																"nodeType": "YulLiteral",
																"src": "19874:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19861:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "19861:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19925:611:8",
																		"nodeType": "YulBlock",
																		"src": "19925:611:8",
																		"statements": [
																			{
																				"nativeSrc": "19939:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19939:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19958:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "19958:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19970:4:8",
																									"nodeType": "YulLiteral",
																									"src": "19970:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19966:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "19966:3:8"
																							},
																							"nativeSrc": "19966:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "19966:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19954:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "19954:3:8"
																					},
																					"nativeSrc": "19954:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19954:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19943:7:8",
																						"nodeType": "YulTypedName",
																						"src": "19943:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19990:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19990:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20036:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "20036:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "20004:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "20004:31:8"
																					},
																					"nativeSrc": "20004:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "20004:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19994:6:8",
																						"nodeType": "YulTypedName",
																						"src": "19994:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20054:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20054:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20063:1:8",
																					"nodeType": "YulLiteral",
																					"src": "20063:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "20058:1:8",
																						"nodeType": "YulTypedName",
																						"src": "20058:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20122:163:8",
																					"nodeType": "YulBlock",
																					"src": "20122:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20147:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "20147:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "20165:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "20165:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "20170:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "20170:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "20161:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "20161:3:8"
																												},
																												"nativeSrc": "20161:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "20161:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "20155:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "20155:5:8"
																										},
																										"nativeSrc": "20155:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "20155:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20140:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "20140:6:8"
																								},
																								"nativeSrc": "20140:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "20140:42:8"
																							},
																							"nativeSrc": "20140:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "20140:42:8"
																						},
																						{
																							"nativeSrc": "20199:24:8",
																							"nodeType": "YulAssignment",
																							"src": "20199:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20213:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "20213:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20221:1:8",
																										"nodeType": "YulLiteral",
																										"src": "20221:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20209:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "20209:3:8"
																								},
																								"nativeSrc": "20209:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "20209:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "20199:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "20199:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "20240:31:8",
																							"nodeType": "YulAssignment",
																							"src": "20240:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "20257:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "20257:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20268:2:8",
																										"nodeType": "YulLiteral",
																										"src": "20268:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20253:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "20253:3:8"
																								},
																								"nativeSrc": "20253:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "20253:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "20240:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "20240:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20088:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "20088:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20091:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "20091:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20085:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "20085:2:8"
																					},
																					"nativeSrc": "20085:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "20085:14:8"
																				},
																				"nativeSrc": "20077:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20100:21:8",
																					"nodeType": "YulBlock",
																					"src": "20100:21:8",
																					"statements": [
																						{
																							"nativeSrc": "20102:17:8",
																							"nodeType": "YulAssignment",
																							"src": "20102:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20111:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "20111:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20114:4:8",
																										"nodeType": "YulLiteral",
																										"src": "20114:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20107:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "20107:3:8"
																								},
																								"nativeSrc": "20107:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "20107:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20102:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "20102:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20081:3:8",
																					"nodeType": "YulBlock",
																					"src": "20081:3:8",
																					"statements": []
																				},
																				"src": "20077:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "20321:156:8",
																					"nodeType": "YulBlock",
																					"src": "20321:156:8",
																					"statements": [
																						{
																							"nativeSrc": "20339:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20339:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20366:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "20366:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20371:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "20371:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20362:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "20362:3:8"
																										},
																										"nativeSrc": "20362:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "20362:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20356:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "20356:5:8"
																								},
																								"nativeSrc": "20356:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "20356:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20343:9:8",
																									"nodeType": "YulTypedName",
																									"src": "20343:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20406:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "20406:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20433:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "20433:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20448:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "20448:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20456:4:8",
																														"nodeType": "YulLiteral",
																														"src": "20456:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20444:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "20444:3:8"
																												},
																												"nativeSrc": "20444:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "20444:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20414:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "20414:18:8"
																										},
																										"nativeSrc": "20414:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "20414:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20399:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "20399:6:8"
																								},
																								"nativeSrc": "20399:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "20399:64:8"
																							},
																							"nativeSrc": "20399:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "20399:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20304:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "20304:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20313:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "20313:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20301:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "20301:2:8"
																					},
																					"nativeSrc": "20301:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "20301:19:8"
																				},
																				"nativeSrc": "20298:179:8",
																				"nodeType": "YulIf",
																				"src": "20298:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20497:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "20497:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20511:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "20511:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20519:1:8",
																											"nodeType": "YulLiteral",
																											"src": "20519:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20507:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "20507:3:8"
																									},
																									"nativeSrc": "20507:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "20507:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20523:1:8",
																									"nodeType": "YulLiteral",
																									"src": "20523:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20503:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "20503:3:8"
																							},
																							"nativeSrc": "20503:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "20503:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20490:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "20490:6:8"
																					},
																					"nativeSrc": "20490:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "20490:36:8"
																				},
																				"nativeSrc": "20490:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "20490:36:8"
																			}
																		]
																	},
																	"nativeSrc": "19918:618:8",
																	"nodeType": "YulCase",
																	"src": "19918:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19923:1:8",
																		"nodeType": "YulLiteral",
																		"src": "19923:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20553:222:8",
																		"nodeType": "YulBlock",
																		"src": "20553:222:8",
																		"statements": [
																			{
																				"nativeSrc": "20567:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20567:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20580:1:8",
																					"nodeType": "YulLiteral",
																					"src": "20580:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20571:5:8",
																						"nodeType": "YulTypedName",
																						"src": "20571:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20604:67:8",
																					"nodeType": "YulBlock",
																					"src": "20604:67:8",
																					"statements": [
																						{
																							"nativeSrc": "20622:35:8",
																							"nodeType": "YulAssignment",
																							"src": "20622:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20641:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "20641:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20646:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "20646:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20637:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "20637:3:8"
																										},
																										"nativeSrc": "20637:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "20637:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20631:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "20631:5:8"
																								},
																								"nativeSrc": "20631:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "20631:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20622:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "20622:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20597:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "20597:6:8"
																				},
																				"nativeSrc": "20594:77:8",
																				"nodeType": "YulIf",
																				"src": "20594:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20691:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "20691:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20750:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "20750:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20757:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "20757:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20697:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "20697:52:8"
																							},
																							"nativeSrc": "20697:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "20697:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20684:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "20684:6:8"
																					},
																					"nativeSrc": "20684:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "20684:81:8"
																				},
																				"nativeSrc": "20684:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "20684:81:8"
																			}
																		]
																	},
																	"nativeSrc": "20545:230:8",
																	"nodeType": "YulCase",
																	"src": "20545:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19898:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19898:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19906:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19906:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19895:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "19895:2:8"
																},
																"nativeSrc": "19895:14:8",
																"nodeType": "YulFunctionCall",
																"src": "19895:14:8"
															},
															"nativeSrc": "19888:887:8",
															"nodeType": "YulSwitch",
															"src": "19888:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19386:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19467:4:8",
														"nodeType": "YulTypedName",
														"src": "19467:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19473:3:8",
														"nodeType": "YulTypedName",
														"src": "19473:3:8",
														"type": ""
													}
												],
												"src": "19386:1395:8"
											},
											{
												"body": {
													"nativeSrc": "20815:152:8",
													"nodeType": "YulBlock",
													"src": "20815:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20832:1:8",
																		"nodeType": "YulLiteral",
																		"src": "20832:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20835:77:8",
																		"nodeType": "YulLiteral",
																		"src": "20835:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20825:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20825:6:8"
																},
																"nativeSrc": "20825:88:8",
																"nodeType": "YulFunctionCall",
																"src": "20825:88:8"
															},
															"nativeSrc": "20825:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "20825:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20929:1:8",
																		"nodeType": "YulLiteral",
																		"src": "20929:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20932:4:8",
																		"nodeType": "YulLiteral",
																		"src": "20932:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20922:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20922:6:8"
																},
																"nativeSrc": "20922:15:8",
																"nodeType": "YulFunctionCall",
																"src": "20922:15:8"
															},
															"nativeSrc": "20922:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "20922:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20953:1:8",
																		"nodeType": "YulLiteral",
																		"src": "20953:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20956:4:8",
																		"nodeType": "YulLiteral",
																		"src": "20956:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20946:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20946:6:8"
																},
																"nativeSrc": "20946:15:8",
																"nodeType": "YulFunctionCall",
																"src": "20946:15:8"
															},
															"nativeSrc": "20946:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "20946:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "20787:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "20787:180:8"
											},
											{
												"body": {
													"nativeSrc": "21014:126:8",
													"nodeType": "YulBlock",
													"src": "21014:126:8",
													"statements": [
														{
															"nativeSrc": "21024:31:8",
															"nodeType": "YulAssignment",
															"src": "21024:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21049:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "21049:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "21033:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "21033:15:8"
																},
																"nativeSrc": "21033:22:8",
																"nodeType": "YulFunctionCall",
																"src": "21033:22:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21024:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "21024:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21083:22:8",
																"nodeType": "YulBlock",
																"src": "21083:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21085:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "21085:16:8"
																			},
																			"nativeSrc": "21085:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "21085:18:8"
																		},
																		"nativeSrc": "21085:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "21085:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21070:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "21070:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21077:4:8",
																		"nodeType": "YulLiteral",
																		"src": "21077:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21067:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "21067:2:8"
																},
																"nativeSrc": "21067:15:8",
																"nodeType": "YulFunctionCall",
																"src": "21067:15:8"
															},
															"nativeSrc": "21064:41:8",
															"nodeType": "YulIf",
															"src": "21064:41:8"
														},
														{
															"nativeSrc": "21114:20:8",
															"nodeType": "YulAssignment",
															"src": "21114:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21125:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "21125:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21132:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21132:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21121:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21121:3:8"
																},
																"nativeSrc": "21121:13:8",
																"nodeType": "YulFunctionCall",
																"src": "21121:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21114:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21114:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "20973:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21000:5:8",
														"nodeType": "YulTypedName",
														"src": "21000:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21010:3:8",
														"nodeType": "YulTypedName",
														"src": "21010:3:8",
														"type": ""
													}
												],
												"src": "20973:167:8"
											},
											{
												"body": {
													"nativeSrc": "21252:63:8",
													"nodeType": "YulBlock",
													"src": "21252:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21274:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "21274:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21282:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21282:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21270:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21270:3:8"
																		},
																		"nativeSrc": "21270:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21270:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "21286:21:8",
																		"nodeType": "YulLiteral",
																		"src": "21286:21:8",
																		"type": "",
																		"value": "Insufficient amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21263:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21263:6:8"
																},
																"nativeSrc": "21263:45:8",
																"nodeType": "YulFunctionCall",
																"src": "21263:45:8"
															},
															"nativeSrc": "21263:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "21263:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
												"nativeSrc": "21146:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21244:6:8",
														"nodeType": "YulTypedName",
														"src": "21244:6:8",
														"type": ""
													}
												],
												"src": "21146:169:8"
											},
											{
												"body": {
													"nativeSrc": "21467:220:8",
													"nodeType": "YulBlock",
													"src": "21467:220:8",
													"statements": [
														{
															"nativeSrc": "21477:74:8",
															"nodeType": "YulAssignment",
															"src": "21477:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21543:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21543:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21548:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21548:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21484:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "21484:58:8"
																},
																"nativeSrc": "21484:67:8",
																"nodeType": "YulFunctionCall",
																"src": "21484:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21477:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21649:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21649:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																	"nativeSrc": "21560:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "21560:88:8"
																},
																"nativeSrc": "21560:93:8",
																"nodeType": "YulFunctionCall",
																"src": "21560:93:8"
															},
															"nativeSrc": "21560:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "21560:93:8"
														},
														{
															"nativeSrc": "21662:19:8",
															"nodeType": "YulAssignment",
															"src": "21662:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21673:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21673:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21678:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21678:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21669:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21669:3:8"
																},
																"nativeSrc": "21669:12:8",
																"nodeType": "YulFunctionCall",
																"src": "21669:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21662:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21662:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21321:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21455:3:8",
														"nodeType": "YulTypedName",
														"src": "21455:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21463:3:8",
														"nodeType": "YulTypedName",
														"src": "21463:3:8",
														"type": ""
													}
												],
												"src": "21321:366:8"
											},
											{
												"body": {
													"nativeSrc": "21864:248:8",
													"nodeType": "YulBlock",
													"src": "21864:248:8",
													"statements": [
														{
															"nativeSrc": "21874:26:8",
															"nodeType": "YulAssignment",
															"src": "21874:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21886:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "21886:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21897:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21897:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21882:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21882:3:8"
																},
																"nativeSrc": "21882:18:8",
																"nodeType": "YulFunctionCall",
																"src": "21882:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21874:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21874:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21921:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21921:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21932:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21932:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21917:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21917:3:8"
																		},
																		"nativeSrc": "21917:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21917:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21940:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "21940:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21946:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21946:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21936:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21936:3:8"
																		},
																		"nativeSrc": "21936:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21936:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21910:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21910:6:8"
																},
																"nativeSrc": "21910:47:8",
																"nodeType": "YulFunctionCall",
																"src": "21910:47:8"
															},
															"nativeSrc": "21910:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "21910:47:8"
														},
														{
															"nativeSrc": "21966:139:8",
															"nodeType": "YulAssignment",
															"src": "21966:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22100:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22100:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21974:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "21974:124:8"
																},
																"nativeSrc": "21974:131:8",
																"nodeType": "YulFunctionCall",
																"src": "21974:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21966:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21966:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21693:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21844:9:8",
														"nodeType": "YulTypedName",
														"src": "21844:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21859:4:8",
														"nodeType": "YulTypedName",
														"src": "21859:4:8",
														"type": ""
													}
												],
												"src": "21693:419:8"
											},
											{
												"body": {
													"nativeSrc": "22224:58:8",
													"nodeType": "YulBlock",
													"src": "22224:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22246:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "22246:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22254:1:8",
																				"nodeType": "YulLiteral",
																				"src": "22254:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22242:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22242:3:8"
																		},
																		"nativeSrc": "22242:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22242:14:8"
																	},
																	{
																		"hexValue": "4974656d206e6f7420666f756e64",
																		"kind": "string",
																		"nativeSrc": "22258:16:8",
																		"nodeType": "YulLiteral",
																		"src": "22258:16:8",
																		"type": "",
																		"value": "Item not found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22235:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22235:6:8"
																},
																"nativeSrc": "22235:40:8",
																"nodeType": "YulFunctionCall",
																"src": "22235:40:8"
															},
															"nativeSrc": "22235:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "22235:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
												"nativeSrc": "22118:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22216:6:8",
														"nodeType": "YulTypedName",
														"src": "22216:6:8",
														"type": ""
													}
												],
												"src": "22118:164:8"
											},
											{
												"body": {
													"nativeSrc": "22434:220:8",
													"nodeType": "YulBlock",
													"src": "22434:220:8",
													"statements": [
														{
															"nativeSrc": "22444:74:8",
															"nodeType": "YulAssignment",
															"src": "22444:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22510:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22510:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22515:2:8",
																		"nodeType": "YulLiteral",
																		"src": "22515:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22451:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "22451:58:8"
																},
																"nativeSrc": "22451:67:8",
																"nodeType": "YulFunctionCall",
																"src": "22451:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22444:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22444:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22616:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																	"nativeSrc": "22527:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "22527:88:8"
																},
																"nativeSrc": "22527:93:8",
																"nodeType": "YulFunctionCall",
																"src": "22527:93:8"
															},
															"nativeSrc": "22527:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "22527:93:8"
														},
														{
															"nativeSrc": "22629:19:8",
															"nodeType": "YulAssignment",
															"src": "22629:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22640:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "22640:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22645:2:8",
																		"nodeType": "YulLiteral",
																		"src": "22645:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22636:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22636:3:8"
																},
																"nativeSrc": "22636:12:8",
																"nodeType": "YulFunctionCall",
																"src": "22636:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22629:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22629:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22288:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22422:3:8",
														"nodeType": "YulTypedName",
														"src": "22422:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22430:3:8",
														"nodeType": "YulTypedName",
														"src": "22430:3:8",
														"type": ""
													}
												],
												"src": "22288:366:8"
											},
											{
												"body": {
													"nativeSrc": "22831:248:8",
													"nodeType": "YulBlock",
													"src": "22831:248:8",
													"statements": [
														{
															"nativeSrc": "22841:26:8",
															"nodeType": "YulAssignment",
															"src": "22841:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22853:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "22853:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22864:2:8",
																		"nodeType": "YulLiteral",
																		"src": "22864:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22849:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22849:3:8"
																},
																"nativeSrc": "22849:18:8",
																"nodeType": "YulFunctionCall",
																"src": "22849:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22841:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "22841:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22888:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "22888:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22899:1:8",
																				"nodeType": "YulLiteral",
																				"src": "22899:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22884:3:8"
																		},
																		"nativeSrc": "22884:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22884:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22907:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "22907:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22913:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "22913:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22903:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22903:3:8"
																		},
																		"nativeSrc": "22903:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22903:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22877:6:8"
																},
																"nativeSrc": "22877:47:8",
																"nodeType": "YulFunctionCall",
																"src": "22877:47:8"
															},
															"nativeSrc": "22877:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "22877:47:8"
														},
														{
															"nativeSrc": "22933:139:8",
															"nodeType": "YulAssignment",
															"src": "22933:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23067:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23067:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22941:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "22941:124:8"
																},
																"nativeSrc": "22941:131:8",
																"nodeType": "YulFunctionCall",
																"src": "22941:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22933:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "22933:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22660:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22811:9:8",
														"nodeType": "YulTypedName",
														"src": "22811:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22826:4:8",
														"nodeType": "YulTypedName",
														"src": "22826:4:8",
														"type": ""
													}
												],
												"src": "22660:419:8"
											},
											{
												"body": {
													"nativeSrc": "23141:93:8",
													"nodeType": "YulBlock",
													"src": "23141:93:8",
													"statements": [
														{
															"nativeSrc": "23152:22:8",
															"nodeType": "YulAssignment",
															"src": "23152:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23168:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "23168:5:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "23162:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "23162:5:8"
																},
																"nativeSrc": "23162:12:8",
																"nodeType": "YulFunctionCall",
																"src": "23162:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23152:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23152:6:8"
																}
															]
														},
														{
															"nativeSrc": "23184:43:8",
															"nodeType": "YulAssignment",
															"src": "23184:43:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "23220:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23220:6:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "23194:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "23194:25:8"
																},
																"nativeSrc": "23194:33:8",
																"nodeType": "YulFunctionCall",
																"src": "23194:33:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23184:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "23184:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_storage",
												"nativeSrc": "23085:149:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23124:5:8",
														"nodeType": "YulTypedName",
														"src": "23124:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23134:6:8",
														"nodeType": "YulTypedName",
														"src": "23134:6:8",
														"type": ""
													}
												],
												"src": "23085:149:8"
											},
											{
												"body": {
													"nativeSrc": "23329:1362:8",
													"nodeType": "YulBlock",
													"src": "23329:1362:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "23356:9:8",
																"nodeType": "YulBlock",
																"src": "23356:9:8",
																"statements": [
																	{
																		"nativeSrc": "23358:5:8",
																		"nodeType": "YulLeave",
																		"src": "23358:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23345:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23345:4:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "23351:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23351:3:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "23342:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "23342:2:8"
																},
																"nativeSrc": "23342:13:8",
																"nodeType": "YulFunctionCall",
																"src": "23342:13:8"
															},
															"nativeSrc": "23339:26:8",
															"nodeType": "YulIf",
															"src": "23339:26:8"
														},
														{
															"nativeSrc": "23375:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "23375:48:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "23419:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23419:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_storage",
																	"nativeSrc": "23389:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "23389:29:8"
																},
																"nativeSrc": "23389:34:8",
																"nodeType": "YulFunctionCall",
																"src": "23389:34:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "23379:6:8",
																	"nodeType": "YulTypedName",
																	"src": "23379:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23508:22:8",
																"nodeType": "YulBlock",
																"src": "23508:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "23510:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "23510:16:8"
																			},
																			"nativeSrc": "23510:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "23510:18:8"
																		},
																		"nativeSrc": "23510:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "23510:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23480:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23480:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23488:18:8",
																		"nodeType": "YulLiteral",
																		"src": "23488:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23477:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "23477:2:8"
																},
																"nativeSrc": "23477:30:8",
																"nodeType": "YulFunctionCall",
																"src": "23477:30:8"
															},
															"nativeSrc": "23474:56:8",
															"nodeType": "YulIf",
															"src": "23474:56:8"
														},
														{
															"nativeSrc": "23540:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "23540:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "23586:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "23586:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "23580:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "23580:5:8"
																		},
																		"nativeSrc": "23580:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "23580:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "23554:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "23554:25:8"
																},
																"nativeSrc": "23554:38:8",
																"nodeType": "YulFunctionCall",
																"src": "23554:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "23544:6:8",
																	"nodeType": "YulTypedName",
																	"src": "23544:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23685:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23685:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "23691:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23691:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "23699:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23699:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "23639:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "23639:45:8"
																},
																"nativeSrc": "23639:67:8",
																"nodeType": "YulFunctionCall",
																"src": "23639:67:8"
															},
															"nativeSrc": "23639:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "23639:67:8"
														},
														{
															"nativeSrc": "23716:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "23716:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "23733:1:8",
																"nodeType": "YulLiteral",
																"src": "23733:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23720:9:8",
																	"nodeType": "YulTypedName",
																	"src": "23720:9:8",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "23781:665:8",
																		"nodeType": "YulBlock",
																		"src": "23781:665:8",
																		"statements": [
																			{
																				"nativeSrc": "23795:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23795:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "23814:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "23814:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "23826:4:8",
																									"nodeType": "YulLiteral",
																									"src": "23826:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "23822:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "23822:3:8"
																							},
																							"nativeSrc": "23822:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "23822:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "23810:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "23810:3:8"
																					},
																					"nativeSrc": "23810:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23810:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "23799:7:8",
																						"nodeType": "YulTypedName",
																						"src": "23799:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23845:43:8",
																				"nodeType": "YulAssignment",
																				"src": "23845:43:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "23884:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "23884:3:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23852:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "23852:31:8"
																					},
																					"nativeSrc": "23852:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23852:36:8"
																				},
																				"variableNames": [
																					{
																						"name": "src",
																						"nativeSrc": "23845:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "23845:3:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "23901:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23901:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23947:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "23947:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23915:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "23915:31:8"
																					},
																					"nativeSrc": "23915:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23915:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "23905:6:8",
																						"nodeType": "YulTypedName",
																						"src": "23905:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23965:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23965:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23974:1:8",
																					"nodeType": "YulLiteral",
																					"src": "23974:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "23969:1:8",
																						"nodeType": "YulTypedName",
																						"src": "23969:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24033:162:8",
																					"nodeType": "YulBlock",
																					"src": "24033:162:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24058:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "24058:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "24076:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "24076:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "24081:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "24081:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "24072:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "24072:3:8"
																												},
																												"nativeSrc": "24072:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "24072:19:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "24066:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "24066:5:8"
																										},
																										"nativeSrc": "24066:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "24066:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24051:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "24051:6:8"
																								},
																								"nativeSrc": "24051:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24051:42:8"
																							},
																							"nativeSrc": "24051:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "24051:42:8"
																						},
																						{
																							"nativeSrc": "24110:24:8",
																							"nodeType": "YulAssignment",
																							"src": "24110:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24124:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "24124:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24132:1:8",
																										"nodeType": "YulLiteral",
																										"src": "24132:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24120:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "24120:3:8"
																								},
																								"nativeSrc": "24120:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24120:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "24110:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "24110:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "24151:30:8",
																							"nodeType": "YulAssignment",
																							"src": "24151:30:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "24168:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "24168:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24179:1:8",
																										"nodeType": "YulLiteral",
																										"src": "24179:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24164:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "24164:3:8"
																								},
																								"nativeSrc": "24164:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24164:17:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "24151:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "24151:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "23999:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "23999:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24002:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "24002:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23996:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "23996:2:8"
																					},
																					"nativeSrc": "23996:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23996:14:8"
																				},
																				"nativeSrc": "23988:207:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "24011:21:8",
																					"nodeType": "YulBlock",
																					"src": "24011:21:8",
																					"statements": [
																						{
																							"nativeSrc": "24013:17:8",
																							"nodeType": "YulAssignment",
																							"src": "24013:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "24022:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "24022:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24025:4:8",
																										"nodeType": "YulLiteral",
																										"src": "24025:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24018:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "24018:3:8"
																								},
																								"nativeSrc": "24018:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24018:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "24013:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "24013:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "23992:3:8",
																					"nodeType": "YulBlock",
																					"src": "23992:3:8",
																					"statements": []
																				},
																				"src": "23988:207:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "24231:156:8",
																					"nodeType": "YulBlock",
																					"src": "24231:156:8",
																					"statements": [
																						{
																							"nativeSrc": "24249:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "24249:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24276:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "24276:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24281:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "24281:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24272:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "24272:3:8"
																										},
																										"nativeSrc": "24272:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "24272:19:8"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "24266:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "24266:5:8"
																								},
																								"nativeSrc": "24266:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24266:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "24253:9:8",
																									"nodeType": "YulTypedName",
																									"src": "24253:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24316:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "24316:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "24343:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "24343:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "24358:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "24358:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "24366:4:8",
																														"nodeType": "YulLiteral",
																														"src": "24366:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "24354:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "24354:3:8"
																												},
																												"nativeSrc": "24354:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "24354:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "24324:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "24324:18:8"
																										},
																										"nativeSrc": "24324:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "24324:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24309:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "24309:6:8"
																								},
																								"nativeSrc": "24309:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24309:64:8"
																							},
																							"nativeSrc": "24309:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "24309:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24214:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "24214:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "24223:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "24223:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24211:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "24211:2:8"
																					},
																					"nativeSrc": "24211:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24211:19:8"
																				},
																				"nativeSrc": "24208:179:8",
																				"nodeType": "YulIf",
																				"src": "24208:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24407:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "24407:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "24421:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "24421:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24429:1:8",
																											"nodeType": "YulLiteral",
																											"src": "24429:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "24417:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "24417:3:8"
																									},
																									"nativeSrc": "24417:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "24417:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24433:1:8",
																									"nodeType": "YulLiteral",
																									"src": "24433:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24413:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "24413:3:8"
																							},
																							"nativeSrc": "24413:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "24413:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24400:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "24400:6:8"
																					},
																					"nativeSrc": "24400:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24400:36:8"
																				},
																				"nativeSrc": "24400:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "24400:36:8"
																			}
																		]
																	},
																	"nativeSrc": "23774:672:8",
																	"nodeType": "YulCase",
																	"src": "23774:672:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23779:1:8",
																		"nodeType": "YulLiteral",
																		"src": "23779:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "24463:222:8",
																		"nodeType": "YulBlock",
																		"src": "24463:222:8",
																		"statements": [
																			{
																				"nativeSrc": "24477:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24477:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24490:1:8",
																					"nodeType": "YulLiteral",
																					"src": "24490:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "24481:5:8",
																						"nodeType": "YulTypedName",
																						"src": "24481:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24514:67:8",
																					"nodeType": "YulBlock",
																					"src": "24514:67:8",
																					"statements": [
																						{
																							"nativeSrc": "24532:35:8",
																							"nodeType": "YulAssignment",
																							"src": "24532:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24551:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "24551:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24556:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "24556:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24547:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "24547:3:8"
																										},
																										"nativeSrc": "24547:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "24547:19:8"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "24541:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "24541:5:8"
																								},
																								"nativeSrc": "24541:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "24541:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "24532:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "24532:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "24507:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "24507:6:8"
																				},
																				"nativeSrc": "24504:77:8",
																				"nodeType": "YulIf",
																				"src": "24504:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24601:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "24601:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "24660:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "24660:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "24667:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "24667:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "24607:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "24607:52:8"
																							},
																							"nativeSrc": "24607:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "24607:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24594:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "24594:6:8"
																					},
																					"nativeSrc": "24594:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "24594:81:8"
																				},
																				"nativeSrc": "24594:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "24594:81:8"
																			}
																		]
																	},
																	"nativeSrc": "24455:230:8",
																	"nodeType": "YulCase",
																	"src": "24455:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23754:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23754:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23762:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23762:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23751:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "23751:2:8"
																},
																"nativeSrc": "23751:14:8",
																"nodeType": "YulFunctionCall",
																"src": "23751:14:8"
															},
															"nativeSrc": "23744:941:8",
															"nodeType": "YulSwitch",
															"src": "23744:941:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage",
												"nativeSrc": "23240:1451:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23318:4:8",
														"nodeType": "YulTypedName",
														"src": "23318:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "23324:3:8",
														"nodeType": "YulTypedName",
														"src": "23324:3:8",
														"type": ""
													}
												],
												"src": "23240:1451:8"
											},
											{
												"body": {
													"nativeSrc": "24810:742:8",
													"nodeType": "YulBlock",
													"src": "24810:742:8",
													"statements": [
														{
															"nativeSrc": "24820:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "24820:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24843:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "24843:5:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "24837:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "24837:5:8"
																},
																"nativeSrc": "24837:12:8",
																"nodeType": "YulFunctionCall",
																"src": "24837:12:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "24824:9:8",
																	"nodeType": "YulTypedName",
																	"src": "24824:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24858:50:8",
															"nodeType": "YulVariableDeclaration",
															"src": "24858:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "24898:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "24898:9:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "24872:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "24872:25:8"
																},
																"nativeSrc": "24872:36:8",
																"nodeType": "YulFunctionCall",
																"src": "24872:36:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24862:6:8",
																	"nodeType": "YulTypedName",
																	"src": "24862:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24917:78:8",
															"nodeType": "YulAssignment",
															"src": "24917:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24983:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24983:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24988:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "24988:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24924:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "24924:58:8"
																},
																"nativeSrc": "24924:71:8",
																"nodeType": "YulFunctionCall",
																"src": "24924:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24917:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24917:3:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25044:157:8",
																		"nodeType": "YulBlock",
																		"src": "25044:157:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "25097:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "25097:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "25106:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "25106:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "25121:4:8",
																											"nodeType": "YulLiteral",
																											"src": "25121:4:8",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "25117:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "25117:3:8"
																									},
																									"nativeSrc": "25117:9:8",
																									"nodeType": "YulFunctionCall",
																									"src": "25117:9:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "25102:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "25102:3:8"
																							},
																							"nativeSrc": "25102:25:8",
																							"nodeType": "YulFunctionCall",
																							"src": "25102:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "25090:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "25090:6:8"
																					},
																					"nativeSrc": "25090:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25090:38:8"
																				},
																				"nativeSrc": "25090:38:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "25090:38:8"
																			},
																			{
																				"nativeSrc": "25141:50:8",
																				"nodeType": "YulAssignment",
																				"src": "25141:50:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "25152:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "25152:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25161:4:8",
																									"nodeType": "YulLiteral",
																									"src": "25161:4:8",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "25181:6:8",
																													"nodeType": "YulIdentifier",
																													"src": "25181:6:8"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "25174:6:8",
																												"nodeType": "YulIdentifier",
																												"src": "25174:6:8"
																											},
																											"nativeSrc": "25174:14:8",
																											"nodeType": "YulFunctionCall",
																											"src": "25174:14:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "25167:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "25167:6:8"
																									},
																									"nativeSrc": "25167:22:8",
																									"nodeType": "YulFunctionCall",
																									"src": "25167:22:8"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "25157:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "25157:3:8"
																							},
																							"nativeSrc": "25157:33:8",
																							"nodeType": "YulFunctionCall",
																							"src": "25157:33:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25148:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "25148:3:8"
																					},
																					"nativeSrc": "25148:43:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25148:43:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "25141:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "25141:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "25037:164:8",
																	"nodeType": "YulCase",
																	"src": "25037:164:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25042:1:8",
																		"nodeType": "YulLiteral",
																		"src": "25042:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25217:329:8",
																		"nodeType": "YulBlock",
																		"src": "25217:329:8",
																		"statements": [
																			{
																				"nativeSrc": "25262:53:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25262:53:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "25309:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "25309:5:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25277:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "25277:31:8"
																					},
																					"nativeSrc": "25277:38:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25277:38:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "25266:7:8",
																						"nodeType": "YulTypedName",
																						"src": "25266:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25328:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25328:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25337:1:8",
																					"nodeType": "YulLiteral",
																					"src": "25337:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25332:1:8",
																						"nodeType": "YulTypedName",
																						"src": "25332:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25395:110:8",
																					"nodeType": "YulBlock",
																					"src": "25395:110:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "25424:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "25424:3:8"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "25429:1:8",
																												"nodeType": "YulIdentifier",
																												"src": "25429:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25420:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "25420:3:8"
																										},
																										"nativeSrc": "25420:11:8",
																										"nodeType": "YulFunctionCall",
																										"src": "25420:11:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "25439:7:8",
																												"nodeType": "YulIdentifier",
																												"src": "25439:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "25433:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "25433:5:8"
																										},
																										"nativeSrc": "25433:14:8",
																										"nodeType": "YulFunctionCall",
																										"src": "25433:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "25413:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "25413:6:8"
																								},
																								"nativeSrc": "25413:35:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25413:35:8"
																							},
																							"nativeSrc": "25413:35:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "25413:35:8"
																						},
																						{
																							"nativeSrc": "25465:26:8",
																							"nodeType": "YulAssignment",
																							"src": "25465:26:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "25480:7:8",
																										"nodeType": "YulIdentifier",
																										"src": "25480:7:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25489:1:8",
																										"nodeType": "YulLiteral",
																										"src": "25489:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25476:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "25476:3:8"
																								},
																								"nativeSrc": "25476:15:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25476:15:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "25465:7:8",
																									"nodeType": "YulIdentifier",
																									"src": "25465:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25362:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "25362:1:8"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "25365:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "25365:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25359:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "25359:2:8"
																					},
																					"nativeSrc": "25359:13:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25359:13:8"
																				},
																				"nativeSrc": "25351:154:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25373:21:8",
																					"nodeType": "YulBlock",
																					"src": "25373:21:8",
																					"statements": [
																						{
																							"nativeSrc": "25375:17:8",
																							"nodeType": "YulAssignment",
																							"src": "25375:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25384:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "25384:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25387:4:8",
																										"nodeType": "YulLiteral",
																										"src": "25387:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25380:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "25380:3:8"
																								},
																								"nativeSrc": "25380:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25380:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25375:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "25375:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25355:3:8",
																					"nodeType": "YulBlock",
																					"src": "25355:3:8",
																					"statements": []
																				},
																				"src": "25351:154:8"
																			},
																			{
																				"nativeSrc": "25518:18:8",
																				"nodeType": "YulAssignment",
																				"src": "25518:18:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "25529:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "25529:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "25534:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "25534:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "25525:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "25525:3:8"
																					},
																					"nativeSrc": "25525:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25525:11:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "25518:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "25518:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "25210:336:8",
																	"nodeType": "YulCase",
																	"src": "25210:336:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25215:1:8",
																		"nodeType": "YulLiteral",
																		"src": "25215:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "25015:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "25015:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25026:1:8",
																		"nodeType": "YulLiteral",
																		"src": "25026:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25011:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25011:3:8"
																},
																"nativeSrc": "25011:17:8",
																"nodeType": "YulFunctionCall",
																"src": "25011:17:8"
															},
															"nativeSrc": "25004:542:8",
															"nodeType": "YulSwitch",
															"src": "25004:542:8"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24721:831:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24791:5:8",
														"nodeType": "YulTypedName",
														"src": "24791:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24798:3:8",
														"nodeType": "YulTypedName",
														"src": "24798:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24806:3:8",
														"nodeType": "YulTypedName",
														"src": "24806:3:8",
														"type": ""
													}
												],
												"src": "24721:831:8"
											},
											{
												"body": {
													"nativeSrc": "25725:352:8",
													"nodeType": "YulBlock",
													"src": "25725:352:8",
													"statements": [
														{
															"nativeSrc": "25735:26:8",
															"nodeType": "YulAssignment",
															"src": "25735:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25747:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "25747:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25758:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25758:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25743:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "25743:3:8"
																},
																"nativeSrc": "25743:18:8",
																"nodeType": "YulFunctionCall",
																"src": "25743:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25735:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "25735:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25811:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25811:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25824:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25824:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25835:1:8",
																				"nodeType": "YulLiteral",
																				"src": "25835:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25820:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25820:3:8"
																		},
																		"nativeSrc": "25820:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25820:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "25771:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "25771:39:8"
																},
																"nativeSrc": "25771:67:8",
																"nodeType": "YulFunctionCall",
																"src": "25771:67:8"
															},
															"nativeSrc": "25771:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "25771:67:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25859:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25859:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25870:2:8",
																				"nodeType": "YulLiteral",
																				"src": "25870:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25855:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25855:3:8"
																		},
																		"nativeSrc": "25855:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25855:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25879:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "25879:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25885:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "25885:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25875:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "25875:3:8"
																		},
																		"nativeSrc": "25875:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "25875:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25848:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "25848:6:8"
																},
																"nativeSrc": "25848:48:8",
																"nodeType": "YulFunctionCall",
																"src": "25848:48:8"
															},
															"nativeSrc": "25848:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "25848:48:8"
														},
														{
															"nativeSrc": "25905:83:8",
															"nodeType": "YulAssignment",
															"src": "25905:83:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25974:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25974:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25983:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "25983:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25913:60:8",
																	"nodeType": "YulIdentifier",
																	"src": "25913:60:8"
																},
																"nativeSrc": "25913:75:8",
																"nodeType": "YulFunctionCall",
																"src": "25913:75:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25905:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "25905:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26042:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "26042:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26055:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "26055:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26066:2:8",
																				"nodeType": "YulLiteral",
																				"src": "26066:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26051:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "26051:3:8"
																		},
																		"nativeSrc": "26051:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26051:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25998:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "25998:43:8"
																},
																"nativeSrc": "25998:72:8",
																"nodeType": "YulFunctionCall",
																"src": "25998:72:8"
															},
															"nativeSrc": "25998:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "25998:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "25558:519:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25681:9:8",
														"nodeType": "YulTypedName",
														"src": "25681:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25693:6:8",
														"nodeType": "YulTypedName",
														"src": "25693:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25701:6:8",
														"nodeType": "YulTypedName",
														"src": "25701:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25709:6:8",
														"nodeType": "YulTypedName",
														"src": "25709:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25720:4:8",
														"nodeType": "YulTypedName",
														"src": "25720:4:8",
														"type": ""
													}
												],
												"src": "25558:519:8"
											},
											{
												"body": {
													"nativeSrc": "26130:32:8",
													"nodeType": "YulBlock",
													"src": "26130:32:8",
													"statements": [
														{
															"nativeSrc": "26140:16:8",
															"nodeType": "YulAssignment",
															"src": "26140:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "26151:5:8",
																"nodeType": "YulIdentifier",
																"src": "26151:5:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "26140:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "26140:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "26083:79:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26112:5:8",
														"nodeType": "YulTypedName",
														"src": "26112:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "26122:7:8",
														"nodeType": "YulTypedName",
														"src": "26122:7:8",
														"type": ""
													}
												],
												"src": "26083:79:8"
											},
											{
												"body": {
													"nativeSrc": "26251:74:8",
													"nodeType": "YulBlock",
													"src": "26251:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26268:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "26268:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26311:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "26311:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "26293:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "26293:17:8"
																				},
																				"nativeSrc": "26293:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "26293:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "26273:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "26273:19:8"
																		},
																		"nativeSrc": "26273:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26273:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26261:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26261:6:8"
																},
																"nativeSrc": "26261:58:8",
																"nodeType": "YulFunctionCall",
																"src": "26261:58:8"
															},
															"nativeSrc": "26261:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "26261:58:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "26168:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26239:5:8",
														"nodeType": "YulTypedName",
														"src": "26239:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26246:3:8",
														"nodeType": "YulTypedName",
														"src": "26246:3:8",
														"type": ""
													}
												],
												"src": "26168:157:8"
											},
											{
												"body": {
													"nativeSrc": "26373:52:8",
													"nodeType": "YulBlock",
													"src": "26373:52:8",
													"statements": [
														{
															"nativeSrc": "26383:35:8",
															"nodeType": "YulAssignment",
															"src": "26383:35:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26408:2:8",
																		"nodeType": "YulLiteral",
																		"src": "26408:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "26412:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "26412:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "26404:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "26404:3:8"
																},
																"nativeSrc": "26404:14:8",
																"nodeType": "YulFunctionCall",
																"src": "26404:14:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26383:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "26383:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "26331:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26354:5:8",
														"nodeType": "YulTypedName",
														"src": "26354:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26364:8:8",
														"nodeType": "YulTypedName",
														"src": "26364:8:8",
														"type": ""
													}
												],
												"src": "26331:94:8"
											},
											{
												"body": {
													"nativeSrc": "26478:47:8",
													"nodeType": "YulBlock",
													"src": "26478:47:8",
													"statements": [
														{
															"nativeSrc": "26488:31:8",
															"nodeType": "YulAssignment",
															"src": "26488:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26513:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "26513:5:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "26499:13:8",
																	"nodeType": "YulIdentifier",
																	"src": "26499:13:8"
																},
																"nativeSrc": "26499:20:8",
																"nodeType": "YulFunctionCall",
																"src": "26499:20:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "26488:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "26488:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "26431:94:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26460:5:8",
														"nodeType": "YulTypedName",
														"src": "26460:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "26470:7:8",
														"nodeType": "YulTypedName",
														"src": "26470:7:8",
														"type": ""
													}
												],
												"src": "26431:94:8"
											},
											{
												"body": {
													"nativeSrc": "26578:53:8",
													"nodeType": "YulBlock",
													"src": "26578:53:8",
													"statements": [
														{
															"nativeSrc": "26588:37:8",
															"nodeType": "YulAssignment",
															"src": "26588:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26619:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "26619:5:8"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "26599:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "26599:19:8"
																},
																"nativeSrc": "26599:26:8",
																"nodeType": "YulFunctionCall",
																"src": "26599:26:8"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "26588:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "26588:7:8"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "26531:100:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26560:5:8",
														"nodeType": "YulTypedName",
														"src": "26560:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "26570:7:8",
														"nodeType": "YulTypedName",
														"src": "26570:7:8",
														"type": ""
													}
												],
												"src": "26531:100:8"
											},
											{
												"body": {
													"nativeSrc": "26720:74:8",
													"nodeType": "YulBlock",
													"src": "26720:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26737:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "26737:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26780:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "26780:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "26762:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "26762:17:8"
																				},
																				"nativeSrc": "26762:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "26762:24:8"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "26742:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "26742:19:8"
																		},
																		"nativeSrc": "26742:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "26742:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26730:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "26730:6:8"
																},
																"nativeSrc": "26730:58:8",
																"nodeType": "YulFunctionCall",
																"src": "26730:58:8"
															},
															"nativeSrc": "26730:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "26730:58:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "26637:157:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26708:5:8",
														"nodeType": "YulTypedName",
														"src": "26708:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26715:3:8",
														"nodeType": "YulTypedName",
														"src": "26715:3:8",
														"type": ""
													}
												],
												"src": "26637:157:8"
											},
											{
												"body": {
													"nativeSrc": "26944:253:8",
													"nodeType": "YulBlock",
													"src": "26944:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27017:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27017:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27026:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27026:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "26955:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "26955:61:8"
																},
																"nativeSrc": "26955:75:8",
																"nodeType": "YulFunctionCall",
																"src": "26955:75:8"
															},
															"nativeSrc": "26955:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "26955:75:8"
														},
														{
															"nativeSrc": "27039:19:8",
															"nodeType": "YulAssignment",
															"src": "27039:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27050:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27050:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27055:2:8",
																		"nodeType": "YulLiteral",
																		"src": "27055:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27046:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27046:3:8"
																},
																"nativeSrc": "27046:12:8",
																"nodeType": "YulFunctionCall",
																"src": "27046:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27039:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27039:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27130:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "27130:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27139:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27139:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "27068:61:8",
																	"nodeType": "YulIdentifier",
																	"src": "27068:61:8"
																},
																"nativeSrc": "27068:75:8",
																"nodeType": "YulFunctionCall",
																"src": "27068:75:8"
															},
															"nativeSrc": "27068:75:8",
															"nodeType": "YulExpressionStatement",
															"src": "27068:75:8"
														},
														{
															"nativeSrc": "27152:19:8",
															"nodeType": "YulAssignment",
															"src": "27152:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "27163:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "27168:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27159:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27159:3:8"
																},
																"nativeSrc": "27159:12:8",
																"nodeType": "YulFunctionCall",
																"src": "27159:12:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27152:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27152:3:8"
																}
															]
														},
														{
															"nativeSrc": "27181:10:8",
															"nodeType": "YulAssignment",
															"src": "27181:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "27188:3:8",
																"nodeType": "YulIdentifier",
																"src": "27188:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27181:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27181:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "26800:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26915:3:8",
														"nodeType": "YulTypedName",
														"src": "26915:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26921:6:8",
														"nodeType": "YulTypedName",
														"src": "26921:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26929:6:8",
														"nodeType": "YulTypedName",
														"src": "26929:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26940:3:8",
														"nodeType": "YulTypedName",
														"src": "26940:3:8",
														"type": ""
													}
												],
												"src": "26800:397:8"
											},
											{
												"body": {
													"nativeSrc": "27231:152:8",
													"nodeType": "YulBlock",
													"src": "27231:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27248:1:8",
																		"nodeType": "YulLiteral",
																		"src": "27248:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27251:77:8",
																		"nodeType": "YulLiteral",
																		"src": "27251:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27241:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "27241:6:8"
																},
																"nativeSrc": "27241:88:8",
																"nodeType": "YulFunctionCall",
																"src": "27241:88:8"
															},
															"nativeSrc": "27241:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "27241:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27345:1:8",
																		"nodeType": "YulLiteral",
																		"src": "27345:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27348:4:8",
																		"nodeType": "YulLiteral",
																		"src": "27348:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27338:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "27338:6:8"
																},
																"nativeSrc": "27338:15:8",
																"nodeType": "YulFunctionCall",
																"src": "27338:15:8"
															},
															"nativeSrc": "27338:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "27338:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27369:1:8",
																		"nodeType": "YulLiteral",
																		"src": "27369:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27372:4:8",
																		"nodeType": "YulLiteral",
																		"src": "27372:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "27362:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "27362:6:8"
																},
																"nativeSrc": "27362:15:8",
																"nodeType": "YulFunctionCall",
																"src": "27362:15:8"
															},
															"nativeSrc": "27362:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "27362:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "27203:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "27203:180:8"
											},
											{
												"body": {
													"nativeSrc": "27423:142:8",
													"nodeType": "YulBlock",
													"src": "27423:142:8",
													"statements": [
														{
															"nativeSrc": "27433:25:8",
															"nodeType": "YulAssignment",
															"src": "27433:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27456:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27456:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27438:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "27438:17:8"
																},
																"nativeSrc": "27438:20:8",
																"nodeType": "YulFunctionCall",
																"src": "27438:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "27433:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "27433:1:8"
																}
															]
														},
														{
															"nativeSrc": "27467:25:8",
															"nodeType": "YulAssignment",
															"src": "27467:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27490:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27490:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27472:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "27472:17:8"
																},
																"nativeSrc": "27472:20:8",
																"nodeType": "YulFunctionCall",
																"src": "27472:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "27467:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "27467:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27514:22:8",
																"nodeType": "YulBlock",
																"src": "27514:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "27516:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "27516:16:8"
																			},
																			"nativeSrc": "27516:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "27516:18:8"
																		},
																		"nativeSrc": "27516:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "27516:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27511:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27511:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27504:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "27504:6:8"
																},
																"nativeSrc": "27504:9:8",
																"nodeType": "YulFunctionCall",
																"src": "27504:9:8"
															},
															"nativeSrc": "27501:35:8",
															"nodeType": "YulIf",
															"src": "27501:35:8"
														},
														{
															"nativeSrc": "27545:14:8",
															"nodeType": "YulAssignment",
															"src": "27545:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27554:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27554:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27557:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27557:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "27550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27550:3:8"
																},
																"nativeSrc": "27550:9:8",
																"nodeType": "YulFunctionCall",
																"src": "27550:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "27545:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "27545:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "27389:176:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "27412:1:8",
														"nodeType": "YulTypedName",
														"src": "27412:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "27415:1:8",
														"nodeType": "YulTypedName",
														"src": "27415:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "27421:1:8",
														"nodeType": "YulTypedName",
														"src": "27421:1:8",
														"type": ""
													}
												],
												"src": "27389:176:8"
											},
											{
												"body": {
													"nativeSrc": "27619:362:8",
													"nodeType": "YulBlock",
													"src": "27619:362:8",
													"statements": [
														{
															"nativeSrc": "27629:25:8",
															"nodeType": "YulAssignment",
															"src": "27629:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27652:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27652:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27634:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "27634:17:8"
																},
																"nativeSrc": "27634:20:8",
																"nodeType": "YulFunctionCall",
																"src": "27634:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "27629:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "27629:1:8"
																}
															]
														},
														{
															"nativeSrc": "27663:25:8",
															"nodeType": "YulAssignment",
															"src": "27663:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27686:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27686:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27668:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "27668:17:8"
																},
																"nativeSrc": "27668:20:8",
																"nodeType": "YulFunctionCall",
																"src": "27668:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "27663:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "27663:1:8"
																}
															]
														},
														{
															"nativeSrc": "27697:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "27697:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27720:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27720:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27723:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "27723:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "27716:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "27716:3:8"
																},
																"nativeSrc": "27716:9:8",
																"nodeType": "YulFunctionCall",
																"src": "27716:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "27701:11:8",
																	"nodeType": "YulTypedName",
																	"src": "27701:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27734:41:8",
															"nodeType": "YulAssignment",
															"src": "27734:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "27763:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "27763:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27745:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "27745:17:8"
																},
																"nativeSrc": "27745:30:8",
																"nodeType": "YulFunctionCall",
																"src": "27745:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "27734:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "27734:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27952:22:8",
																"nodeType": "YulBlock",
																"src": "27952:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "27954:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "27954:16:8"
																			},
																			"nativeSrc": "27954:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "27954:18:8"
																		},
																		"nativeSrc": "27954:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "27954:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "27885:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "27885:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "27878:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "27878:6:8"
																				},
																				"nativeSrc": "27878:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "27878:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "27908:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "27908:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "27915:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "27915:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "27924:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "27924:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "27911:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "27911:3:8"
																						},
																						"nativeSrc": "27911:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "27911:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "27905:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "27905:2:8"
																				},
																				"nativeSrc": "27905:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "27905:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "27858:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "27858:2:8"
																		},
																		"nativeSrc": "27858:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "27858:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27838:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "27838:6:8"
																},
																"nativeSrc": "27838:113:8",
																"nodeType": "YulFunctionCall",
																"src": "27838:113:8"
															},
															"nativeSrc": "27835:139:8",
															"nodeType": "YulIf",
															"src": "27835:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "27571:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "27602:1:8",
														"nodeType": "YulTypedName",
														"src": "27602:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "27605:1:8",
														"nodeType": "YulTypedName",
														"src": "27605:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "27611:7:8",
														"nodeType": "YulTypedName",
														"src": "27611:7:8",
														"type": ""
													}
												],
												"src": "27571:410:8"
											},
											{
												"body": {
													"nativeSrc": "28093:47:8",
													"nodeType": "YulBlock",
													"src": "28093:47:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28115:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "28115:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28123:1:8",
																				"nodeType": "YulLiteral",
																				"src": "28123:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28111:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28111:3:8"
																		},
																		"nativeSrc": "28111:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28111:14:8"
																	},
																	{
																		"hexValue": "776f6e",
																		"kind": "string",
																		"nativeSrc": "28127:5:8",
																		"nodeType": "YulLiteral",
																		"src": "28127:5:8",
																		"type": "",
																		"value": "won"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28104:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "28104:6:8"
																},
																"nativeSrc": "28104:29:8",
																"nodeType": "YulFunctionCall",
																"src": "28104:29:8"
															},
															"nativeSrc": "28104:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "28104:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
												"nativeSrc": "27987:153:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28085:6:8",
														"nodeType": "YulTypedName",
														"src": "28085:6:8",
														"type": ""
													}
												],
												"src": "27987:153:8"
											},
											{
												"body": {
													"nativeSrc": "28292:219:8",
													"nodeType": "YulBlock",
													"src": "28292:219:8",
													"statements": [
														{
															"nativeSrc": "28302:73:8",
															"nodeType": "YulAssignment",
															"src": "28302:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28368:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "28368:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28373:1:8",
																		"nodeType": "YulLiteral",
																		"src": "28373:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28309:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "28309:58:8"
																},
																"nativeSrc": "28309:66:8",
																"nodeType": "YulFunctionCall",
																"src": "28309:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28302:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28302:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28473:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "28473:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																	"nativeSrc": "28384:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "28384:88:8"
																},
																"nativeSrc": "28384:93:8",
																"nodeType": "YulFunctionCall",
																"src": "28384:93:8"
															},
															"nativeSrc": "28384:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "28384:93:8"
														},
														{
															"nativeSrc": "28486:19:8",
															"nodeType": "YulAssignment",
															"src": "28486:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28497:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "28497:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28502:2:8",
																		"nodeType": "YulLiteral",
																		"src": "28502:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28493:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28493:3:8"
																},
																"nativeSrc": "28493:12:8",
																"nodeType": "YulFunctionCall",
																"src": "28493:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28486:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28486:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28146:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28280:3:8",
														"nodeType": "YulTypedName",
														"src": "28280:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28288:3:8",
														"nodeType": "YulTypedName",
														"src": "28288:3:8",
														"type": ""
													}
												],
												"src": "28146:365:8"
											},
											{
												"body": {
													"nativeSrc": "28738:406:8",
													"nodeType": "YulBlock",
													"src": "28738:406:8",
													"statements": [
														{
															"nativeSrc": "28748:26:8",
															"nodeType": "YulAssignment",
															"src": "28748:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28760:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "28760:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28771:2:8",
																		"nodeType": "YulLiteral",
																		"src": "28771:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28756:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "28756:3:8"
																},
																"nativeSrc": "28756:18:8",
																"nodeType": "YulFunctionCall",
																"src": "28756:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28748:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "28748:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28828:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "28828:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28841:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "28841:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28852:1:8",
																				"nodeType": "YulLiteral",
																				"src": "28852:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28837:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28837:3:8"
																		},
																		"nativeSrc": "28837:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28837:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28784:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "28784:43:8"
																},
																"nativeSrc": "28784:71:8",
																"nodeType": "YulFunctionCall",
																"src": "28784:71:8"
															},
															"nativeSrc": "28784:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "28784:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28903:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "28903:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28916:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "28916:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28927:2:8",
																				"nodeType": "YulLiteral",
																				"src": "28927:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28912:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28912:3:8"
																		},
																		"nativeSrc": "28912:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28912:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "28865:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "28865:37:8"
																},
																"nativeSrc": "28865:66:8",
																"nodeType": "YulFunctionCall",
																"src": "28865:66:8"
															},
															"nativeSrc": "28865:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "28865:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28952:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "28952:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28963:2:8",
																				"nodeType": "YulLiteral",
																				"src": "28963:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28948:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28948:3:8"
																		},
																		"nativeSrc": "28948:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28948:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28972:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "28972:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "28978:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28968:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "28968:3:8"
																		},
																		"nativeSrc": "28968:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28968:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28941:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "28941:6:8"
																},
																"nativeSrc": "28941:48:8",
																"nodeType": "YulFunctionCall",
																"src": "28941:48:8"
															},
															"nativeSrc": "28941:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "28941:48:8"
														},
														{
															"nativeSrc": "28998:139:8",
															"nodeType": "YulAssignment",
															"src": "28998:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29132:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "29132:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29006:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "29006:124:8"
																},
																"nativeSrc": "29006:131:8",
																"nodeType": "YulFunctionCall",
																"src": "29006:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28998:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "28998:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28517:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28702:9:8",
														"nodeType": "YulTypedName",
														"src": "28702:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28714:6:8",
														"nodeType": "YulTypedName",
														"src": "28714:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28722:6:8",
														"nodeType": "YulTypedName",
														"src": "28722:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28733:4:8",
														"nodeType": "YulTypedName",
														"src": "28733:4:8",
														"type": ""
													}
												],
												"src": "28517:627:8"
											},
											{
												"body": {
													"nativeSrc": "29256:48:8",
													"nodeType": "YulBlock",
													"src": "29256:48:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29278:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "29278:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29286:1:8",
																				"nodeType": "YulLiteral",
																				"src": "29286:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29274:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "29274:3:8"
																		},
																		"nativeSrc": "29274:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "29274:14:8"
																	},
																	{
																		"hexValue": "6c6f7374",
																		"kind": "string",
																		"nativeSrc": "29290:6:8",
																		"nodeType": "YulLiteral",
																		"src": "29290:6:8",
																		"type": "",
																		"value": "lost"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29267:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "29267:6:8"
																},
																"nativeSrc": "29267:30:8",
																"nodeType": "YulFunctionCall",
																"src": "29267:30:8"
															},
															"nativeSrc": "29267:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "29267:30:8"
														}
													]
												},
												"name": "store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
												"nativeSrc": "29150:154:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29248:6:8",
														"nodeType": "YulTypedName",
														"src": "29248:6:8",
														"type": ""
													}
												],
												"src": "29150:154:8"
											},
											{
												"body": {
													"nativeSrc": "29456:219:8",
													"nodeType": "YulBlock",
													"src": "29456:219:8",
													"statements": [
														{
															"nativeSrc": "29466:73:8",
															"nodeType": "YulAssignment",
															"src": "29466:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29532:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "29532:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29537:1:8",
																		"nodeType": "YulLiteral",
																		"src": "29537:1:8",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29473:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "29473:58:8"
																},
																"nativeSrc": "29473:66:8",
																"nodeType": "YulFunctionCall",
																"src": "29473:66:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29466:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "29466:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29637:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "29637:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																	"nativeSrc": "29548:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "29548:88:8"
																},
																"nativeSrc": "29548:93:8",
																"nodeType": "YulFunctionCall",
																"src": "29548:93:8"
															},
															"nativeSrc": "29548:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "29548:93:8"
														},
														{
															"nativeSrc": "29650:19:8",
															"nodeType": "YulAssignment",
															"src": "29650:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29661:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "29661:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29666:2:8",
																		"nodeType": "YulLiteral",
																		"src": "29666:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29657:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "29657:3:8"
																},
																"nativeSrc": "29657:12:8",
																"nodeType": "YulFunctionCall",
																"src": "29657:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29650:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "29650:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29310:365:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29444:3:8",
														"nodeType": "YulTypedName",
														"src": "29444:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29452:3:8",
														"nodeType": "YulTypedName",
														"src": "29452:3:8",
														"type": ""
													}
												],
												"src": "29310:365:8"
											},
											{
												"body": {
													"nativeSrc": "29902:406:8",
													"nodeType": "YulBlock",
													"src": "29902:406:8",
													"statements": [
														{
															"nativeSrc": "29912:26:8",
															"nodeType": "YulAssignment",
															"src": "29912:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29924:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "29924:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29935:2:8",
																		"nodeType": "YulLiteral",
																		"src": "29935:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29920:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "29920:3:8"
																},
																"nativeSrc": "29920:18:8",
																"nodeType": "YulFunctionCall",
																"src": "29920:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29912:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "29912:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29992:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "29992:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30005:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "30005:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30016:1:8",
																				"nodeType": "YulLiteral",
																				"src": "30016:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30001:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "30001:3:8"
																		},
																		"nativeSrc": "30001:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "30001:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "29948:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "29948:43:8"
																},
																"nativeSrc": "29948:71:8",
																"nodeType": "YulFunctionCall",
																"src": "29948:71:8"
															},
															"nativeSrc": "29948:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "29948:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30067:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "30067:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30080:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "30080:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30091:2:8",
																				"nodeType": "YulLiteral",
																				"src": "30091:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30076:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "30076:3:8"
																		},
																		"nativeSrc": "30076:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "30076:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "30029:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "30029:37:8"
																},
																"nativeSrc": "30029:66:8",
																"nodeType": "YulFunctionCall",
																"src": "30029:66:8"
															},
															"nativeSrc": "30029:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "30029:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30116:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "30116:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30127:2:8",
																				"nodeType": "YulLiteral",
																				"src": "30127:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "30112:3:8"
																		},
																		"nativeSrc": "30112:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "30112:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30136:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "30136:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30142:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "30142:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30132:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "30132:3:8"
																		},
																		"nativeSrc": "30132:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "30132:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30105:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "30105:6:8"
																},
																"nativeSrc": "30105:48:8",
																"nodeType": "YulFunctionCall",
																"src": "30105:48:8"
															},
															"nativeSrc": "30105:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "30105:48:8"
														},
														{
															"nativeSrc": "30162:139:8",
															"nodeType": "YulAssignment",
															"src": "30162:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30296:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "30296:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30170:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "30170:124:8"
																},
																"nativeSrc": "30170:131:8",
																"nodeType": "YulFunctionCall",
																"src": "30170:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30162:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "30162:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29681:627:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29866:9:8",
														"nodeType": "YulTypedName",
														"src": "29866:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29878:6:8",
														"nodeType": "YulTypedName",
														"src": "29878:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29886:6:8",
														"nodeType": "YulTypedName",
														"src": "29886:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29897:4:8",
														"nodeType": "YulTypedName",
														"src": "29897:4:8",
														"type": ""
													}
												],
												"src": "29681:627:8"
											},
											{
												"body": {
													"nativeSrc": "30420:122:8",
													"nodeType": "YulBlock",
													"src": "30420:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30442:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "30442:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30450:1:8",
																				"nodeType": "YulLiteral",
																				"src": "30450:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30438:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "30438:3:8"
																		},
																		"nativeSrc": "30438:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "30438:14:8"
																	},
																	{
																		"hexValue": "596f7527766520616c726561647920636c61696d656420796f75722077656c63",
																		"kind": "string",
																		"nativeSrc": "30454:34:8",
																		"nodeType": "YulLiteral",
																		"src": "30454:34:8",
																		"type": "",
																		"value": "You've already claimed your welc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30431:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "30431:6:8"
																},
																"nativeSrc": "30431:58:8",
																"nodeType": "YulFunctionCall",
																"src": "30431:58:8"
															},
															"nativeSrc": "30431:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "30431:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30510:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "30510:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30518:2:8",
																				"nodeType": "YulLiteral",
																				"src": "30518:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30506:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "30506:3:8"
																		},
																		"nativeSrc": "30506:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "30506:15:8"
																	},
																	{
																		"hexValue": "6f6d6520626f6e7573",
																		"kind": "string",
																		"nativeSrc": "30523:11:8",
																		"nodeType": "YulLiteral",
																		"src": "30523:11:8",
																		"type": "",
																		"value": "ome bonus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30499:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "30499:6:8"
																},
																"nativeSrc": "30499:36:8",
																"nodeType": "YulFunctionCall",
																"src": "30499:36:8"
															},
															"nativeSrc": "30499:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "30499:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
												"nativeSrc": "30314:228:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "30412:6:8",
														"nodeType": "YulTypedName",
														"src": "30412:6:8",
														"type": ""
													}
												],
												"src": "30314:228:8"
											},
											{
												"body": {
													"nativeSrc": "30694:220:8",
													"nodeType": "YulBlock",
													"src": "30694:220:8",
													"statements": [
														{
															"nativeSrc": "30704:74:8",
															"nodeType": "YulAssignment",
															"src": "30704:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "30770:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30775:2:8",
																		"nodeType": "YulLiteral",
																		"src": "30775:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "30711:58:8"
																},
																"nativeSrc": "30711:67:8",
																"nodeType": "YulFunctionCall",
																"src": "30711:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "30704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "30876:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																	"nativeSrc": "30787:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "30787:88:8"
																},
																"nativeSrc": "30787:93:8",
																"nodeType": "YulFunctionCall",
																"src": "30787:93:8"
															},
															"nativeSrc": "30787:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "30787:93:8"
														},
														{
															"nativeSrc": "30889:19:8",
															"nodeType": "YulAssignment",
															"src": "30889:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30900:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "30900:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30905:2:8",
																		"nodeType": "YulLiteral",
																		"src": "30905:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30896:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "30896:3:8"
																},
																"nativeSrc": "30896:12:8",
																"nodeType": "YulFunctionCall",
																"src": "30896:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30889:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "30889:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30548:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30682:3:8",
														"nodeType": "YulTypedName",
														"src": "30682:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30690:3:8",
														"nodeType": "YulTypedName",
														"src": "30690:3:8",
														"type": ""
													}
												],
												"src": "30548:366:8"
											},
											{
												"body": {
													"nativeSrc": "31091:248:8",
													"nodeType": "YulBlock",
													"src": "31091:248:8",
													"statements": [
														{
															"nativeSrc": "31101:26:8",
															"nodeType": "YulAssignment",
															"src": "31101:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31113:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "31113:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31124:2:8",
																		"nodeType": "YulLiteral",
																		"src": "31124:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31109:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "31109:3:8"
																},
																"nativeSrc": "31109:18:8",
																"nodeType": "YulFunctionCall",
																"src": "31109:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31101:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "31101:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31148:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "31148:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31159:1:8",
																				"nodeType": "YulLiteral",
																				"src": "31159:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31144:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "31144:3:8"
																		},
																		"nativeSrc": "31144:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "31144:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31167:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "31167:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31173:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "31173:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31163:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "31163:3:8"
																		},
																		"nativeSrc": "31163:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "31163:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31137:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "31137:6:8"
																},
																"nativeSrc": "31137:47:8",
																"nodeType": "YulFunctionCall",
																"src": "31137:47:8"
															},
															"nativeSrc": "31137:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "31137:47:8"
														},
														{
															"nativeSrc": "31193:139:8",
															"nodeType": "YulAssignment",
															"src": "31193:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "31327:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "31327:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31201:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "31201:124:8"
																},
																"nativeSrc": "31201:131:8",
																"nodeType": "YulFunctionCall",
																"src": "31201:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31193:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "31193:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30920:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31071:9:8",
														"nodeType": "YulTypedName",
														"src": "31071:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31086:4:8",
														"nodeType": "YulTypedName",
														"src": "31086:4:8",
														"type": ""
													}
												],
												"src": "30920:419:8"
											},
											{
												"body": {
													"nativeSrc": "31499:288:8",
													"nodeType": "YulBlock",
													"src": "31499:288:8",
													"statements": [
														{
															"nativeSrc": "31509:26:8",
															"nodeType": "YulAssignment",
															"src": "31509:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31521:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "31521:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31532:2:8",
																		"nodeType": "YulLiteral",
																		"src": "31532:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31517:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "31517:3:8"
																},
																"nativeSrc": "31517:18:8",
																"nodeType": "YulFunctionCall",
																"src": "31517:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31509:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "31509:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31589:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "31589:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31602:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "31602:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31613:1:8",
																				"nodeType": "YulLiteral",
																				"src": "31613:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31598:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "31598:3:8"
																		},
																		"nativeSrc": "31598:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "31598:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31545:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "31545:43:8"
																},
																"nativeSrc": "31545:71:8",
																"nodeType": "YulFunctionCall",
																"src": "31545:71:8"
															},
															"nativeSrc": "31545:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "31545:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31670:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "31670:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31683:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "31683:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31694:2:8",
																				"nodeType": "YulLiteral",
																				"src": "31694:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31679:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "31679:3:8"
																		},
																		"nativeSrc": "31679:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "31679:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31626:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "31626:43:8"
																},
																"nativeSrc": "31626:72:8",
																"nodeType": "YulFunctionCall",
																"src": "31626:72:8"
															},
															"nativeSrc": "31626:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "31626:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31752:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "31752:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31765:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "31765:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31776:2:8",
																				"nodeType": "YulLiteral",
																				"src": "31776:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31761:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "31761:3:8"
																		},
																		"nativeSrc": "31761:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "31761:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31708:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "31708:43:8"
																},
																"nativeSrc": "31708:72:8",
																"nodeType": "YulFunctionCall",
																"src": "31708:72:8"
															},
															"nativeSrc": "31708:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "31708:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "31345:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31455:9:8",
														"nodeType": "YulTypedName",
														"src": "31455:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31467:6:8",
														"nodeType": "YulTypedName",
														"src": "31467:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31475:6:8",
														"nodeType": "YulTypedName",
														"src": "31475:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31483:6:8",
														"nodeType": "YulTypedName",
														"src": "31483:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31494:4:8",
														"nodeType": "YulTypedName",
														"src": "31494:4:8",
														"type": ""
													}
												],
												"src": "31345:442:8"
											},
											{
												"body": {
													"nativeSrc": "31837:147:8",
													"nodeType": "YulBlock",
													"src": "31837:147:8",
													"statements": [
														{
															"nativeSrc": "31847:25:8",
															"nodeType": "YulAssignment",
															"src": "31847:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "31870:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "31870:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "31852:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "31852:17:8"
																},
																"nativeSrc": "31852:20:8",
																"nodeType": "YulFunctionCall",
																"src": "31852:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "31847:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "31847:1:8"
																}
															]
														},
														{
															"nativeSrc": "31881:25:8",
															"nodeType": "YulAssignment",
															"src": "31881:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "31904:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "31904:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "31886:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "31886:17:8"
																},
																"nativeSrc": "31886:20:8",
																"nodeType": "YulFunctionCall",
																"src": "31886:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "31881:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "31881:1:8"
																}
															]
														},
														{
															"nativeSrc": "31915:16:8",
															"nodeType": "YulAssignment",
															"src": "31915:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "31926:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "31926:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "31929:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "31929:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31922:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "31922:3:8"
																},
																"nativeSrc": "31922:9:8",
																"nodeType": "YulFunctionCall",
																"src": "31922:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "31915:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "31915:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "31955:22:8",
																"nodeType": "YulBlock",
																"src": "31955:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "31957:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "31957:16:8"
																			},
																			"nativeSrc": "31957:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "31957:18:8"
																		},
																		"nativeSrc": "31957:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "31957:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "31947:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "31947:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "31950:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "31950:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "31944:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "31944:2:8"
																},
																"nativeSrc": "31944:10:8",
																"nodeType": "YulFunctionCall",
																"src": "31944:10:8"
															},
															"nativeSrc": "31941:36:8",
															"nodeType": "YulIf",
															"src": "31941:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "31793:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "31824:1:8",
														"nodeType": "YulTypedName",
														"src": "31824:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "31827:1:8",
														"nodeType": "YulTypedName",
														"src": "31827:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "31833:3:8",
														"nodeType": "YulTypedName",
														"src": "31833:3:8",
														"type": ""
													}
												],
												"src": "31793:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct DegenToken.Item -> struct DegenToken.Item\n    function abi_encode_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // itemId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DegenToken.Item[] -> struct DegenToken.Item[]\n    function abi_encode_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Item_$997_memory_ptr_to_t_struct$_Item_$997_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint8_t_uint256__to_t_string_memory_ptr_t_uint8_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Item not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_storage(value) -> length {\n\n        length := sload(value)\n\n        length := extract_byte_array_length(length)\n\n    }\n\n    function copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage(slot, src) {\n        if eq(slot, src) { leave }\n\n        let newLen := array_length_t_string_storage(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n            src := array_dataslot_t_string_storage(src)\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, sload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 1)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := sload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint8_t_string_storage_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address__to_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427(memPtr) {\n\n        mstore(add(memPtr, 0), \"won\")\n\n    }\n\n    function abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888(memPtr) {\n\n        mstore(add(memPtr, 0), \"lost\")\n\n    }\n\n    function abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98(memPtr) {\n\n        mstore(add(memPtr, 0), \"You've already claimed your welc\")\n\n        mstore(add(memPtr, 32), \"ome bonus\")\n\n    }\n\n    function abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610171575f3560e01c8063715018a6116100dc578063af3bcb7d11610095578063ea5e65e01161006f578063ea5e65e014610435578063f2fde38b14610451578063f5112f871461046d578063fbd1a97b1461047757610171565b8063af3bcb7d146103b9578063ce6019b4146103d5578063dd62ed3e1461040557610171565b8063715018a61461030b57806379cc6790146103155780637b47ec1a146103315780638da5cb5b1461034d57806395d89b411461036b578063a9059cbb1461038957610171565b806323b872dd1161012e57806323b872dd14610239578063313ce5671461026957806340c10f191461028757806342966c68146102a357806362d6bbdf146102bf57806370a08231146102db57610171565b806306fdde0314610175578063095ea7b3146101935780631072cbea146101c357806312065fe0146101df57806317d70f7c146101fd57806318160ddd1461021b575b5f80fd5b61017d6104a9565b60405161018a919061179a565b60405180910390f35b6101ad60048036038101906101a89190611858565b610539565b6040516101ba91906118b0565b60405180910390f35b6101dd60048036038101906101d89190611858565b61055b565b005b6101e76105b5565b6040516101f491906118d8565b60405180910390f35b6102056105c4565b604051610212919061190c565b60405180910390f35b6102236105d6565b60405161023091906118d8565b60405180910390f35b610253600480360381019061024e9190611925565b6105df565b60405161026091906118b0565b60405180910390f35b61027161060d565b60405161027e919061190c565b60405180910390f35b6102a1600480360381019061029c9190611858565b610611565b005b6102bd60048036038101906102b89190611975565b610627565b005b6102d960048036038101906102d49190611acc565b61063b565b005b6102f560048036038101906102f09190611b26565b610710565b60405161030291906118d8565b60405180910390f35b610313610755565b005b61032f600480360381019061032a9190611858565b610768565b005b61034b60048036038101906103469190611975565b610788565b005b6103556107df565b6040516103629190611b60565b60405180910390f35b610373610807565b604051610380919061179a565b60405180910390f35b6103a3600480360381019061039e9190611858565b610897565b6040516103b091906118b0565b60405180910390f35b6103d360048036038101906103ce9190611ba3565b6108b9565b005b6103ef60048036038101906103ea9190611b26565b610ae9565b6040516103fc9190611d3c565b60405180910390f35b61041f600480360381019061041a9190611d5c565b610c37565b60405161042c91906118d8565b60405180910390f35b61044f600480360381019061044a9190611dc4565b610cb9565b005b61046b60048036038101906104669190611b26565b610dcc565b005b610475610e50565b005b610491600480360381019061048c9190611ba3565b610ea7565b6040516104a093929190611e02565b60405180910390f35b6060600380546104b890611e6b565b80601f01602080910402602001604051908101604052809291908181526020018280546104e490611e6b565b801561052f5780601f106105065761010080835404028352916020019161052f565b820191905f5260205f20905b81548152906001019060200180831161051257829003601f168201915b5050505050905090565b5f80610543610f5f565b9050610550818585610f66565b600191505092915050565b8061056533610710565b10156105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d90611ee5565b60405180910390fd5b6105b08282610897565b505050565b5f6105bf33610710565b905090565b60085f9054906101000a900460ff1681565b5f600254905090565b5f806105e9610f5f565b90506105f6858285610f78565b61060185858561100a565b60019150509392505050565b5f90565b6106196110fa565b6106238282611181565b5050565b610638610632610f5f565b82611200565b50565b6106436110fa565b604051806060016040528083815260200160085f9054906101000a900460ff1660ff1681526020018281525060065f60085f9054906101000a900460ff1660ff1660ff1681526020019081526020015f205f820151815f0190816106a791906120a0565b506020820151816001015f6101000a81548160ff021916908360ff1602179055506040820151816002015590505060085f81819054906101000a900460ff16809291906106f39061219c565b91906101000a81548160ff021916908360ff160217905550505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61075d6110fa565b6107665f61127f565b565b61077a82610774610f5f565b83610f78565b6107848282611200565b5050565b8061079233610710565b10156107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca9061220e565b60405180910390fd5b6107dc81610627565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461081690611e6b565b80601f016020809104026020016040519081016040528092919081815260200182805461084290611e6b565b801561088d5780601f106108645761010080835404028352916020019161088d565b820191905f5260205f20905b81548152906001019060200180831161087057829003601f168201915b5050505050905090565b5f806108a1610f5f565b90506108ae81858561100a565b600191505092915050565b5f60065f8360ff1660ff1681526020019081526020015f206002015403610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090c90612276565b60405180910390fd5b60065f8260ff1660ff1681526020019081526020015f206002015461093933610710565b101561097a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097190611ee5565b60405180910390fd5b61099d60065f8360ff1660ff1681526020019081526020015f2060020154610627565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060065f8360ff1660ff1681526020019081526020015f20908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f8201815f019081610a2991906122a9565b50600182015f9054906101000a900460ff16816001015f6101000a81548160ff021916908360ff1602179055506002820154816002015550503373ffffffffffffffffffffffffffffffffffffffff167f8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e8260065f8560ff1660ff1681526020019081526020015f205f0160065f8660ff1660ff1681526020019081526020015f2060020154604051610ade9392919061240f565b60405180910390a250565b606060075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610c2c578382905f5260205f2090600302016040518060600160405290815f82018054610b7790611e6b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba390611e6b565b8015610bee5780601f10610bc557610100808354040283529160200191610bee565b820191905f5260205f20905b815481529060010190602001808311610bd157829003601f168201915b50505050508152602001600182015f9054906101000a900460ff1660ff1660ff16815260200160028201548152505081526020019060010190610b47565b505050509050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f600a4233604051602001610ccf9291906124b0565b604051602081830303815290604052805190602001205f1c610cf19190612508565b905060058110151583151503610d6d57610d1733600284610d129190612538565b611181565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587826001604051610d609291906125c3565b60405180910390a2610dc7565b610d7682610627565b3373ffffffffffffffffffffffffffffffffffffffff167fd04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587825f604051610dbe929190612647565b60405180910390a25b505050565b610dd46110fa565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e44575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e3b9190611b60565b60405180910390fd5b610e4d8161127f565b50565b5f610e5a33610710565b14610e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e91906126f1565b60405180910390fd5b610ea5336032611181565b565b6006602052805f5260405f205f91509050805f018054610ec690611e6b565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef290611e6b565b8015610f3d5780601f10610f1457610100808354040283529160200191610f3d565b820191905f5260205f20905b815481529060010190602001808311610f2057829003601f168201915b505050505090806001015f9054906101000a900460ff16908060020154905083565b5f33905090565b610f738383836001611342565b505050565b5f610f838484610c37565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110045781811015610ff5578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fec9392919061270f565b60405180910390fd5b61100384848484035f611342565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361107a575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110719190611b60565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ea575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110e19190611b60565b60405180910390fd5b6110f5838383611511565b505050565b611102610f5f565b73ffffffffffffffffffffffffffffffffffffffff166111206107df565b73ffffffffffffffffffffffffffffffffffffffff161461117f57611143610f5f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111769190611b60565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f1575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111e89190611b60565b60405180910390fd5b6111fc5f8383611511565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611270575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112679190611b60565b60405180910390fd5b61127b825f83611511565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113b2575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113a99190611b60565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611422575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114199190611b60565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561150b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161150291906118d8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611561578060025f8282546115559190612744565b9250508190555061162f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156115ea578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016115e19392919061270f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611676578060025f82825403925050819055506116c0565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161171d91906118d8565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61176c8261172a565b6117768185611734565b9350611786818560208601611744565b61178f81611752565b840191505092915050565b5f6020820190508181035f8301526117b28184611762565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117f4826117cb565b9050919050565b611804816117ea565b811461180e575f80fd5b50565b5f8135905061181f816117fb565b92915050565b5f819050919050565b61183781611825565b8114611841575f80fd5b50565b5f813590506118528161182e565b92915050565b5f806040838503121561186e5761186d6117c3565b5b5f61187b85828601611811565b925050602061188c85828601611844565b9150509250929050565b5f8115159050919050565b6118aa81611896565b82525050565b5f6020820190506118c35f8301846118a1565b92915050565b6118d281611825565b82525050565b5f6020820190506118eb5f8301846118c9565b92915050565b5f60ff82169050919050565b611906816118f1565b82525050565b5f60208201905061191f5f8301846118fd565b92915050565b5f805f6060848603121561193c5761193b6117c3565b5b5f61194986828701611811565b935050602061195a86828701611811565b925050604061196b86828701611844565b9150509250925092565b5f6020828403121561198a576119896117c3565b5b5f61199784828501611844565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6119de82611752565b810181811067ffffffffffffffff821117156119fd576119fc6119a8565b5b80604052505050565b5f611a0f6117ba565b9050611a1b82826119d5565b919050565b5f67ffffffffffffffff821115611a3a57611a396119a8565b5b611a4382611752565b9050602081019050919050565b828183375f83830152505050565b5f611a70611a6b84611a20565b611a06565b905082815260208101848484011115611a8c57611a8b6119a4565b5b611a97848285611a50565b509392505050565b5f82601f830112611ab357611ab26119a0565b5b8135611ac3848260208601611a5e565b91505092915050565b5f8060408385031215611ae257611ae16117c3565b5b5f83013567ffffffffffffffff811115611aff57611afe6117c7565b5b611b0b85828601611a9f565b9250506020611b1c85828601611844565b9150509250929050565b5f60208284031215611b3b57611b3a6117c3565b5b5f611b4884828501611811565b91505092915050565b611b5a816117ea565b82525050565b5f602082019050611b735f830184611b51565b92915050565b611b82816118f1565b8114611b8c575f80fd5b50565b5f81359050611b9d81611b79565b92915050565b5f60208284031215611bb857611bb76117c3565b5b5f611bc584828501611b8f565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f611c118261172a565b611c1b8185611bf7565b9350611c2b818560208601611744565b611c3481611752565b840191505092915050565b611c48816118f1565b82525050565b611c5781611825565b82525050565b5f606083015f8301518482035f860152611c778282611c07565b9150506020830151611c8c6020860182611c3f565b506040830151611c9f6040860182611c4e565b508091505092915050565b5f611cb58383611c5d565b905092915050565b5f602082019050919050565b5f611cd382611bce565b611cdd8185611bd8565b935083602082028501611cef85611be8565b805f5b85811015611d2a5784840389528151611d0b8582611caa565b9450611d1683611cbd565b925060208a01995050600181019050611cf2565b50829750879550505050505092915050565b5f6020820190508181035f830152611d548184611cc9565b905092915050565b5f8060408385031215611d7257611d716117c3565b5b5f611d7f85828601611811565b9250506020611d9085828601611811565b9150509250929050565b611da381611896565b8114611dad575f80fd5b50565b5f81359050611dbe81611d9a565b92915050565b5f8060408385031215611dda57611dd96117c3565b5b5f611de785828601611db0565b9250506020611df885828601611844565b9150509250929050565b5f6060820190508181035f830152611e1a8186611762565b9050611e2960208301856118fd565b611e3660408301846118c9565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611e8257607f821691505b602082108103611e9557611e94611e3e565b5b50919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611ecf601483611734565b9150611eda82611e9b565b602082019050919050565b5f6020820190508181035f830152611efc81611ec3565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611f5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f24565b611f698683611f24565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611fa4611f9f611f9a84611825565b611f81565b611825565b9050919050565b5f819050919050565b611fbd83611f8a565b611fd1611fc982611fab565b848454611f30565b825550505050565b5f90565b611fe5611fd9565b611ff0818484611fb4565b505050565b5b81811015612013576120085f82611fdd565b600181019050611ff6565b5050565b601f8211156120585761202981611f03565b61203284611f15565b81016020851015612041578190505b61205561204d85611f15565b830182611ff5565b50505b505050565b5f82821c905092915050565b5f6120785f198460080261205d565b1980831691505092915050565b5f6120908383612069565b9150826002028217905092915050565b6120a98261172a565b67ffffffffffffffff8111156120c2576120c16119a8565b5b6120cc8254611e6b565b6120d7828285612017565b5f60209050601f831160018114612108575f84156120f6578287015190505b6121008582612085565b865550612167565b601f19841661211686611f03565b5f5b8281101561213d57848901518255600182019150602085019450602081019050612118565b8683101561215a5784890151612156601f891682612069565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121a6826118f1565b915060ff82036121b9576121b861216f565b5b600182019050919050565b7f496e73756666696369656e7420616d6f756e74000000000000000000000000005f82015250565b5f6121f8601383611734565b9150612203826121c4565b602082019050919050565b5f6020820190508181035f830152612225816121ec565b9050919050565b7f4974656d206e6f7420666f756e640000000000000000000000000000000000005f82015250565b5f612260600e83611734565b915061226b8261222c565b602082019050919050565b5f6020820190508181035f83015261228d81612254565b9050919050565b5f815490506122a281611e6b565b9050919050565b8181036122b757505061238c565b6122c082612294565b67ffffffffffffffff8111156122d9576122d86119a8565b5b6122e38254611e6b565b6122ee828285612017565b5f601f83116001811461231b575f8415612309578287015490505b6123138582612085565b865550612385565b601f19841661232987611f03565b965061233486611f03565b5f5b8281101561235b57848901548255600182019150600185019450602081019050612336565b868310156123785784890154612374601f891682612069565b8355505b6001600288020188555050505b5050505050505b565b5f815461239a81611e6b565b6123a48186611734565b9450600182165f81146123be57600181146123d457612406565b60ff198316865281151560200286019350612406565b6123dd85611f03565b5f5b838110156123fe578154818901526001820191506020810190506123df565b808801955050505b50505092915050565b5f6060820190506124225f8301866118fd565b8181036020830152612434818561238e565b905061244360408301846118c9565b949350505050565b5f819050919050565b61246561246082611825565b61244b565b82525050565b5f8160601b9050919050565b5f6124818261246b565b9050919050565b5f61249282612477565b9050919050565b6124aa6124a5826117ea565b612488565b82525050565b5f6124bb8285612454565b6020820191506124cb8284612499565b6014820191508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61251282611825565b915061251d83611825565b92508261252d5761252c6124db565b5b828206905092915050565b5f61254282611825565b915061254d83611825565b925082820261255b81611825565b915082820484148315176125725761257161216f565b5b5092915050565b7f776f6e00000000000000000000000000000000000000000000000000000000005f82015250565b5f6125ad600383611734565b91506125b882612579565b602082019050919050565b5f6060820190506125d65f8301856118c9565b6125e360208301846118a1565b81810360408301526125f4816125a1565b90509392505050565b7f6c6f7374000000000000000000000000000000000000000000000000000000005f82015250565b5f612631600483611734565b915061263c826125fd565b602082019050919050565b5f60608201905061265a5f8301856118c9565b61266760208301846118a1565b818103604083015261267881612625565b90509392505050565b7f596f7527766520616c726561647920636c61696d656420796f75722077656c635f8201527f6f6d6520626f6e75730000000000000000000000000000000000000000000000602082015250565b5f6126db602983611734565b91506126e682612681565b604082019050919050565b5f6020820190508181035f830152612708816126cf565b9050919050565b5f6060820190506127225f830186611b51565b61272f60208301856118c9565b61273c60408301846118c9565b949350505050565b5f61274e82611825565b915061275983611825565b92508282019050808211156127715761277061216f565b5b9291505056fea2646970667358221220fe4e2975c141cb4f61c7ffe8ddd28321463c1cc8f1fdc0f14ca8d9d9e900b16464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xAF3BCB7D GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xEA5E65E0 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xEA5E65E0 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xF5112F87 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xFBD1A97B EQ PUSH2 0x477 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xAF3BCB7D EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xCE6019B4 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x405 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x7B47EC1A EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x389 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x62D6BBDF EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1072CBEA EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x55B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1925 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x627 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1ACC JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x755 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x355 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x475 PUSH2 0xE50 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4B8 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x506 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x512 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x543 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH2 0x550 DUP2 DUP6 DUP6 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x565 CALLER PUSH2 0x710 JUMP JUMPDEST LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B0 DUP3 DUP3 PUSH2 0x897 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5BF CALLER PUSH2 0x710 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E9 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH2 0x5F6 DUP6 DUP3 DUP6 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x601 DUP6 DUP6 DUP6 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x619 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x623 DUP3 DUP3 PUSH2 0x1181 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x638 PUSH2 0x632 PUSH2 0xF5F JUMP JUMPDEST DUP3 PUSH2 0x1200 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x8 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6F3 SWAP1 PUSH2 0x219C JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75D PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x766 PUSH0 PUSH2 0x127F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x77A DUP3 PUSH2 0x774 PUSH2 0xF5F JUMP JUMPDEST DUP4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x784 DUP3 DUP3 PUSH2 0x1200 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH2 0x792 CALLER PUSH2 0x710 JUMP JUMPDEST LT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x220E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DC DUP2 PUSH2 0x627 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x816 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x842 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x88D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x864 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x88D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x870 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8A1 PUSH2 0xF5F JUMP JUMPDEST SWAP1 POP PUSH2 0x8AE DUP2 DUP6 DUP6 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x939 CALLER PUSH2 0x710 JUMP JUMPDEST LT ISZERO PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x971 SWAP1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x99D PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x627 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x6 PUSH0 DUP4 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xA29 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E DUP3 PUSH1 0x6 PUSH0 DUP6 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 DUP7 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xADE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xC2C JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0xB77 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBA3 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBEE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBEE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA TIMESTAMP CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCCF SWAP3 SWAP2 SWAP1 PUSH2 0x24B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 LT ISZERO ISZERO DUP4 ISZERO ISZERO SUB PUSH2 0xD6D JUMPI PUSH2 0xD17 CALLER PUSH1 0x2 DUP5 PUSH2 0xD12 SWAP2 SWAP1 PUSH2 0x2538 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD60 SWAP3 SWAP2 SWAP1 PUSH2 0x25C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0xD76 DUP3 PUSH2 0x627 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587 DUP3 PUSH0 PUSH1 0x40 MLOAD PUSH2 0xDBE SWAP3 SWAP2 SWAP1 PUSH2 0x2647 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDD4 PUSH2 0x10FA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE44 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0x127F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xE5A CALLER PUSH2 0x710 JUMP JUMPDEST EQ PUSH2 0xE9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE91 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA5 CALLER PUSH1 0x32 PUSH2 0x1181 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xEC6 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEF2 SWAP1 PUSH2 0x1E6B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF73 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1342 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF83 DUP5 DUP5 PUSH2 0xC37 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1004 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFF5 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1003 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1342 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10F5 DUP4 DUP4 DUP4 PUSH2 0x1511 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1102 PUSH2 0xF5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1120 PUSH2 0x7DF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x117F JUMPI PUSH2 0x1143 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11F1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FC PUSH0 DUP4 DUP4 PUSH2 0x1511 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1270 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x127B DUP3 PUSH0 DUP4 PUSH2 0x1511 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1422 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1419 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x150B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1502 SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1561 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x2744 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x162F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x15EA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x270F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1676 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16C0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x171D SWAP2 SWAP1 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x176C DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1776 DUP2 DUP6 PUSH2 0x1734 JUMP JUMPDEST SWAP4 POP PUSH2 0x1786 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x178F DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B2 DUP2 DUP5 PUSH2 0x1762 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F4 DUP3 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1804 DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP2 EQ PUSH2 0x180E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x181F DUP2 PUSH2 0x17FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1837 DUP2 PUSH2 0x1825 JUMP JUMPDEST DUP2 EQ PUSH2 0x1841 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1852 DUP2 PUSH2 0x182E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187B DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x188C DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AA DUP2 PUSH2 0x1896 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D2 DUP2 PUSH2 0x1825 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18EB PUSH0 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1906 DUP2 PUSH2 0x18F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x191F PUSH0 DUP4 ADD DUP5 PUSH2 0x18FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x193C JUMPI PUSH2 0x193B PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1949 DUP7 DUP3 DUP8 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x195A DUP7 DUP3 DUP8 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x196B DUP7 DUP3 DUP8 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198A JUMPI PUSH2 0x1989 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1997 DUP5 DUP3 DUP6 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x19DE DUP3 PUSH2 0x1752 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0F PUSH2 0x17BA JUMP JUMPDEST SWAP1 POP PUSH2 0x1A1B DUP3 DUP3 PUSH2 0x19D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A39 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH2 0x1A43 DUP3 PUSH2 0x1752 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A70 PUSH2 0x1A6B DUP5 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x1A06 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x19A4 JUMP JUMPDEST JUMPDEST PUSH2 0x1A97 DUP5 DUP3 DUP6 PUSH2 0x1A50 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x19A0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AC3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE2 JUMPI PUSH2 0x1AE1 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFF JUMPI PUSH2 0x1AFE PUSH2 0x17C7 JUMP JUMPDEST JUMPDEST PUSH2 0x1B0B DUP6 DUP3 DUP7 ADD PUSH2 0x1A9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1C DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B48 DUP5 DUP3 DUP6 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x18F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB7 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C11 DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1C1B DUP2 DUP6 PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C2B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x1C34 DUP2 PUSH2 0x1752 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C48 DUP2 PUSH2 0x18F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C57 DUP2 PUSH2 0x1825 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1C77 DUP3 DUP3 PUSH2 0x1C07 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1C8C PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1C3F JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1C9F PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1C4E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB5 DUP4 DUP4 PUSH2 0x1C5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD3 DUP3 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x1CDD DUP2 DUP6 PUSH2 0x1BD8 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1CEF DUP6 PUSH2 0x1BE8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1D2A JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1D0B DUP6 DUP3 PUSH2 0x1CAA JUMP JUMPDEST SWAP5 POP PUSH2 0x1D16 DUP4 PUSH2 0x1CBD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CF2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D54 DUP2 DUP5 PUSH2 0x1CC9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D72 JUMPI PUSH2 0x1D71 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7F DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D90 DUP6 DUP3 DUP7 ADD PUSH2 0x1811 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x1896 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DBE DUP2 PUSH2 0x1D9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x17C3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1DB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DF8 DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1A DUP2 DUP7 PUSH2 0x1762 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E29 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18FD JUMP JUMPDEST PUSH2 0x1E36 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E82 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E95 JUMPI PUSH2 0x1E94 PUSH2 0x1E3E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ECF PUSH1 0x14 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDA DUP3 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F5F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x1F69 DUP7 DUP4 PUSH2 0x1F24 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA4 PUSH2 0x1F9F PUSH2 0x1F9A DUP5 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x1825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBD DUP4 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x1FD1 PUSH2 0x1FC9 DUP3 PUSH2 0x1FAB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F30 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1FE5 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x1FF0 DUP2 DUP5 DUP5 PUSH2 0x1FB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2013 JUMPI PUSH2 0x2008 PUSH0 DUP3 PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FF6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2058 JUMPI PUSH2 0x2029 DUP2 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x2032 DUP5 PUSH2 0x1F15 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2041 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2055 PUSH2 0x204D DUP6 PUSH2 0x1F15 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1FF5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2078 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x205D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2090 DUP4 DUP4 PUSH2 0x2069 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20A9 DUP3 PUSH2 0x172A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH2 0x20CC DUP3 SLOAD PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x20D7 DUP3 DUP3 DUP6 PUSH2 0x2017 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2108 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x20F6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2100 DUP6 DUP3 PUSH2 0x2085 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2116 DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x213D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2118 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x215A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2156 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2069 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21A6 DUP3 PUSH2 0x18F1 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x21B9 JUMPI PUSH2 0x21B8 PUSH2 0x216F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21F8 PUSH1 0x13 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x2203 DUP3 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2225 DUP2 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4974656D206E6F7420666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2260 PUSH1 0xE DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x226B DUP3 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228D DUP2 PUSH2 0x2254 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x22A2 DUP2 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x22B7 JUMPI POP POP PUSH2 0x238C JUMP JUMPDEST PUSH2 0x22C0 DUP3 PUSH2 0x2294 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH2 0x22E3 DUP3 SLOAD PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x22EE DUP3 DUP3 DUP6 PUSH2 0x2017 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x231B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2309 JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x2313 DUP6 DUP3 PUSH2 0x2085 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2329 DUP8 PUSH2 0x1F03 JUMP JUMPDEST SWAP7 POP PUSH2 0x2334 DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x235B JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2336 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2378 JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2374 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2069 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x239A DUP2 PUSH2 0x1E6B JUMP JUMPDEST PUSH2 0x23A4 DUP2 DUP7 PUSH2 0x1734 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x23BE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x23D4 JUMPI PUSH2 0x2406 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x23DD DUP6 PUSH2 0x1F03 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23FE JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23DF JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2422 PUSH0 DUP4 ADD DUP7 PUSH2 0x18FD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2434 DUP2 DUP6 PUSH2 0x238E JUMP JUMPDEST SWAP1 POP PUSH2 0x2443 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2465 PUSH2 0x2460 DUP3 PUSH2 0x1825 JUMP JUMPDEST PUSH2 0x244B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2481 DUP3 PUSH2 0x246B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2492 DUP3 PUSH2 0x2477 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AA PUSH2 0x24A5 DUP3 PUSH2 0x17EA JUMP JUMPDEST PUSH2 0x2488 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24BB DUP3 DUP6 PUSH2 0x2454 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x24CB DUP3 DUP5 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2512 DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP PUSH2 0x251D DUP4 PUSH2 0x1825 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x252D JUMPI PUSH2 0x252C PUSH2 0x24DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2542 DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP PUSH2 0x254D DUP4 PUSH2 0x1825 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x255B DUP2 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2572 JUMPI PUSH2 0x2571 PUSH2 0x216F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x776F6E0000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25AD PUSH1 0x3 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x25B8 DUP3 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25D6 PUSH0 DUP4 ADD DUP6 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x25E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18A1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x25F4 DUP2 PUSH2 0x25A1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6C6F737400000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2631 PUSH1 0x4 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x263C DUP3 PUSH2 0x25FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x265A PUSH0 DUP4 ADD DUP6 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x2667 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18A1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2678 DUP2 PUSH2 0x2625 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x596F7527766520616C726561647920636C61696D656420796F75722077656C63 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6D6520626F6E75730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26DB PUSH1 0x29 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x26E6 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2708 DUP2 PUSH2 0x26CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2722 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x272F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x273C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18C9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x274E DUP3 PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP PUSH2 0x2759 DUP4 PUSH2 0x1825 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2771 JUMPI PUSH2 0x2770 PUSH2 0x216F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4E 0x29 PUSH22 0xC141CB4F61C7FFE8DDD28321463C1CC8F1FDC0F14CA8 0xD9 0xD9 0xE9 STOP 0xB1 PUSH5 0x64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "785:3037:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1937:188:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3538:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1027:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1688:83:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1804:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2330:154:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3670:147:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:395:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3382:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2493:474:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2160:162:7;;;:::i;:::-;;942:34;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1937:188:7:-;2045:7;2022:21;2032:10;2022:9;:21::i;:::-;:30;;2014:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2088:29;2097:10;2109:7;2088:8;:29::i;:::-;;1937:188;;:::o;3538:99::-;3582:7;3608:21;3618:10;3608:9;:21::i;:::-;3601:28;;3538:99;:::o;1027:20::-;;;;;;;;;;;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1688:83:7:-;1738:5;1688:83;:::o;1804:95::-;1531:13:0;:11;:13::i;:::-;1874:17:7::1;1880:2;1884:6;1874:5;:17::i;:::-;1804:95:::0;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2330:154:7:-;1531:13:0;:11;:13::i;:::-;2429:27:7::1;;;;;;;;2434:5;2429:27;;;;2441:7;;;;;;;;;;;2429:27;;;;;;2449:6;2429:27;;::::0;2412:5:::1;:14;2418:7;;;;;;;;;;;2412:14;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2467:7;;:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2330:154:::0;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3670:147:7:-;3754:7;3731:21;3741:10;3731:9;:21::i;:::-;:30;;3723:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3796:13;3801:7;3796:4;:13::i;:::-;3670:147;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;2979:395:7:-;3068:1;3044:5;:14;3050:7;3044:14;;;;;;;;;;;;;;;:20;;;:25;3036:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3132:5;:14;3138:7;3132:14;;;;;;;;;;;;;;;:20;;;3107:21;3117:10;3107:9;:21::i;:::-;:45;;3099:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3190:26;3195:5;:14;3201:7;3195:14;;;;;;;;;;;;;;;:20;;;3190:4;:26::i;:::-;3227:11;:23;3239:10;3227:23;;;;;;;;;;;;;;;3256:5;:14;3262:7;3256:14;;;;;;;;;;;;;;;3227:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3303:10;3289:77;;;3315:7;3324:5;:14;3330:7;3324:14;;;;;;;;;;;;;;;:19;;3345:5;:14;3351:7;3345:14;;;;;;;;;;;;;;;:20;;;3289:77;;;;;;;;:::i;:::-;;;;;;;;2979:395;:::o;3382:115::-;3440:13;3472:11;:17;3484:4;3472:17;;;;;;;;;;;;;;;3465:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3382:115;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2493:474:7:-;2573:17;2658:2;2625:15;2642:10;2608:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2598:56;;;;;;2593:62;;:67;;;;:::i;:::-;2573:87;;2705:1;2692:12;:14;2677:30;;:11;:30;;;2673:287;;2724:31;2730:10;2753:1;2742:10;:12;;;;:::i;:::-;2724:5;:31::i;:::-;2787:10;2775:50;;;2799:12;2813:4;2775:50;;;;;;;:::i;:::-;;;;;;;;2673:287;;;2860:16;2865:10;2860:4;:16::i;:::-;2908:10;2896:52;;;2920:12;2934:5;2896:52;;;;;;;:::i;:::-;;;;;;;;2673:287;2562:405;2493:474;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2160:162:7:-;2235:1;2210:21;2220:10;2210:9;:21::i;:::-;:26;2202:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2293:21;2299:10;2311:2;2293:5;:21::i;:::-;2160:162::o;942:34::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:86::-;3726:7;3766:4;3759:5;3755:16;3744:27;;3691:86;;;:::o;3783:112::-;3866:22;3882:5;3866:22;:::i;:::-;3861:3;3854:35;3783:112;;:::o;3901:214::-;3990:4;4028:2;4017:9;4013:18;4005:26;;4041:67;4105:1;4094:9;4090:17;4081:6;4041:67;:::i;:::-;3901:214;;;;:::o;4121:619::-;4198:6;4206;4214;4263:2;4251:9;4242:7;4238:23;4234:32;4231:119;;;4269:79;;:::i;:::-;4231:119;4389:1;4414:53;4459:7;4450:6;4439:9;4435:22;4414:53;:::i;:::-;4404:63;;4360:117;4516:2;4542:53;4587:7;4578:6;4567:9;4563:22;4542:53;:::i;:::-;4532:63;;4487:118;4644:2;4670:53;4715:7;4706:6;4695:9;4691:22;4670:53;:::i;:::-;4660:63;;4615:118;4121:619;;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:117::-;5190:1;5187;5180:12;5204:117;5313:1;5310;5303:12;5327:180;5375:77;5372:1;5365:88;5472:4;5469:1;5462:15;5496:4;5493:1;5486:15;5513:281;5596:27;5618:4;5596:27;:::i;:::-;5588:6;5584:40;5726:6;5714:10;5711:22;5690:18;5678:10;5675:34;5672:62;5669:88;;;5737:18;;:::i;:::-;5669:88;5777:10;5773:2;5766:22;5556:238;5513:281;;:::o;5800:129::-;5834:6;5861:20;;:::i;:::-;5851:30;;5890:33;5918:4;5910:6;5890:33;:::i;:::-;5800:129;;;:::o;5935:308::-;5997:4;6087:18;6079:6;6076:30;6073:56;;;6109:18;;:::i;:::-;6073:56;6147:29;6169:6;6147:29;:::i;:::-;6139:37;;6231:4;6225;6221:15;6213:23;;5935:308;;;:::o;6249:148::-;6347:6;6342:3;6337;6324:30;6388:1;6379:6;6374:3;6370:16;6363:27;6249:148;;;:::o;6403:425::-;6481:5;6506:66;6522:49;6564:6;6522:49;:::i;:::-;6506:66;:::i;:::-;6497:75;;6595:6;6588:5;6581:21;6633:4;6626:5;6622:16;6671:3;6662:6;6657:3;6653:16;6650:25;6647:112;;;6678:79;;:::i;:::-;6647:112;6768:54;6815:6;6810:3;6805;6768:54;:::i;:::-;6487:341;6403:425;;;;;:::o;6848:340::-;6904:5;6953:3;6946:4;6938:6;6934:17;6930:27;6920:122;;6961:79;;:::i;:::-;6920:122;7078:6;7065:20;7103:79;7178:3;7170:6;7163:4;7155:6;7151:17;7103:79;:::i;:::-;7094:88;;6910:278;6848:340;;;;:::o;7194:654::-;7272:6;7280;7329:2;7317:9;7308:7;7304:23;7300:32;7297:119;;;7335:79;;:::i;:::-;7297:119;7483:1;7472:9;7468:17;7455:31;7513:18;7505:6;7502:30;7499:117;;;7535:79;;:::i;:::-;7499:117;7640:63;7695:7;7686:6;7675:9;7671:22;7640:63;:::i;:::-;7630:73;;7426:287;7752:2;7778:53;7823:7;7814:6;7803:9;7799:22;7778:53;:::i;:::-;7768:63;;7723:118;7194:654;;;;;:::o;7854:329::-;7913:6;7962:2;7950:9;7941:7;7937:23;7933:32;7930:119;;;7968:79;;:::i;:::-;7930:119;8088:1;8113:53;8158:7;8149:6;8138:9;8134:22;8113:53;:::i;:::-;8103:63;;8059:117;7854:329;;;;:::o;8189:118::-;8276:24;8294:5;8276:24;:::i;:::-;8271:3;8264:37;8189:118;;:::o;8313:222::-;8406:4;8444:2;8433:9;8429:18;8421:26;;8457:71;8525:1;8514:9;8510:17;8501:6;8457:71;:::i;:::-;8313:222;;;;:::o;8541:118::-;8612:22;8628:5;8612:22;:::i;:::-;8605:5;8602:33;8592:61;;8649:1;8646;8639:12;8592:61;8541:118;:::o;8665:135::-;8709:5;8747:6;8734:20;8725:29;;8763:31;8788:5;8763:31;:::i;:::-;8665:135;;;;:::o;8806:325::-;8863:6;8912:2;8900:9;8891:7;8887:23;8883:32;8880:119;;;8918:79;;:::i;:::-;8880:119;9038:1;9063:51;9106:7;9097:6;9086:9;9082:22;9063:51;:::i;:::-;9053:61;;9009:115;8806:325;;;;:::o;9137:135::-;9225:6;9259:5;9253:12;9243:22;;9137:135;;;:::o;9278:205::-;9398:11;9432:6;9427:3;9420:19;9472:4;9467:3;9463:14;9448:29;;9278:205;;;;:::o;9489:153::-;9577:4;9600:3;9592:11;;9630:4;9625:3;9621:14;9613:22;;9489:153;;;:::o;9648:159::-;9722:11;9756:6;9751:3;9744:19;9796:4;9791:3;9787:14;9772:29;;9648:159;;;;:::o;9813:357::-;9891:3;9919:39;9952:5;9919:39;:::i;:::-;9974:61;10028:6;10023:3;9974:61;:::i;:::-;9967:68;;10044:65;10102:6;10097:3;10090:4;10083:5;10079:16;10044:65;:::i;:::-;10134:29;10156:6;10134:29;:::i;:::-;10129:3;10125:39;10118:46;;9895:275;9813:357;;;;:::o;10176:102::-;10249:22;10265:5;10249:22;:::i;:::-;10244:3;10237:35;10176:102;;:::o;10284:108::-;10361:24;10379:5;10361:24;:::i;:::-;10356:3;10349:37;10284:108;;:::o;10454:761::-;10555:3;10591:4;10586:3;10582:14;10678:4;10671:5;10667:16;10661:23;10731:3;10725:4;10721:14;10714:4;10709:3;10705:14;10698:38;10757:73;10825:4;10811:12;10757:73;:::i;:::-;10749:81;;10606:235;10925:4;10918:5;10914:16;10908:23;10944:59;10997:4;10992:3;10988:14;10974:12;10944:59;:::i;:::-;10851:162;11096:4;11089:5;11085:16;11079:23;11115:63;11172:4;11167:3;11163:14;11149:12;11115:63;:::i;:::-;11023:165;11205:4;11198:11;;10560:655;10454:761;;;;:::o;11221:240::-;11332:10;11367:88;11451:3;11443:6;11367:88;:::i;:::-;11353:102;;11221:240;;;;:::o;11467:134::-;11558:4;11590;11585:3;11581:14;11573:22;;11467:134;;;:::o;11667:1079::-;11828:3;11857:75;11926:5;11857:75;:::i;:::-;11948:107;12048:6;12043:3;11948:107;:::i;:::-;11941:114;;12081:3;12126:4;12118:6;12114:17;12109:3;12105:27;12156:77;12227:5;12156:77;:::i;:::-;12256:7;12287:1;12272:429;12297:6;12294:1;12291:13;12272:429;;;12368:9;12362:4;12358:20;12353:3;12346:33;12419:6;12413:13;12447:106;12548:4;12533:13;12447:106;:::i;:::-;12439:114;;12576:81;12650:6;12576:81;:::i;:::-;12566:91;;12686:4;12681:3;12677:14;12670:21;;12332:369;12319:1;12316;12312:9;12307:14;;12272:429;;;12276:14;12717:4;12710:11;;12737:3;12730:10;;11833:913;;;;;11667:1079;;;;:::o;12752:457::-;12937:4;12975:2;12964:9;12960:18;12952:26;;13024:9;13018:4;13014:20;13010:1;12999:9;12995:17;12988:47;13052:150;13197:4;13188:6;13052:150;:::i;:::-;13044:158;;12752:457;;;;:::o;13215:474::-;13283:6;13291;13340:2;13328:9;13319:7;13315:23;13311:32;13308:119;;;13346:79;;:::i;:::-;13308:119;13466:1;13491:53;13536:7;13527:6;13516:9;13512:22;13491:53;:::i;:::-;13481:63;;13437:117;13593:2;13619:53;13664:7;13655:6;13644:9;13640:22;13619:53;:::i;:::-;13609:63;;13564:118;13215:474;;;;;:::o;13695:116::-;13765:21;13780:5;13765:21;:::i;:::-;13758:5;13755:32;13745:60;;13801:1;13798;13791:12;13745:60;13695:116;:::o;13817:133::-;13860:5;13898:6;13885:20;13876:29;;13914:30;13938:5;13914:30;:::i;:::-;13817:133;;;;:::o;13956:468::-;14021:6;14029;14078:2;14066:9;14057:7;14053:23;14049:32;14046:119;;;14084:79;;:::i;:::-;14046:119;14204:1;14229:50;14271:7;14262:6;14251:9;14247:22;14229:50;:::i;:::-;14219:60;;14175:114;14328:2;14354:53;14399:7;14390:6;14379:9;14375:22;14354:53;:::i;:::-;14344:63;;14299:118;13956:468;;;;;:::o;14430:525::-;14595:4;14633:2;14622:9;14618:18;14610:26;;14682:9;14676:4;14672:20;14668:1;14657:9;14653:17;14646:47;14710:78;14783:4;14774:6;14710:78;:::i;:::-;14702:86;;14798:68;14862:2;14851:9;14847:18;14838:6;14798:68;:::i;:::-;14876:72;14944:2;14933:9;14929:18;14920:6;14876:72;:::i;:::-;14430:525;;;;;;:::o;14961:180::-;15009:77;15006:1;14999:88;15106:4;15103:1;15096:15;15130:4;15127:1;15120:15;15147:320;15191:6;15228:1;15222:4;15218:12;15208:22;;15275:1;15269:4;15265:12;15296:18;15286:81;;15352:4;15344:6;15340:17;15330:27;;15286:81;15414:2;15406:6;15403:14;15383:18;15380:38;15377:84;;15433:18;;:::i;:::-;15377:84;15198:269;15147:320;;;:::o;15473:170::-;15613:22;15609:1;15601:6;15597:14;15590:46;15473:170;:::o;15649:366::-;15791:3;15812:67;15876:2;15871:3;15812:67;:::i;:::-;15805:74;;15888:93;15977:3;15888:93;:::i;:::-;16006:2;16001:3;15997:12;15990:19;;15649:366;;;:::o;16021:419::-;16187:4;16225:2;16214:9;16210:18;16202:26;;16274:9;16268:4;16264:20;16260:1;16249:9;16245:17;16238:47;16302:131;16428:4;16302:131;:::i;:::-;16294:139;;16021:419;;;:::o;16446:141::-;16495:4;16518:3;16510:11;;16541:3;16538:1;16531:14;16575:4;16572:1;16562:18;16554:26;;16446:141;;;:::o;16593:93::-;16630:6;16677:2;16672;16665:5;16661:14;16657:23;16647:33;;16593:93;;;:::o;16692:107::-;16736:8;16786:5;16780:4;16776:16;16755:37;;16692:107;;;;:::o;16805:393::-;16874:6;16924:1;16912:10;16908:18;16947:97;16977:66;16966:9;16947:97;:::i;:::-;17065:39;17095:8;17084:9;17065:39;:::i;:::-;17053:51;;17137:4;17133:9;17126:5;17122:21;17113:30;;17186:4;17176:8;17172:19;17165:5;17162:30;17152:40;;16881:317;;16805:393;;;;;:::o;17204:60::-;17232:3;17253:5;17246:12;;17204:60;;;:::o;17270:142::-;17320:9;17353:53;17371:34;17380:24;17398:5;17380:24;:::i;:::-;17371:34;:::i;:::-;17353:53;:::i;:::-;17340:66;;17270:142;;;:::o;17418:75::-;17461:3;17482:5;17475:12;;17418:75;;;:::o;17499:269::-;17609:39;17640:7;17609:39;:::i;:::-;17670:91;17719:41;17743:16;17719:41;:::i;:::-;17711:6;17704:4;17698:11;17670:91;:::i;:::-;17664:4;17657:105;17575:193;17499:269;;;:::o;17774:73::-;17819:3;17774:73;:::o;17853:189::-;17930:32;;:::i;:::-;17971:65;18029:6;18021;18015:4;17971:65;:::i;:::-;17906:136;17853:189;;:::o;18048:186::-;18108:120;18125:3;18118:5;18115:14;18108:120;;;18179:39;18216:1;18209:5;18179:39;:::i;:::-;18152:1;18145:5;18141:13;18132:22;;18108:120;;;18048:186;;:::o;18240:543::-;18341:2;18336:3;18333:11;18330:446;;;18375:38;18407:5;18375:38;:::i;:::-;18459:29;18477:10;18459:29;:::i;:::-;18449:8;18445:44;18642:2;18630:10;18627:18;18624:49;;;18663:8;18648:23;;18624:49;18686:80;18742:22;18760:3;18742:22;:::i;:::-;18732:8;18728:37;18715:11;18686:80;:::i;:::-;18345:431;;18330:446;18240:543;;;:::o;18789:117::-;18843:8;18893:5;18887:4;18883:16;18862:37;;18789:117;;;;:::o;18912:169::-;18956:6;18989:51;19037:1;19033:6;19025:5;19022:1;19018:13;18989:51;:::i;:::-;18985:56;19070:4;19064;19060:15;19050:25;;18963:118;18912:169;;;;:::o;19086:295::-;19162:4;19308:29;19333:3;19327:4;19308:29;:::i;:::-;19300:37;;19370:3;19367:1;19363:11;19357:4;19354:21;19346:29;;19086:295;;;;:::o;19386:1395::-;19503:37;19536:3;19503:37;:::i;:::-;19605:18;19597:6;19594:30;19591:56;;;19627:18;;:::i;:::-;19591:56;19671:38;19703:4;19697:11;19671:38;:::i;:::-;19756:67;19816:6;19808;19802:4;19756:67;:::i;:::-;19850:1;19874:4;19861:17;;19906:2;19898:6;19895:14;19923:1;19918:618;;;;20580:1;20597:6;20594:77;;;20646:9;20641:3;20637:19;20631:26;20622:35;;20594:77;20697:67;20757:6;20750:5;20697:67;:::i;:::-;20691:4;20684:81;20553:222;19888:887;;19918:618;19970:4;19966:9;19958:6;19954:22;20004:37;20036:4;20004:37;:::i;:::-;20063:1;20077:208;20091:7;20088:1;20085:14;20077:208;;;20170:9;20165:3;20161:19;20155:26;20147:6;20140:42;20221:1;20213:6;20209:14;20199:24;;20268:2;20257:9;20253:18;20240:31;;20114:4;20111:1;20107:12;20102:17;;20077:208;;;20313:6;20304:7;20301:19;20298:179;;;20371:9;20366:3;20362:19;20356:26;20414:48;20456:4;20448:6;20444:17;20433:9;20414:48;:::i;:::-;20406:6;20399:64;20321:156;20298:179;20523:1;20519;20511:6;20507:14;20503:22;20497:4;20490:36;19925:611;;;19888:887;;19478:1303;;;19386:1395;;:::o;20787:180::-;20835:77;20832:1;20825:88;20932:4;20929:1;20922:15;20956:4;20953:1;20946:15;20973:167;21010:3;21033:22;21049:5;21033:22;:::i;:::-;21024:31;;21077:4;21070:5;21067:15;21064:41;;21085:18;;:::i;:::-;21064:41;21132:1;21125:5;21121:13;21114:20;;20973:167;;;:::o;21146:169::-;21286:21;21282:1;21274:6;21270:14;21263:45;21146:169;:::o;21321:366::-;21463:3;21484:67;21548:2;21543:3;21484:67;:::i;:::-;21477:74;;21560:93;21649:3;21560:93;:::i;:::-;21678:2;21673:3;21669:12;21662:19;;21321:366;;;:::o;21693:419::-;21859:4;21897:2;21886:9;21882:18;21874:26;;21946:9;21940:4;21936:20;21932:1;21921:9;21917:17;21910:47;21974:131;22100:4;21974:131;:::i;:::-;21966:139;;21693:419;;;:::o;22118:164::-;22258:16;22254:1;22246:6;22242:14;22235:40;22118:164;:::o;22288:366::-;22430:3;22451:67;22515:2;22510:3;22451:67;:::i;:::-;22444:74;;22527:93;22616:3;22527:93;:::i;:::-;22645:2;22640:3;22636:12;22629:19;;22288:366;;;:::o;22660:419::-;22826:4;22864:2;22853:9;22849:18;22841:26;;22913:9;22907:4;22903:20;22899:1;22888:9;22884:17;22877:47;22941:131;23067:4;22941:131;:::i;:::-;22933:139;;22660:419;;;:::o;23085:149::-;23134:6;23168:5;23162:12;23152:22;;23194:33;23220:6;23194:33;:::i;:::-;23184:43;;23085:149;;;:::o;23240:1451::-;23351:3;23345:4;23342:13;23339:26;;23358:5;;;;23339:26;23389:34;23419:3;23389:34;:::i;:::-;23488:18;23480:6;23477:30;23474:56;;;23510:18;;:::i;:::-;23474:56;23554:38;23586:4;23580:11;23554:38;:::i;:::-;23639:67;23699:6;23691;23685:4;23639:67;:::i;:::-;23733:1;23762:2;23754:6;23751:14;23779:1;23774:672;;;;24490:1;24507:6;24504:77;;;24556:9;24551:3;24547:19;24541:26;24532:35;;24504:77;24607:67;24667:6;24660:5;24607:67;:::i;:::-;24601:4;24594:81;24463:222;23744:941;;23774:672;23826:4;23822:9;23814:6;23810:22;23852:36;23884:3;23852:36;:::i;:::-;23845:43;;23915:37;23947:4;23915:37;:::i;:::-;23974:1;23988:207;24002:7;23999:1;23996:14;23988:207;;;24081:9;24076:3;24072:19;24066:26;24058:6;24051:42;24132:1;24124:6;24120:14;24110:24;;24179:1;24168:9;24164:17;24151:30;;24025:4;24022:1;24018:12;24013:17;;23988:207;;;24223:6;24214:7;24211:19;24208:179;;;24281:9;24276:3;24272:19;24266:26;24324:48;24366:4;24358:6;24354:17;24343:9;24324:48;:::i;:::-;24316:6;24309:64;24231:156;24208:179;24433:1;24429;24421:6;24417:14;24413:22;24407:4;24400:36;23781:665;;;23744:941;;23329:1362;;;23240:1451;;;:::o;24721:831::-;24806:3;24843:5;24837:12;24872:36;24898:9;24872:36;:::i;:::-;24924:71;24988:6;24983:3;24924:71;:::i;:::-;24917:78;;25026:1;25015:9;25011:17;25042:1;25037:164;;;;25215:1;25210:336;;;;25004:542;;25037:164;25121:4;25117:9;25106;25102:25;25097:3;25090:38;25181:6;25174:14;25167:22;25161:4;25157:33;25152:3;25148:43;25141:50;;25037:164;;25210:336;25277:38;25309:5;25277:38;:::i;:::-;25337:1;25351:154;25365:6;25362:1;25359:13;25351:154;;;25439:7;25433:14;25429:1;25424:3;25420:11;25413:35;25489:1;25480:7;25476:15;25465:26;;25387:4;25384:1;25380:12;25375:17;;25351:154;;;25534:1;25529:3;25525:11;25518:18;;25217:329;;25004:542;;24810:742;;24721:831;;;;:::o;25558:519::-;25720:4;25758:2;25747:9;25743:18;25735:26;;25771:67;25835:1;25824:9;25820:17;25811:6;25771:67;:::i;:::-;25885:9;25879:4;25875:20;25870:2;25859:9;25855:18;25848:48;25913:75;25983:4;25974:6;25913:75;:::i;:::-;25905:83;;25998:72;26066:2;26055:9;26051:18;26042:6;25998:72;:::i;:::-;25558:519;;;;;;:::o;26083:79::-;26122:7;26151:5;26140:16;;26083:79;;;:::o;26168:157::-;26273:45;26293:24;26311:5;26293:24;:::i;:::-;26273:45;:::i;:::-;26268:3;26261:58;26168:157;;:::o;26331:94::-;26364:8;26412:5;26408:2;26404:14;26383:35;;26331:94;;;:::o;26431:::-;26470:7;26499:20;26513:5;26499:20;:::i;:::-;26488:31;;26431:94;;;:::o;26531:100::-;26570:7;26599:26;26619:5;26599:26;:::i;:::-;26588:37;;26531:100;;;:::o;26637:157::-;26742:45;26762:24;26780:5;26762:24;:::i;:::-;26742:45;:::i;:::-;26737:3;26730:58;26637:157;;:::o;26800:397::-;26940:3;26955:75;27026:3;27017:6;26955:75;:::i;:::-;27055:2;27050:3;27046:12;27039:19;;27068:75;27139:3;27130:6;27068:75;:::i;:::-;27168:2;27163:3;27159:12;27152:19;;27188:3;27181:10;;26800:397;;;;;:::o;27203:180::-;27251:77;27248:1;27241:88;27348:4;27345:1;27338:15;27372:4;27369:1;27362:15;27389:176;27421:1;27438:20;27456:1;27438:20;:::i;:::-;27433:25;;27472:20;27490:1;27472:20;:::i;:::-;27467:25;;27511:1;27501:35;;27516:18;;:::i;:::-;27501:35;27557:1;27554;27550:9;27545:14;;27389:176;;;;:::o;27571:410::-;27611:7;27634:20;27652:1;27634:20;:::i;:::-;27629:25;;27668:20;27686:1;27668:20;:::i;:::-;27663:25;;27723:1;27720;27716:9;27745:30;27763:11;27745:30;:::i;:::-;27734:41;;27924:1;27915:7;27911:15;27908:1;27905:22;27885:1;27878:9;27858:83;27835:139;;27954:18;;:::i;:::-;27835:139;27619:362;27571:410;;;;:::o;27987:153::-;28127:5;28123:1;28115:6;28111:14;28104:29;27987:153;:::o;28146:365::-;28288:3;28309:66;28373:1;28368:3;28309:66;:::i;:::-;28302:73;;28384:93;28473:3;28384:93;:::i;:::-;28502:2;28497:3;28493:12;28486:19;;28146:365;;;:::o;28517:627::-;28733:4;28771:2;28760:9;28756:18;28748:26;;28784:71;28852:1;28841:9;28837:17;28828:6;28784:71;:::i;:::-;28865:66;28927:2;28916:9;28912:18;28903:6;28865:66;:::i;:::-;28978:9;28972:4;28968:20;28963:2;28952:9;28948:18;28941:48;29006:131;29132:4;29006:131;:::i;:::-;28998:139;;28517:627;;;;;:::o;29150:154::-;29290:6;29286:1;29278:6;29274:14;29267:30;29150:154;:::o;29310:365::-;29452:3;29473:66;29537:1;29532:3;29473:66;:::i;:::-;29466:73;;29548:93;29637:3;29548:93;:::i;:::-;29666:2;29661:3;29657:12;29650:19;;29310:365;;;:::o;29681:627::-;29897:4;29935:2;29924:9;29920:18;29912:26;;29948:71;30016:1;30005:9;30001:17;29992:6;29948:71;:::i;:::-;30029:66;30091:2;30080:9;30076:18;30067:6;30029:66;:::i;:::-;30142:9;30136:4;30132:20;30127:2;30116:9;30112:18;30105:48;30170:131;30296:4;30170:131;:::i;:::-;30162:139;;29681:627;;;;;:::o;30314:228::-;30454:34;30450:1;30442:6;30438:14;30431:58;30523:11;30518:2;30510:6;30506:15;30499:36;30314:228;:::o;30548:366::-;30690:3;30711:67;30775:2;30770:3;30711:67;:::i;:::-;30704:74;;30787:93;30876:3;30787:93;:::i;:::-;30905:2;30900:3;30896:12;30889:19;;30548:366;;;:::o;30920:419::-;31086:4;31124:2;31113:9;31109:18;31101:26;;31173:9;31167:4;31163:20;31159:1;31148:9;31144:17;31137:47;31201:131;31327:4;31201:131;:::i;:::-;31193:139;;30920:419;;;:::o;31345:442::-;31494:4;31532:2;31521:9;31517:18;31509:26;;31545:71;31613:1;31602:9;31598:17;31589:6;31545:71;:::i;:::-;31626:72;31694:2;31683:9;31679:18;31670:6;31626:72;:::i;:::-;31708;31776:2;31765:9;31761:18;31752:6;31708:72;:::i;:::-;31345:442;;;;;;:::o;31793:191::-;31833:3;31852:20;31870:1;31852:20;:::i;:::-;31847:25;;31886:20;31904:1;31886:20;:::i;:::-;31881:25;;31929:1;31926;31922:9;31915:16;;31950:3;31947:1;31944:10;31941:36;;;31957:18;;:::i;:::-;31941:36;31793:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2031400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addItem(string,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"burnToken(uint256)": "infinite",
								"decimals()": "375",
								"getBalance()": "2651",
								"getUserItems(address)": "infinite",
								"isLessThanFive(bool,uint256)": "infinite",
								"items(uint8)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"purchaseItem(uint8)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"tokenId()": "2578",
								"totalSupply()": "2566",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferToken(address,uint256)": "infinite",
								"welcomeBonus()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 785,
									"end": 3822,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1243,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "446567656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "44474E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1351,
									"end": 1382,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1356,
									"end": 1368,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1370,
									"end": 1381,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1351,
									"end": 1355,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1351,
									"end": 1355,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1382,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1351,
									"end": 1382,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1382,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1382,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1351,
									"end": 1382,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4E6F76696365204E6176696761746F7200000000000000000000000000000000"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1439,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1441,
									"end": 1444,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1445,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1408,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1409,
									"end": 1410,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 1411,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1403,
									"end": 1445,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1445,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4D7974686963204D6176657269636B0000000000000000000000000000000000"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1489,
									"end": 1490,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1492,
									"end": 1495,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2BC"
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1461,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1464,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1456,
									"end": 1496,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "43656C65737469616C2043727573686572000000000000000000000000000000"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1542,
									"end": 1543,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1549,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4B0"
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1512,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1513,
									"end": 1514,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1515,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1507,
									"end": 1550,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1550,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "41737472616C2041636500000000000000000000000000000000000000000000"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1589,
									"end": 1590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1596,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "898"
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1570,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1566,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1567,
									"end": 1568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1569,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1561,
									"end": 1597,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1597,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "446976696E6520446F6D696E61746F7200000000000000000000000000000000"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1643,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1645,
									"end": 1649,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "960"
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1613,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1614,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1616,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1608,
									"end": 1650,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1650,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1669,
									"end": 1670,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1661,
									"end": 1668,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1661,
									"end": 1668,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1661,
									"end": 1670,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1243,
									"end": 1680,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1804,
									"end": 1899,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1804,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1874,
									"end": 1891,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1880,
									"end": 1882,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1890,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1879,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1874,
									"end": 1879,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1874,
									"end": 1879,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1891,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1874,
									"end": 1891,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1891,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1891,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1874,
									"end": 1891,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1899,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6967,
									"end": 6972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6949,
									"end": 6973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 6947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 6974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7117,
									"end": 7119,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7106,
									"end": 7115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7102,
									"end": 7120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7198,
									"end": 7199,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7187,
									"end": 7196,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7183,
									"end": 7200,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7174,
									"end": 7180,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 7130,
									"end": 7201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7262,
									"end": 7339,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7340,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7349,
									"end": 7364,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7387,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7373,
									"end": 7388,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7440,
									"end": 7443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7477,
									"end": 7478,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7459,
									"end": 7479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7511,
									"end": 7512,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7493,
									"end": 7513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7538,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7557,
									"end": 7560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7554,
									"end": 7555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7551,
									"end": 7561,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 7564,
									"end": 7582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7702,
									"end": 7707,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 7684,
									"end": 7708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7709,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7870,
									"end": 7874,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7908,
									"end": 7910,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7893,
									"end": 7911,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7978,
									"end": 7987,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7974,
									"end": 7991,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7965,
									"end": 7971,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 7921,
									"end": 7992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8070,
									"end": 8072,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8055,
									"end": 8073,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8046,
									"end": 8052,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8002,
									"end": 8074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8152,
									"end": 8154,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8141,
									"end": 8150,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8137,
									"end": 8155,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8128,
									"end": 8134,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8084,
									"end": 8156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8262,
									"end": 8266,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8302,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8289,
									"end": 8298,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8285,
									"end": 8303,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8381,
									"end": 8382,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8370,
									"end": 8379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8366,
									"end": 8383,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8357,
									"end": 8363,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 8313,
									"end": 8384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 3822,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe4e2975c141cb4f61c7ffe8ddd28321463c1cc8f1fdc0f14ca8d9d9e900b16464736f6c634300081a0033",
									".code": [
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "AF3BCB7D"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "EA5E65E0"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "EA5E65E0"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "F5112F87"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "FBD1A97B"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "AF3BCB7D"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "CE6019B4"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "7B47EC1A"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "62D6BBDF"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "1072CBEA"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "12065FE0"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "17D70F7C"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 785,
											"end": 3822,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1937,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1937,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3538,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3538,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1027,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1027,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1688,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1688,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1804,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1804,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2330,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2330,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3670,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3670,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2979,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2979,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3382,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3382,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3382,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2493,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2493,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2160,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2052,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2032,
											"end": 2042,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2022,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2052,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2052,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2014,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 2088,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2117,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2088,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1937,
											"end": 2125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3618,
											"end": 3628,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3608,
											"end": 3629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3629,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3608,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3601,
											"end": 3629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1874,
											"end": 1891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1880,
											"end": 1882,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 1890,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1874,
											"end": 1891,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1874,
											"end": 1891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2439,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2441,
											"end": 2448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2455,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2418,
											"end": 2425,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2426,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2412,
											"end": 2456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2467,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2467,
											"end": 2476,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2476,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3761,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3741,
											"end": 3751,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3731,
											"end": 3752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3731,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3761,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3761,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3723,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3723,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 3808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3796,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3796,
											"end": 3809,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3796,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3049,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3058,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3044,
											"end": 3069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3036,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3132,
											"end": 3152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3152,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3107,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3128,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3107,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3152,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3152,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3099,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3099,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3195,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3209,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3195,
											"end": 3215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3215,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3190,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3216,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3190,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3238,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3249,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3269,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3270,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3227,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3313,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "8BEDD141782C49139782BD92BD7A760A0BCB544FFECFD2B25F00366FAE06598E"
										},
										{
											"begin": 3315,
											"end": 3322,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3329,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3350,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3365,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3289,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3366,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 3374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3453,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3472,
											"end": 3483,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3489,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3465,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3465,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2660,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2625,
											"end": 2640,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2652,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2608,
											"end": 2653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2654,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2655,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2593,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2593,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2573,
											"end": 2660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2692,
											"end": 2704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2692,
											"end": 2706,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2707,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2707,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2688,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2707,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2707,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2677,
											"end": 2707,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2730,
											"end": 2740,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2742,
											"end": 2752,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2742,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2724,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2724,
											"end": 2755,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2724,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2797,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2817,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2775,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2825,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2865,
											"end": 2875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2860,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2918,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH",
											"source": 7,
											"value": "D04D9689D8E43BC0BACEA67661EF472DCF321F34F08AF72F651AF30C4C866587"
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2934,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2896,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2673,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2160,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2220,
											"end": 2230,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2210,
											"end": 2231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2231,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2210,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2236,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2202,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2202,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2299,
											"end": 2309,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2293,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2293,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 942,
											"end": 976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 942,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3770,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3759,
											"end": 3764,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3755,
											"end": 3771,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 3882,
											"end": 3887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3866,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 3994,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 4105,
											"end": 4106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4090,
											"end": 4107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4041,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 4041,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 4115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4251,
											"end": 4260,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4261,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4266,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4269,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 4269,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 4231,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 4459,
											"end": 4466,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4414,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 4414,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 4587,
											"end": 4594,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4576,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4542,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 4542,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 4715,
											"end": 4722,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4670,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 4670,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4121,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5507,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 5327,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5375,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5476,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5462,
											"end": 5477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5501,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 5596,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5588,
											"end": 5594,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5714,
											"end": 5724,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5733,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5708,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5678,
											"end": 5688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5675,
											"end": 5709,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5734,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 5669,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 5775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5556,
											"end": 5794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5513,
											"end": 5794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5861,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 5861,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 5918,
											"end": 5922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5910,
											"end": 5916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5890,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 5890,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5800,
											"end": 5929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6001,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6076,
											"end": 6106,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6109,
											"end": 6127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 6073,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 6147,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 6147,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5935,
											"end": 6243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6337,
											"end": 6340,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6324,
											"end": 6354,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6377,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6249,
											"end": 6397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 6564,
											"end": 6570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 6522,
											"end": 6571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 6522,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6506,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 6506,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6497,
											"end": 6572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6497,
											"end": 6572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6595,
											"end": 6601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6588,
											"end": 6593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6581,
											"end": 6602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6633,
											"end": 6637,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6626,
											"end": 6631,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6662,
											"end": 6668,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6660,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6653,
											"end": 6669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6650,
											"end": 6675,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6678,
											"end": 6757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 6678,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 6647,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 6815,
											"end": 6821,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6808,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 6768,
											"end": 6822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 6768,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6403,
											"end": 6828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6904,
											"end": 6909,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 6950,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6930,
											"end": 6957,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 6961,
											"end": 7040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 6961,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 6920,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7065,
											"end": 7085,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 7178,
											"end": 7181,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7163,
											"end": 7167,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7103,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6910,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 7188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7331,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7308,
											"end": 7315,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7304,
											"end": 7327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7300,
											"end": 7332,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 7335,
											"end": 7414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 7335,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 7297,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7486,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7505,
											"end": 7511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7502,
											"end": 7532,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 7535,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 7535,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 7499,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 7695,
											"end": 7702,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 7692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 7640,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 7640,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7630,
											"end": 7703,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7630,
											"end": 7703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7426,
											"end": 7713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7752,
											"end": 7754,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 7823,
											"end": 7830,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 7778,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7194,
											"end": 7848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7964,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7959,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7941,
											"end": 7948,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7960,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7933,
											"end": 7965,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 7968,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 7968,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 7930,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 8158,
											"end": 8165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8149,
											"end": 8155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8134,
											"end": 8156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8113,
											"end": 8166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 8113,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8166,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8059,
											"end": 8176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7854,
											"end": 8183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 8294,
											"end": 8299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 8276,
											"end": 8300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 8276,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8264,
											"end": 8301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8410,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8421,
											"end": 8447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8421,
											"end": 8447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 8525,
											"end": 8526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 8457,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 8457,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8541,
											"end": 8659,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8541,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 8628,
											"end": 8633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8612,
											"end": 8634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 8612,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8602,
											"end": 8635,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8639,
											"end": 8651,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 8592,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8541,
											"end": 8659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8541,
											"end": 8659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8709,
											"end": 8714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8754,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 8788,
											"end": 8793,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8763,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 8763,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8665,
											"end": 8800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8863,
											"end": 8869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8891,
											"end": 8898,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8910,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8883,
											"end": 8915,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 8918,
											"end": 8997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 9106,
											"end": 9113,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9082,
											"end": 9104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 9063,
											"end": 9114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 9063,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 9131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9272,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 9137,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9264,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9253,
											"end": 9265,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9243,
											"end": 9265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9483,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 9278,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9398,
											"end": 9409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9432,
											"end": 9438,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9427,
											"end": 9430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9439,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9476,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9467,
											"end": 9470,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9463,
											"end": 9477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9448,
											"end": 9477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9483,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9483,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9642,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 9489,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9577,
											"end": 9581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9603,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9630,
											"end": 9634,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9625,
											"end": 9628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9613,
											"end": 9635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9613,
											"end": 9635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9642,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9807,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9648,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9722,
											"end": 9733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9751,
											"end": 9754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9763,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 9800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9791,
											"end": 9794,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 9801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 9801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9807,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9648,
											"end": 9807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 10170,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9813,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 9894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9919,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 9952,
											"end": 9957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9919,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 9919,
											"end": 9958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9919,
											"end": 9958,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 9919,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9974,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 10028,
											"end": 10034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10023,
											"end": 10026,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9974,
											"end": 10035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9974,
											"end": 10035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9974,
											"end": 10035,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 9974,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 10035,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 10035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10097,
											"end": 10100,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10090,
											"end": 10094,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 10044,
											"end": 10109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10044,
											"end": 10109,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 10044,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10134,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 10156,
											"end": 10162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10134,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 10134,
											"end": 10163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10134,
											"end": 10163,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 10134,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10129,
											"end": 10132,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9895,
											"end": 10170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 10170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 10170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 10170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 10170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 10170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10176,
											"end": 10278,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 10176,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 10265,
											"end": 10270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10249,
											"end": 10271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10249,
											"end": 10271,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 10249,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10247,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10176,
											"end": 10278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10176,
											"end": 10278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10176,
											"end": 10278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10392,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 10284,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 10379,
											"end": 10384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 10361,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10454,
											"end": 11215,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 10454,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10555,
											"end": 10558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10591,
											"end": 10595,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10586,
											"end": 10589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10676,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10667,
											"end": 10683,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10661,
											"end": 10684,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10731,
											"end": 10734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10735,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 10712,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10705,
											"end": 10719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10698,
											"end": 10736,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 10825,
											"end": 10829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10811,
											"end": 10823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 10757,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10757,
											"end": 10830,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 10757,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10830,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10925,
											"end": 10929,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10918,
											"end": 10923,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10908,
											"end": 10931,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 10997,
											"end": 11001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10974,
											"end": 10986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 10944,
											"end": 11003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 11003,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 10944,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10851,
											"end": 11013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11096,
											"end": 11100,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11085,
											"end": 11101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11079,
											"end": 11102,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11172,
											"end": 11176,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11167,
											"end": 11170,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11163,
											"end": 11177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11149,
											"end": 11161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 11115,
											"end": 11178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11205,
											"end": 11209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11198,
											"end": 11209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11198,
											"end": 11209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 11215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10454,
											"end": 11215,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10454,
											"end": 11215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10454,
											"end": 11215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10454,
											"end": 11215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10454,
											"end": 11215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11461,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 11221,
											"end": 11461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11332,
											"end": 11342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 11451,
											"end": 11454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11443,
											"end": 11449,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 11367,
											"end": 11455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11353,
											"end": 11455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11353,
											"end": 11455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11461,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11467,
											"end": 11601,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 11467,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11558,
											"end": 11562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11585,
											"end": 11588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11581,
											"end": 11595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11573,
											"end": 11595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11573,
											"end": 11595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11467,
											"end": 11601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11467,
											"end": 11601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11467,
											"end": 11601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11467,
											"end": 11601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 12746,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 11667,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11828,
											"end": 11831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11857,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 11926,
											"end": 11931,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11857,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 11857,
											"end": 11932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11857,
											"end": 11932,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 11857,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 12048,
											"end": 12054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12043,
											"end": 12046,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 11948,
											"end": 12055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11948,
											"end": 12055,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 11948,
											"end": 12055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11941,
											"end": 12055,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11941,
											"end": 12055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12081,
											"end": 12084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12126,
											"end": 12130,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12118,
											"end": 12124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12114,
											"end": 12131,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12112,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12105,
											"end": 12132,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 12227,
											"end": 12232,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 12156,
											"end": 12233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12156,
											"end": 12233,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 12156,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12256,
											"end": 12263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12287,
											"end": 12288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12297,
											"end": 12303,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12294,
											"end": 12295,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12291,
											"end": 12304,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12377,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12366,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12358,
											"end": 12378,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12353,
											"end": 12356,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 12346,
											"end": 12379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12419,
											"end": 12425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12413,
											"end": 12426,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12447,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 12548,
											"end": 12552,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12533,
											"end": 12546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12447,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 12447,
											"end": 12553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12447,
											"end": 12553,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 12447,
											"end": 12553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12439,
											"end": 12553,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 12439,
											"end": 12553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12576,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 12650,
											"end": 12656,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12576,
											"end": 12657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 12576,
											"end": 12657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12576,
											"end": 12657,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 12576,
											"end": 12657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12657,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12566,
											"end": 12657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12686,
											"end": 12690,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12684,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 12677,
											"end": 12691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12691,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 12670,
											"end": 12691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12332,
											"end": 12701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12316,
											"end": 12317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12312,
											"end": 12321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12307,
											"end": 12321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12307,
											"end": 12321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 12272,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12276,
											"end": 12290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12717,
											"end": 12721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12721,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12737,
											"end": 12740,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12730,
											"end": 12740,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 12730,
											"end": 12740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11833,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11833,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11833,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11833,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11833,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 12746,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 12746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 12746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 12746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13209,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 12752,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12937,
											"end": 12941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12975,
											"end": 12977,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12964,
											"end": 12973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12960,
											"end": 12978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12952,
											"end": 12978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12952,
											"end": 12978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13024,
											"end": 13033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13018,
											"end": 13022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13010,
											"end": 13011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12999,
											"end": 13008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12995,
											"end": 13012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12988,
											"end": 13035,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13052,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 13197,
											"end": 13201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13188,
											"end": 13194,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13052,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 13052,
											"end": 13202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13052,
											"end": 13202,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 13052,
											"end": 13202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13202,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13209,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12752,
											"end": 13209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13689,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 13215,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13283,
											"end": 13289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13291,
											"end": 13297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13340,
											"end": 13342,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13328,
											"end": 13337,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13319,
											"end": 13326,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13338,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13311,
											"end": 13343,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 13308,
											"end": 13427,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13308,
											"end": 13427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 13308,
											"end": 13427,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 13346,
											"end": 13425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13308,
											"end": 13427,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 13308,
											"end": 13427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13466,
											"end": 13467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13491,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 13536,
											"end": 13543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13527,
											"end": 13533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13516,
											"end": 13525,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13512,
											"end": 13534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13491,
											"end": 13544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 13491,
											"end": 13544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13491,
											"end": 13544,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 13491,
											"end": 13544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13481,
											"end": 13544,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13481,
											"end": 13544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13437,
											"end": 13554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13593,
											"end": 13595,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13619,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 13664,
											"end": 13671,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13644,
											"end": 13653,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13640,
											"end": 13662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 13619,
											"end": 13672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13672,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 13619,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13609,
											"end": 13672,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13609,
											"end": 13672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13564,
											"end": 13682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13689,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13689,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13811,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 13695,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13765,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 13780,
											"end": 13785,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13765,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 13765,
											"end": 13786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13765,
											"end": 13786,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 13765,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13758,
											"end": 13763,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13755,
											"end": 13787,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13745,
											"end": 13805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 13745,
											"end": 13805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13801,
											"end": 13802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13798,
											"end": 13799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13791,
											"end": 13803,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13745,
											"end": 13805,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 13745,
											"end": 13805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13811,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13695,
											"end": 13811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13817,
											"end": 13950,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 13817,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13860,
											"end": 13865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13898,
											"end": 13904,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13905,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 13876,
											"end": 13905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13876,
											"end": 13905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13914,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 13938,
											"end": 13943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13914,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 13914,
											"end": 13944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13914,
											"end": 13944,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 13914,
											"end": 13944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13817,
											"end": 13950,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13817,
											"end": 13950,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13817,
											"end": 13950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13817,
											"end": 13950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13817,
											"end": 13950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 14424,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 13956,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14029,
											"end": 14035,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14078,
											"end": 14080,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14066,
											"end": 14075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14057,
											"end": 14064,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14053,
											"end": 14076,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14049,
											"end": 14081,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14165,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 14046,
											"end": 14165,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14084,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 14084,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 14084,
											"end": 14163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14084,
											"end": 14163,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 14084,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14046,
											"end": 14165,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 14046,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14204,
											"end": 14205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14229,
											"end": 14279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 14271,
											"end": 14278,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14262,
											"end": 14268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14251,
											"end": 14260,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14247,
											"end": 14269,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 14229,
											"end": 14279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14279,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 14229,
											"end": 14279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14328,
											"end": 14330,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14354,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 14399,
											"end": 14406,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14390,
											"end": 14396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14379,
											"end": 14388,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14375,
											"end": 14397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 14354,
											"end": 14407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14407,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 14354,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14344,
											"end": 14407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14344,
											"end": 14407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14299,
											"end": 14417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 14424,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 14424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 14424,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 14424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 14424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 14424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14595,
											"end": 14599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14633,
											"end": 14635,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14622,
											"end": 14631,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14618,
											"end": 14636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14610,
											"end": 14636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14610,
											"end": 14636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14682,
											"end": 14691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14676,
											"end": 14680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14672,
											"end": 14692,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14668,
											"end": 14669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14657,
											"end": 14666,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 14670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14646,
											"end": 14693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14710,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 14783,
											"end": 14787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 14780,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14710,
											"end": 14788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 14710,
											"end": 14788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14710,
											"end": 14788,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 14710,
											"end": 14788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14702,
											"end": 14788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14702,
											"end": 14788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14798,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 14862,
											"end": 14864,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14860,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14844,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14798,
											"end": 14866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 14798,
											"end": 14866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14798,
											"end": 14866,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 14798,
											"end": 14866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 14944,
											"end": 14946,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14933,
											"end": 14942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14929,
											"end": 14947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14920,
											"end": 14926,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 14876,
											"end": 14948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14876,
											"end": 14948,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 14876,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14430,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15141,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 14961,
											"end": 15141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15009,
											"end": 15086,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15006,
											"end": 15007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14999,
											"end": 15087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15106,
											"end": 15110,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 15103,
											"end": 15104,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15096,
											"end": 15111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15130,
											"end": 15134,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15127,
											"end": 15128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15120,
											"end": 15135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15467,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 15147,
											"end": 15467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15191,
											"end": 15197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15228,
											"end": 15229,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 15222,
											"end": 15226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15218,
											"end": 15230,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15208,
											"end": 15230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15208,
											"end": 15230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15275,
											"end": 15276,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15269,
											"end": 15273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15265,
											"end": 15277,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15296,
											"end": 15314,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15286,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 15286,
											"end": 15367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15352,
											"end": 15356,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 15344,
											"end": 15350,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15340,
											"end": 15357,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15330,
											"end": 15357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15330,
											"end": 15357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15286,
											"end": 15367,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 15286,
											"end": 15367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15414,
											"end": 15416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15406,
											"end": 15412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15403,
											"end": 15417,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15380,
											"end": 15418,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 15377,
											"end": 15461,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 15433,
											"end": 15451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 15433,
											"end": 15451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15433,
											"end": 15451,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 15433,
											"end": 15451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15461,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 15377,
											"end": 15461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15198,
											"end": 15467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15473,
											"end": 15643,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 15473,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15613,
											"end": 15635,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 15609,
											"end": 15610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15601,
											"end": 15607,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15597,
											"end": 15611,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15590,
											"end": 15636,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15473,
											"end": 15643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15473,
											"end": 15643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15791,
											"end": 15794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 15876,
											"end": 15878,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 15871,
											"end": 15874,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 15812,
											"end": 15879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 15812,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15805,
											"end": 15879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15805,
											"end": 15879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 15977,
											"end": 15980,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 15888,
											"end": 15981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 15888,
											"end": 15981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16006,
											"end": 16008,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16001,
											"end": 16004,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15997,
											"end": 16009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15990,
											"end": 16009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15990,
											"end": 16009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15649,
											"end": 16015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15649,
											"end": 16015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16187,
											"end": 16191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16225,
											"end": 16227,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16214,
											"end": 16223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16202,
											"end": 16228,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16202,
											"end": 16228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16274,
											"end": 16283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16268,
											"end": 16272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16264,
											"end": 16284,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16260,
											"end": 16261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16258,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16245,
											"end": 16262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16238,
											"end": 16285,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 16428,
											"end": 16432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 16302,
											"end": 16433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 16302,
											"end": 16433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16294,
											"end": 16433,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16294,
											"end": 16433,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16587,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 16446,
											"end": 16587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16495,
											"end": 16499,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16518,
											"end": 16521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16510,
											"end": 16521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16510,
											"end": 16521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16538,
											"end": 16539,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16531,
											"end": 16545,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16572,
											"end": 16573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16562,
											"end": 16580,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 16554,
											"end": 16580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16554,
											"end": 16580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16446,
											"end": 16587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16593,
											"end": 16686,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 16593,
											"end": 16686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16636,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16677,
											"end": 16679,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16672,
											"end": 16674,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16665,
											"end": 16670,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16661,
											"end": 16675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16657,
											"end": 16680,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 16647,
											"end": 16680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16647,
											"end": 16680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16593,
											"end": 16686,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16593,
											"end": 16686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16593,
											"end": 16686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16593,
											"end": 16686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16692,
											"end": 16799,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 16692,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16736,
											"end": 16744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16786,
											"end": 16791,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16780,
											"end": 16784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16776,
											"end": 16792,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16792,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16692,
											"end": 16799,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16692,
											"end": 16799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16692,
											"end": 16799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16692,
											"end": 16799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16692,
											"end": 16799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 17198,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 16805,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16874,
											"end": 16880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16924,
											"end": 16925,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 16912,
											"end": 16922,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16908,
											"end": 16926,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 16947,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 16977,
											"end": 17043,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16966,
											"end": 16975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16947,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 16947,
											"end": 17044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16947,
											"end": 17044,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 16947,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17065,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 17095,
											"end": 17103,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17084,
											"end": 17093,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17065,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 17065,
											"end": 17104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17065,
											"end": 17104,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 17065,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17053,
											"end": 17104,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 17053,
											"end": 17104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17137,
											"end": 17141,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17133,
											"end": 17142,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 17131,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17122,
											"end": 17143,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17113,
											"end": 17143,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17113,
											"end": 17143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17186,
											"end": 17190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17176,
											"end": 17184,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17172,
											"end": 17191,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17165,
											"end": 17170,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17162,
											"end": 17192,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 17192,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 17192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16881,
											"end": 17198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16881,
											"end": 17198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 17198,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 17198,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 17198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 17198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 17198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 17198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17204,
											"end": 17264,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 17204,
											"end": 17264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17232,
											"end": 17235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17246,
											"end": 17258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17246,
											"end": 17258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17204,
											"end": 17264,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17204,
											"end": 17264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17204,
											"end": 17264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17204,
											"end": 17264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17270,
											"end": 17412,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 17270,
											"end": 17412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17320,
											"end": 17329,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17353,
											"end": 17406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 17371,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 17380,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 17398,
											"end": 17403,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17380,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 17380,
											"end": 17404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17380,
											"end": 17404,
											"name": "tag",
											"source": 8,
											"value": "564"
										},
										{
											"begin": 17380,
											"end": 17404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17371,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 17371,
											"end": 17405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17371,
											"end": 17405,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 17371,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17353,
											"end": 17406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 17353,
											"end": 17406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17353,
											"end": 17406,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 17353,
											"end": 17406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17340,
											"end": 17406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17340,
											"end": 17406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17270,
											"end": 17412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17270,
											"end": 17412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17270,
											"end": 17412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17270,
											"end": 17412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17418,
											"end": 17493,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 17418,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17461,
											"end": 17464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17482,
											"end": 17487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17475,
											"end": 17487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17475,
											"end": 17487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17418,
											"end": 17493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17418,
											"end": 17493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17418,
											"end": 17493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17418,
											"end": 17493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17499,
											"end": 17768,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 17499,
											"end": 17768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17609,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 17640,
											"end": 17647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17609,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 17609,
											"end": 17648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17609,
											"end": 17648,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 17609,
											"end": 17648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17670,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 17719,
											"end": 17760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 17743,
											"end": 17759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17719,
											"end": 17760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 17719,
											"end": 17760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17719,
											"end": 17760,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 17719,
											"end": 17760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17711,
											"end": 17717,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17704,
											"end": 17708,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17698,
											"end": 17709,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17670,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 17670,
											"end": 17761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17670,
											"end": 17761,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 17670,
											"end": 17761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17664,
											"end": 17668,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17657,
											"end": 17762,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 17575,
											"end": 17768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17499,
											"end": 17768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17499,
											"end": 17768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17499,
											"end": 17768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17499,
											"end": 17768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17774,
											"end": 17847,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 17774,
											"end": 17847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17819,
											"end": 17822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17774,
											"end": 17847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17774,
											"end": 17847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17853,
											"end": 18042,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 17853,
											"end": 18042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17930,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 17930,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 17930,
											"end": 17962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17930,
											"end": 17962,
											"name": "tag",
											"source": 8,
											"value": "572"
										},
										{
											"begin": 17930,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17971,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 18029,
											"end": 18035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18021,
											"end": 18027,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18015,
											"end": 18019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17971,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 17971,
											"end": 18036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17971,
											"end": 18036,
											"name": "tag",
											"source": 8,
											"value": "573"
										},
										{
											"begin": 17971,
											"end": 18036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17906,
											"end": 18042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17853,
											"end": 18042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17853,
											"end": 18042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17853,
											"end": 18042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18048,
											"end": 18234,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 18048,
											"end": 18234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "tag",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18125,
											"end": 18128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18118,
											"end": 18123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18115,
											"end": 18129,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18179,
											"end": 18218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 18216,
											"end": 18217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18209,
											"end": 18214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18179,
											"end": 18218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 18179,
											"end": 18218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18179,
											"end": 18218,
											"name": "tag",
											"source": 8,
											"value": "578"
										},
										{
											"begin": 18179,
											"end": 18218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18152,
											"end": 18153,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18145,
											"end": 18150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18154,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18132,
											"end": 18154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18132,
											"end": 18154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "575"
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "tag",
											"source": 8,
											"value": "577"
										},
										{
											"begin": 18108,
											"end": 18228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18048,
											"end": 18234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18048,
											"end": 18234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18048,
											"end": 18234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18240,
											"end": 18783,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 18240,
											"end": 18783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18341,
											"end": 18343,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18336,
											"end": 18339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18333,
											"end": 18344,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18330,
											"end": 18776,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18330,
											"end": 18776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 18330,
											"end": 18776,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 18407,
											"end": 18412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 18375,
											"end": 18413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18413,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 18375,
											"end": 18413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 18477,
											"end": 18487,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 18459,
											"end": 18488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18459,
											"end": 18488,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 18459,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18449,
											"end": 18457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18445,
											"end": 18489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18642,
											"end": 18644,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18630,
											"end": 18640,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 18624,
											"end": 18673,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18624,
											"end": 18673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 18624,
											"end": 18673,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18663,
											"end": 18671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18648,
											"end": 18671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18648,
											"end": 18671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18624,
											"end": 18673,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 18624,
											"end": 18673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 18742,
											"end": 18764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 18760,
											"end": 18763,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18742,
											"end": 18764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 18742,
											"end": 18764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18742,
											"end": 18764,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 18742,
											"end": 18764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18732,
											"end": 18740,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18728,
											"end": 18765,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18715,
											"end": 18726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 18686,
											"end": 18766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18686,
											"end": 18766,
											"name": "tag",
											"source": 8,
											"value": "584"
										},
										{
											"begin": 18686,
											"end": 18766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18345,
											"end": 18776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18345,
											"end": 18776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18330,
											"end": 18776,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 18330,
											"end": 18776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18240,
											"end": 18783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18240,
											"end": 18783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18240,
											"end": 18783,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18240,
											"end": 18783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18789,
											"end": 18906,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 18789,
											"end": 18906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18843,
											"end": 18851,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18893,
											"end": 18898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18887,
											"end": 18891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18883,
											"end": 18899,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 18862,
											"end": 18899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18862,
											"end": 18899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18789,
											"end": 18906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18789,
											"end": 18906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18789,
											"end": 18906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18789,
											"end": 18906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18789,
											"end": 18906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18912,
											"end": 19081,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 18912,
											"end": 19081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18956,
											"end": 18962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18989,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 19037,
											"end": 19038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19033,
											"end": 19039,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 19025,
											"end": 19030,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19022,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 19018,
											"end": 19031,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18989,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 18989,
											"end": 19040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18989,
											"end": 19040,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 18989,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18985,
											"end": 19041,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 19070,
											"end": 19074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19064,
											"end": 19068,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19060,
											"end": 19075,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19050,
											"end": 19075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19050,
											"end": 19075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18963,
											"end": 19081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18912,
											"end": 19081,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18912,
											"end": 19081,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18912,
											"end": 19081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18912,
											"end": 19081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18912,
											"end": 19081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19086,
											"end": 19381,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 19086,
											"end": 19381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19308,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 19333,
											"end": 19336,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19327,
											"end": 19331,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19308,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 19308,
											"end": 19337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19308,
											"end": 19337,
											"name": "tag",
											"source": 8,
											"value": "590"
										},
										{
											"begin": 19308,
											"end": 19337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19300,
											"end": 19337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19300,
											"end": 19337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19370,
											"end": 19373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19367,
											"end": 19368,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 19363,
											"end": 19374,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 19357,
											"end": 19361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19354,
											"end": 19375,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19086,
											"end": 19381,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19086,
											"end": 19381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19086,
											"end": 19381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19086,
											"end": 19381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19086,
											"end": 19381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19386,
											"end": 20781,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 19386,
											"end": 20781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19503,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 19536,
											"end": 19539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19503,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 19503,
											"end": 19540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19503,
											"end": 19540,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 19503,
											"end": 19540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19605,
											"end": 19623,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19597,
											"end": 19603,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19594,
											"end": 19624,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19591,
											"end": 19647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19591,
											"end": 19647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 19591,
											"end": 19647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19627,
											"end": 19645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 19627,
											"end": 19645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 19627,
											"end": 19645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19627,
											"end": 19645,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 19627,
											"end": 19645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19591,
											"end": 19647,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 19591,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19671,
											"end": 19709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 19703,
											"end": 19707,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19697,
											"end": 19708,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19671,
											"end": 19709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 19671,
											"end": 19709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19671,
											"end": 19709,
											"name": "tag",
											"source": 8,
											"value": "595"
										},
										{
											"begin": 19671,
											"end": 19709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19756,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 19816,
											"end": 19822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19808,
											"end": 19814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19802,
											"end": 19806,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19756,
											"end": 19823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 19756,
											"end": 19823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19756,
											"end": 19823,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 19756,
											"end": 19823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19850,
											"end": 19851,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19874,
											"end": 19878,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19861,
											"end": 19878,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19861,
											"end": 19878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19906,
											"end": 19908,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 19898,
											"end": 19904,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19895,
											"end": 19909,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19923,
											"end": 19924,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19918,
											"end": 20536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19918,
											"end": 20536,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 19918,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 19918,
											"end": 20536,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20580,
											"end": 20581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20597,
											"end": 20603,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 20671,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 20671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 20594,
											"end": 20671,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20646,
											"end": 20655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20641,
											"end": 20644,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20637,
											"end": 20656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20631,
											"end": 20657,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20622,
											"end": 20657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20622,
											"end": 20657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20594,
											"end": 20671,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 20594,
											"end": 20671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20697,
											"end": 20764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 20757,
											"end": 20763,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20750,
											"end": 20755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20697,
											"end": 20764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 20697,
											"end": 20764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20697,
											"end": 20764,
											"name": "tag",
											"source": 8,
											"value": "600"
										},
										{
											"begin": 20697,
											"end": 20764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20691,
											"end": 20695,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20684,
											"end": 20765,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 20553,
											"end": 20775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19888,
											"end": 20775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 19888,
											"end": 20775,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19918,
											"end": 20536,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 19918,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19970,
											"end": 19974,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 19966,
											"end": 19975,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 19958,
											"end": 19964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19954,
											"end": 19976,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20004,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 20036,
											"end": 20040,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20004,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 20004,
											"end": 20041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20004,
											"end": 20041,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 20004,
											"end": 20041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20063,
											"end": 20064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20091,
											"end": 20098,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20088,
											"end": 20089,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20085,
											"end": 20099,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20170,
											"end": 20179,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20165,
											"end": 20168,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 20161,
											"end": 20180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20155,
											"end": 20181,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20147,
											"end": 20153,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20140,
											"end": 20182,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 20221,
											"end": 20222,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 20213,
											"end": 20219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20209,
											"end": 20223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20199,
											"end": 20223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20199,
											"end": 20223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20268,
											"end": 20270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20257,
											"end": 20266,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20253,
											"end": 20271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20240,
											"end": 20271,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 20240,
											"end": 20271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20114,
											"end": 20118,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20111,
											"end": 20112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20107,
											"end": 20119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20102,
											"end": 20119,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20102,
											"end": 20119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "tag",
											"source": 8,
											"value": "604"
										},
										{
											"begin": 20077,
											"end": 20285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20313,
											"end": 20319,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20304,
											"end": 20311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20301,
											"end": 20320,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 20298,
											"end": 20477,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20298,
											"end": 20477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 20298,
											"end": 20477,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20371,
											"end": 20380,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20366,
											"end": 20369,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20356,
											"end": 20382,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20414,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 20456,
											"end": 20460,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20448,
											"end": 20454,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 20444,
											"end": 20461,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20433,
											"end": 20442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20414,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 20414,
											"end": 20462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20414,
											"end": 20462,
											"name": "tag",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 20414,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20406,
											"end": 20412,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20399,
											"end": 20463,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 20321,
											"end": 20477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20298,
											"end": 20477,
											"name": "tag",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 20298,
											"end": 20477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20523,
											"end": 20524,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 20519,
											"end": 20520,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 20511,
											"end": 20517,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 20507,
											"end": 20521,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20503,
											"end": 20525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20497,
											"end": 20501,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 20490,
											"end": 20526,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19925,
											"end": 20536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19888,
											"end": 20775,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 19888,
											"end": 20775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19888,
											"end": 20775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19478,
											"end": 20781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19478,
											"end": 20781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19478,
											"end": 20781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19386,
											"end": 20781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19386,
											"end": 20781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19386,
											"end": 20781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20787,
											"end": 20967,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 20787,
											"end": 20967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20835,
											"end": 20912,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20832,
											"end": 20833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20825,
											"end": 20913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20932,
											"end": 20936,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 20929,
											"end": 20930,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20922,
											"end": 20937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20956,
											"end": 20960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 20953,
											"end": 20954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20946,
											"end": 20961,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20973,
											"end": 21140,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 20973,
											"end": 21140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21010,
											"end": 21013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21033,
											"end": 21055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 21049,
											"end": 21054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 21033,
											"end": 21055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21055,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 21033,
											"end": 21055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21024,
											"end": 21055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21024,
											"end": 21055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21077,
											"end": 21081,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 21070,
											"end": 21075,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21067,
											"end": 21082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21064,
											"end": 21105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 21064,
											"end": 21105,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21085,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 21085,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 21085,
											"end": 21103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21085,
											"end": 21103,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 21085,
											"end": 21103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21064,
											"end": 21105,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 21064,
											"end": 21105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21132,
											"end": 21133,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 21125,
											"end": 21130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21121,
											"end": 21134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21114,
											"end": 21134,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21114,
											"end": 21134,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20973,
											"end": 21140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20973,
											"end": 21140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20973,
											"end": 21140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20973,
											"end": 21140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21146,
											"end": 21315,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 21146,
											"end": 21315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21286,
											"end": 21307,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E7420616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 21282,
											"end": 21283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21274,
											"end": 21280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21270,
											"end": 21284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21263,
											"end": 21308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21146,
											"end": 21315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21146,
											"end": 21315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21321,
											"end": 21687,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 21321,
											"end": 21687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21463,
											"end": 21466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21484,
											"end": 21551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 21548,
											"end": 21550,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 21543,
											"end": 21546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21484,
											"end": 21551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 21484,
											"end": 21551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21484,
											"end": 21551,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 21484,
											"end": 21551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21477,
											"end": 21551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21477,
											"end": 21551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21560,
											"end": 21653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 21649,
											"end": 21652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21560,
											"end": 21653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 21560,
											"end": 21653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21560,
											"end": 21653,
											"name": "tag",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 21560,
											"end": 21653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21678,
											"end": 21680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21673,
											"end": 21676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21669,
											"end": 21681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21662,
											"end": 21681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21662,
											"end": 21681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21321,
											"end": 21687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21321,
											"end": 21687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21321,
											"end": 21687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21321,
											"end": 21687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21693,
											"end": 22112,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 21693,
											"end": 22112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21859,
											"end": 21863,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21897,
											"end": 21899,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21886,
											"end": 21895,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21882,
											"end": 21900,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21874,
											"end": 21900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21874,
											"end": 21900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21946,
											"end": 21955,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21940,
											"end": 21944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21936,
											"end": 21956,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21932,
											"end": 21933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21921,
											"end": 21930,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21917,
											"end": 21934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21910,
											"end": 21957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 22100,
											"end": 22104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 21974,
											"end": 22105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22105,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 21974,
											"end": 22105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21966,
											"end": 22105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21966,
											"end": 22105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21693,
											"end": 22112,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21693,
											"end": 22112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21693,
											"end": 22112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21693,
											"end": 22112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22118,
											"end": 22282,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 22118,
											"end": 22282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22258,
											"end": 22274,
											"name": "PUSH",
											"source": 8,
											"value": "4974656D206E6F7420666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 22254,
											"end": 22255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22246,
											"end": 22252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22242,
											"end": 22256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22235,
											"end": 22275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22118,
											"end": 22282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22118,
											"end": 22282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22654,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 22288,
											"end": 22654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22430,
											"end": 22433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22451,
											"end": 22518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 22515,
											"end": 22517,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 22510,
											"end": 22513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22451,
											"end": 22518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 22451,
											"end": 22518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22451,
											"end": 22518,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 22451,
											"end": 22518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22444,
											"end": 22518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22444,
											"end": 22518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22527,
											"end": 22620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 22616,
											"end": 22619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22527,
											"end": 22620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 22527,
											"end": 22620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22527,
											"end": 22620,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 22527,
											"end": 22620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22645,
											"end": 22647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22640,
											"end": 22643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22636,
											"end": 22648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22629,
											"end": 22648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22629,
											"end": 22648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22288,
											"end": 22654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22660,
											"end": 23079,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 22660,
											"end": 23079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22826,
											"end": 22830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22864,
											"end": 22866,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22853,
											"end": 22862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22849,
											"end": 22867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22841,
											"end": 22867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22841,
											"end": 22867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22913,
											"end": 22922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22907,
											"end": 22911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22903,
											"end": 22923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 22899,
											"end": 22900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22888,
											"end": 22897,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22884,
											"end": 22901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22877,
											"end": 22924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22941,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 23067,
											"end": 23071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22941,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 22941,
											"end": 23072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22941,
											"end": 23072,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 22941,
											"end": 23072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22933,
											"end": 23072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22933,
											"end": 23072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22660,
											"end": 23079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22660,
											"end": 23079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22660,
											"end": 23079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22660,
											"end": 23079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23085,
											"end": 23234,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 23085,
											"end": 23234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23134,
											"end": 23140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23168,
											"end": 23173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23162,
											"end": 23174,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 23152,
											"end": 23174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23152,
											"end": 23174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23194,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 23220,
											"end": 23226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23194,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 23194,
											"end": 23227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23194,
											"end": 23227,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 23194,
											"end": 23227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23184,
											"end": 23227,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23184,
											"end": 23227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23085,
											"end": 23234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23085,
											"end": 23234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23085,
											"end": 23234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23085,
											"end": 23234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23240,
											"end": 24691,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 23240,
											"end": 24691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23351,
											"end": 23354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23345,
											"end": 23349,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23342,
											"end": 23355,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 23339,
											"end": 23365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 23339,
											"end": 23365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23358,
											"end": 23363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23358,
											"end": 23363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23358,
											"end": 23363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 23358,
											"end": 23363,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23339,
											"end": 23365,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 23339,
											"end": 23365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 23419,
											"end": 23422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 23389,
											"end": 23423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23389,
											"end": 23423,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 23389,
											"end": 23423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23488,
											"end": 23506,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23480,
											"end": 23486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23477,
											"end": 23507,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23474,
											"end": 23530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23474,
											"end": 23530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 23474,
											"end": 23530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23510,
											"end": 23528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 23510,
											"end": 23528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 23510,
											"end": 23528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23510,
											"end": 23528,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 23510,
											"end": 23528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23474,
											"end": 23530,
											"name": "tag",
											"source": 8,
											"value": "629"
										},
										{
											"begin": 23474,
											"end": 23530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23554,
											"end": 23592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 23586,
											"end": 23590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23580,
											"end": 23591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 23554,
											"end": 23592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 23554,
											"end": 23592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23554,
											"end": 23592,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 23554,
											"end": 23592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23639,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 23699,
											"end": 23705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23691,
											"end": 23697,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23685,
											"end": 23689,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23639,
											"end": 23706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 23639,
											"end": 23706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23639,
											"end": 23706,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 23639,
											"end": 23706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23733,
											"end": 23734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23762,
											"end": 23764,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23754,
											"end": 23760,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23751,
											"end": 23765,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23779,
											"end": 23780,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23774,
											"end": 24446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23774,
											"end": 24446,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 23774,
											"end": 24446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 23774,
											"end": 24446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24490,
											"end": 24491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24507,
											"end": 24513,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24504,
											"end": 24581,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24504,
											"end": 24581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 24504,
											"end": 24581,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24556,
											"end": 24565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24551,
											"end": 24554,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 24547,
											"end": 24566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24541,
											"end": 24567,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24532,
											"end": 24567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24532,
											"end": 24567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24504,
											"end": 24581,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 24504,
											"end": 24581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24607,
											"end": 24674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 24667,
											"end": 24673,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24660,
											"end": 24665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24607,
											"end": 24674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 24607,
											"end": 24674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24607,
											"end": 24674,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 24607,
											"end": 24674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24601,
											"end": 24605,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 24594,
											"end": 24675,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 24463,
											"end": 24685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23744,
											"end": 24685,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 23744,
											"end": 24685,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23774,
											"end": 24446,
											"name": "tag",
											"source": 8,
											"value": "634"
										},
										{
											"begin": 23774,
											"end": 24446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23826,
											"end": 23830,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23822,
											"end": 23831,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 23814,
											"end": 23820,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23810,
											"end": 23832,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23852,
											"end": 23888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 23884,
											"end": 23887,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 23852,
											"end": 23888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 23852,
											"end": 23888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23852,
											"end": 23888,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 23852,
											"end": 23888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23845,
											"end": 23888,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 23845,
											"end": 23888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23915,
											"end": 23952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 23947,
											"end": 23951,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 23915,
											"end": 23952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 23915,
											"end": 23952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23915,
											"end": 23952,
											"name": "tag",
											"source": 8,
											"value": "638"
										},
										{
											"begin": 23915,
											"end": 23952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23974,
											"end": 23975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24002,
											"end": 24009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23999,
											"end": 24000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23996,
											"end": 24010,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24081,
											"end": 24090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24076,
											"end": 24079,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 24072,
											"end": 24091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24066,
											"end": 24092,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24058,
											"end": 24064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24051,
											"end": 24093,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 24132,
											"end": 24133,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 24124,
											"end": 24130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24120,
											"end": 24134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24110,
											"end": 24134,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24110,
											"end": 24134,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24179,
											"end": 24180,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 24168,
											"end": 24177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24164,
											"end": 24181,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24151,
											"end": 24181,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 24151,
											"end": 24181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24025,
											"end": 24029,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24022,
											"end": 24023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24018,
											"end": 24030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24013,
											"end": 24030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24013,
											"end": 24030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 23988,
											"end": 24195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24223,
											"end": 24229,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 24214,
											"end": 24221,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24211,
											"end": 24230,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 24208,
											"end": 24387,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24208,
											"end": 24387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 24208,
											"end": 24387,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24281,
											"end": 24290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24276,
											"end": 24279,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 24272,
											"end": 24291,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24266,
											"end": 24292,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24324,
											"end": 24372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 24366,
											"end": 24370,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 24358,
											"end": 24364,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 24354,
											"end": 24371,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 24343,
											"end": 24352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24324,
											"end": 24372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 24324,
											"end": 24372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24324,
											"end": 24372,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 24324,
											"end": 24372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24316,
											"end": 24322,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24309,
											"end": 24373,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 24231,
											"end": 24387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24208,
											"end": 24387,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 24208,
											"end": 24387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24433,
											"end": 24434,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 24429,
											"end": 24430,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 24421,
											"end": 24427,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 24417,
											"end": 24431,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 24413,
											"end": 24435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24407,
											"end": 24411,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 24400,
											"end": 24436,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 23781,
											"end": 24446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23781,
											"end": 24446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23781,
											"end": 24446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23744,
											"end": 24685,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 23744,
											"end": 24685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23744,
											"end": 24685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23329,
											"end": 24691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23329,
											"end": 24691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23329,
											"end": 24691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23240,
											"end": 24691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23240,
											"end": 24691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23240,
											"end": 24691,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 23240,
											"end": 24691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23240,
											"end": 24691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 25552,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 24721,
											"end": 25552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24806,
											"end": 24809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24843,
											"end": 24848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24837,
											"end": 24849,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24872,
											"end": 24908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 24898,
											"end": 24907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24872,
											"end": 24908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 24872,
											"end": 24908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24872,
											"end": 24908,
											"name": "tag",
											"source": 8,
											"value": "645"
										},
										{
											"begin": 24872,
											"end": 24908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24924,
											"end": 24995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 24988,
											"end": 24994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24983,
											"end": 24986,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 24924,
											"end": 24995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 24924,
											"end": 24995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24924,
											"end": 24995,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 24924,
											"end": 24995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24917,
											"end": 24995,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 24917,
											"end": 24995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25026,
											"end": 25027,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25015,
											"end": 25024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25011,
											"end": 25028,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25042,
											"end": 25043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25215,
											"end": 25216,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25210,
											"end": 25546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25210,
											"end": 25546,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25210,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 25210,
											"end": 25546,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25004,
											"end": 25546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 25004,
											"end": 25546,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "tag",
											"source": 8,
											"value": "648"
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25121,
											"end": 25125,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 25117,
											"end": 25126,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 25106,
											"end": 25115,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25102,
											"end": 25127,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25097,
											"end": 25100,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25090,
											"end": 25128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25181,
											"end": 25187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25174,
											"end": 25188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25167,
											"end": 25189,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25161,
											"end": 25165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25157,
											"end": 25190,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 25152,
											"end": 25155,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25148,
											"end": 25191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25141,
											"end": 25191,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 25141,
											"end": 25191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 25037,
											"end": 25201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25210,
											"end": 25546,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 25210,
											"end": 25546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25277,
											"end": 25315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 25309,
											"end": 25314,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25277,
											"end": 25315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 25277,
											"end": 25315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25277,
											"end": 25315,
											"name": "tag",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 25277,
											"end": 25315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25337,
											"end": 25338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25365,
											"end": 25371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25362,
											"end": 25363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25439,
											"end": 25446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25433,
											"end": 25447,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 25429,
											"end": 25430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25424,
											"end": 25427,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 25420,
											"end": 25431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25413,
											"end": 25448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25489,
											"end": 25490,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25480,
											"end": 25487,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25476,
											"end": 25491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25465,
											"end": 25491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25465,
											"end": 25491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25387,
											"end": 25391,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25384,
											"end": 25385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25380,
											"end": 25392,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25375,
											"end": 25392,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25375,
											"end": 25392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "tag",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 25351,
											"end": 25505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25534,
											"end": 25535,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25529,
											"end": 25532,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 25525,
											"end": 25536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25518,
											"end": 25536,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 25518,
											"end": 25536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25217,
											"end": 25546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25217,
											"end": 25546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25004,
											"end": 25546,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 25004,
											"end": 25546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25004,
											"end": 25546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24810,
											"end": 25552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24810,
											"end": 25552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 25552,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 25552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 25552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 25552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24721,
											"end": 25552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25720,
											"end": 25724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25758,
											"end": 25760,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 25747,
											"end": 25756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25743,
											"end": 25761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25735,
											"end": 25761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25735,
											"end": 25761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25771,
											"end": 25838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 25835,
											"end": 25836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25824,
											"end": 25833,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25820,
											"end": 25837,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25811,
											"end": 25817,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25771,
											"end": 25838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 25771,
											"end": 25838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25771,
											"end": 25838,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 25771,
											"end": 25838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25885,
											"end": 25894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25879,
											"end": 25883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25875,
											"end": 25895,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 25870,
											"end": 25872,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25859,
											"end": 25868,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25855,
											"end": 25873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25848,
											"end": 25896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25913,
											"end": 25988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 25983,
											"end": 25987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25974,
											"end": 25980,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25913,
											"end": 25988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 25913,
											"end": 25988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25913,
											"end": 25988,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 25913,
											"end": 25988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25905,
											"end": 25988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25905,
											"end": 25988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25998,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 26066,
											"end": 26068,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26055,
											"end": 26064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26051,
											"end": 26069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26042,
											"end": 26048,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25998,
											"end": 26070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 25998,
											"end": 26070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25998,
											"end": 26070,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 25998,
											"end": 26070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25558,
											"end": 26077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26083,
											"end": 26162,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 26083,
											"end": 26162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26122,
											"end": 26129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26151,
											"end": 26156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26140,
											"end": 26156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26140,
											"end": 26156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26083,
											"end": 26162,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26083,
											"end": 26162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26083,
											"end": 26162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26083,
											"end": 26162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26168,
											"end": 26325,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 26168,
											"end": 26325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26273,
											"end": 26318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 26293,
											"end": 26317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 26311,
											"end": 26316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26293,
											"end": 26317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 26293,
											"end": 26317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26293,
											"end": 26317,
											"name": "tag",
											"source": 8,
											"value": "661"
										},
										{
											"begin": 26293,
											"end": 26317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26273,
											"end": 26318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 26273,
											"end": 26318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26273,
											"end": 26318,
											"name": "tag",
											"source": 8,
											"value": "660"
										},
										{
											"begin": 26273,
											"end": 26318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26268,
											"end": 26271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26261,
											"end": 26319,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26168,
											"end": 26325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26168,
											"end": 26325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26168,
											"end": 26325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26331,
											"end": 26425,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 26331,
											"end": 26425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26364,
											"end": 26372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26412,
											"end": 26417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26408,
											"end": 26410,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 26404,
											"end": 26418,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 26383,
											"end": 26418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26383,
											"end": 26418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26331,
											"end": 26425,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26331,
											"end": 26425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26331,
											"end": 26425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26331,
											"end": 26425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26431,
											"end": 26525,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 26431,
											"end": 26525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26470,
											"end": 26477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26499,
											"end": 26519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 26513,
											"end": 26518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26499,
											"end": 26519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 26499,
											"end": 26519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26499,
											"end": 26519,
											"name": "tag",
											"source": 8,
											"value": "664"
										},
										{
											"begin": 26499,
											"end": 26519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26488,
											"end": 26519,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26488,
											"end": 26519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26431,
											"end": 26525,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26431,
											"end": 26525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26431,
											"end": 26525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26431,
											"end": 26525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26531,
											"end": 26631,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 26531,
											"end": 26631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26570,
											"end": 26577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26599,
											"end": 26625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 26619,
											"end": 26624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26599,
											"end": 26625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 26599,
											"end": 26625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26599,
											"end": 26625,
											"name": "tag",
											"source": 8,
											"value": "666"
										},
										{
											"begin": 26599,
											"end": 26625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26588,
											"end": 26625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26588,
											"end": 26625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26531,
											"end": 26631,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26531,
											"end": 26631,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26531,
											"end": 26631,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26531,
											"end": 26631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26637,
											"end": 26794,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 26637,
											"end": 26794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26742,
											"end": 26787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 26762,
											"end": 26786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 26780,
											"end": 26785,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26762,
											"end": 26786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 26762,
											"end": 26786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26762,
											"end": 26786,
											"name": "tag",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 26762,
											"end": 26786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26742,
											"end": 26787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 26742,
											"end": 26787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26742,
											"end": 26787,
											"name": "tag",
											"source": 8,
											"value": "668"
										},
										{
											"begin": 26742,
											"end": 26787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26737,
											"end": 26740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26730,
											"end": 26788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26637,
											"end": 26794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26637,
											"end": 26794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26637,
											"end": 26794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 27197,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 26800,
											"end": 27197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26940,
											"end": 26943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26955,
											"end": 27030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "671"
										},
										{
											"begin": 27026,
											"end": 27029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27017,
											"end": 27023,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26955,
											"end": 27030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 26955,
											"end": 27030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 26955,
											"end": 27030,
											"name": "tag",
											"source": 8,
											"value": "671"
										},
										{
											"begin": 26955,
											"end": 27030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27055,
											"end": 27057,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 27050,
											"end": 27053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27046,
											"end": 27058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27039,
											"end": 27058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27039,
											"end": 27058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27068,
											"end": 27143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 27139,
											"end": 27142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27130,
											"end": 27136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27068,
											"end": 27143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 27068,
											"end": 27143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27068,
											"end": 27143,
											"name": "tag",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 27068,
											"end": 27143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27168,
											"end": 27170,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 27163,
											"end": 27166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27159,
											"end": 27171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27152,
											"end": 27171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27152,
											"end": 27171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27188,
											"end": 27191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27181,
											"end": 27191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27181,
											"end": 27191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 27197,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 27197,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 27197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 27197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 27197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 27197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27203,
											"end": 27383,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 27203,
											"end": 27383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27251,
											"end": 27328,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27248,
											"end": 27249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27241,
											"end": 27329,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27348,
											"end": 27352,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 27345,
											"end": 27346,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 27338,
											"end": 27353,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27372,
											"end": 27376,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 27369,
											"end": 27370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27362,
											"end": 27377,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 27389,
											"end": 27565,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 27389,
											"end": 27565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27421,
											"end": 27422,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27438,
											"end": 27458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 27456,
											"end": 27457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27438,
											"end": 27458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 27438,
											"end": 27458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27438,
											"end": 27458,
											"name": "tag",
											"source": 8,
											"value": "675"
										},
										{
											"begin": 27438,
											"end": 27458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27433,
											"end": 27458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27433,
											"end": 27458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27472,
											"end": 27492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 27490,
											"end": 27491,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27472,
											"end": 27492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 27472,
											"end": 27492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27472,
											"end": 27492,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 27472,
											"end": 27492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27467,
											"end": 27492,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27467,
											"end": 27492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27511,
											"end": 27512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27501,
											"end": 27536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 27501,
											"end": 27536,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 27516,
											"end": 27534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 27516,
											"end": 27534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 27516,
											"end": 27534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27516,
											"end": 27534,
											"name": "tag",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 27516,
											"end": 27534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27501,
											"end": 27536,
											"name": "tag",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 27501,
											"end": 27536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27557,
											"end": 27558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27554,
											"end": 27555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27550,
											"end": 27559,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 27545,
											"end": 27559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27545,
											"end": 27559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27389,
											"end": 27565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27389,
											"end": 27565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27389,
											"end": 27565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27389,
											"end": 27565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27389,
											"end": 27565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27571,
											"end": 27981,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 27571,
											"end": 27981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27611,
											"end": 27618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27634,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 27652,
											"end": 27653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27634,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 27634,
											"end": 27654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27634,
											"end": 27654,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 27634,
											"end": 27654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27629,
											"end": 27654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27629,
											"end": 27654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27668,
											"end": 27688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 27686,
											"end": 27687,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27668,
											"end": 27688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 27668,
											"end": 27688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27668,
											"end": 27688,
											"name": "tag",
											"source": 8,
											"value": "681"
										},
										{
											"begin": 27668,
											"end": 27688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27663,
											"end": 27688,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27663,
											"end": 27688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27723,
											"end": 27724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27720,
											"end": 27721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27716,
											"end": 27725,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 27745,
											"end": 27775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 27763,
											"end": 27774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27745,
											"end": 27775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 27745,
											"end": 27775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27745,
											"end": 27775,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 27745,
											"end": 27775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27734,
											"end": 27775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27734,
											"end": 27775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27924,
											"end": 27925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27915,
											"end": 27922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27911,
											"end": 27926,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 27908,
											"end": 27909,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 27905,
											"end": 27927,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 27885,
											"end": 27886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27878,
											"end": 27887,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 27858,
											"end": 27941,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 27835,
											"end": 27974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 27835,
											"end": 27974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 27954,
											"end": 27972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 27954,
											"end": 27972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 27954,
											"end": 27972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27954,
											"end": 27972,
											"name": "tag",
											"source": 8,
											"value": "684"
										},
										{
											"begin": 27954,
											"end": 27972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27835,
											"end": 27974,
											"name": "tag",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 27835,
											"end": 27974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27619,
											"end": 27981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27571,
											"end": 27981,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 27571,
											"end": 27981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27571,
											"end": 27981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27571,
											"end": 27981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27571,
											"end": 27981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 27987,
											"end": 28140,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 27987,
											"end": 28140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28127,
											"end": 28132,
											"name": "PUSH",
											"source": 8,
											"value": "776F6E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28123,
											"end": 28124,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28115,
											"end": 28121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28111,
											"end": 28125,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28104,
											"end": 28133,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27987,
											"end": 28140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27987,
											"end": 28140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28146,
											"end": 28511,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 28146,
											"end": 28511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28288,
											"end": 28291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28309,
											"end": 28375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 28373,
											"end": 28374,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 28368,
											"end": 28371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28309,
											"end": 28375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 28309,
											"end": 28375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28309,
											"end": 28375,
											"name": "tag",
											"source": 8,
											"value": "687"
										},
										{
											"begin": 28309,
											"end": 28375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28302,
											"end": 28375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28302,
											"end": 28375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28384,
											"end": 28477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 28473,
											"end": 28476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28384,
											"end": 28477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 28384,
											"end": 28477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28384,
											"end": 28477,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 28384,
											"end": 28477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28502,
											"end": 28504,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28497,
											"end": 28500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28493,
											"end": 28505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28486,
											"end": 28505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28486,
											"end": 28505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28146,
											"end": 28511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 28146,
											"end": 28511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28146,
											"end": 28511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28146,
											"end": 28511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28517,
											"end": 29144,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 28517,
											"end": 29144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28733,
											"end": 28737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28771,
											"end": 28773,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 28760,
											"end": 28769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28756,
											"end": 28774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28748,
											"end": 28774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28748,
											"end": 28774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28784,
											"end": 28855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 28852,
											"end": 28853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28841,
											"end": 28850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28837,
											"end": 28854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28828,
											"end": 28834,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 28784,
											"end": 28855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 28784,
											"end": 28855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28784,
											"end": 28855,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 28784,
											"end": 28855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28865,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 28927,
											"end": 28929,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28916,
											"end": 28925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28912,
											"end": 28930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28903,
											"end": 28909,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 28865,
											"end": 28931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 28865,
											"end": 28931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 28865,
											"end": 28931,
											"name": "tag",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 28865,
											"end": 28931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28978,
											"end": 28987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28972,
											"end": 28976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 28968,
											"end": 28988,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 28963,
											"end": 28965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 28952,
											"end": 28961,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28948,
											"end": 28966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28941,
											"end": 28989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29006,
											"end": 29137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 29132,
											"end": 29136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29006,
											"end": 29137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 29006,
											"end": 29137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29006,
											"end": 29137,
											"name": "tag",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 29006,
											"end": 29137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28998,
											"end": 29137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 28998,
											"end": 29137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28517,
											"end": 29144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 28517,
											"end": 29144,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 28517,
											"end": 29144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28517,
											"end": 29144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28517,
											"end": 29144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28517,
											"end": 29144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29150,
											"end": 29304,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 29150,
											"end": 29304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29290,
											"end": 29296,
											"name": "PUSH",
											"source": 8,
											"value": "6C6F737400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29286,
											"end": 29287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29278,
											"end": 29284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29274,
											"end": 29288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29267,
											"end": 29297,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29150,
											"end": 29304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29150,
											"end": 29304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29310,
											"end": 29675,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 29310,
											"end": 29675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29452,
											"end": 29455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29473,
											"end": 29539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 29537,
											"end": 29538,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 29532,
											"end": 29535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 29473,
											"end": 29539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 29473,
											"end": 29539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29473,
											"end": 29539,
											"name": "tag",
											"source": 8,
											"value": "695"
										},
										{
											"begin": 29473,
											"end": 29539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29466,
											"end": 29539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29466,
											"end": 29539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29548,
											"end": 29641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 29637,
											"end": 29640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29548,
											"end": 29641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 29548,
											"end": 29641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29548,
											"end": 29641,
											"name": "tag",
											"source": 8,
											"value": "696"
										},
										{
											"begin": 29548,
											"end": 29641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29666,
											"end": 29668,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29661,
											"end": 29664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29657,
											"end": 29669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29650,
											"end": 29669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29650,
											"end": 29669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29310,
											"end": 29675,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 29310,
											"end": 29675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29310,
											"end": 29675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29310,
											"end": 29675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29681,
											"end": 30308,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 29681,
											"end": 30308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29897,
											"end": 29901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29935,
											"end": 29937,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29920,
											"end": 29938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29912,
											"end": 29938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 29912,
											"end": 29938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29948,
											"end": 30019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 30016,
											"end": 30017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30005,
											"end": 30014,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30001,
											"end": 30018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29992,
											"end": 29998,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 29948,
											"end": 30019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 29948,
											"end": 30019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 29948,
											"end": 30019,
											"name": "tag",
											"source": 8,
											"value": "698"
										},
										{
											"begin": 29948,
											"end": 30019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30029,
											"end": 30095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 30091,
											"end": 30093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30080,
											"end": 30089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30076,
											"end": 30094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30067,
											"end": 30073,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 30029,
											"end": 30095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 30029,
											"end": 30095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30029,
											"end": 30095,
											"name": "tag",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 30029,
											"end": 30095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30142,
											"end": 30151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30136,
											"end": 30140,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30132,
											"end": 30152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 30127,
											"end": 30129,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 30116,
											"end": 30125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30112,
											"end": 30130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30105,
											"end": 30153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30170,
											"end": 30301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 30296,
											"end": 30300,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30170,
											"end": 30301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 30170,
											"end": 30301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30170,
											"end": 30301,
											"name": "tag",
											"source": 8,
											"value": "700"
										},
										{
											"begin": 30170,
											"end": 30301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30162,
											"end": 30301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30162,
											"end": 30301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29681,
											"end": 30308,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 29681,
											"end": 30308,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 29681,
											"end": 30308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29681,
											"end": 30308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29681,
											"end": 30308,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29681,
											"end": 30308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30314,
											"end": 30542,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 30314,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30454,
											"end": 30488,
											"name": "PUSH",
											"source": 8,
											"value": "596F7527766520616C726561647920636C61696D656420796F75722077656C63"
										},
										{
											"begin": 30450,
											"end": 30451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30442,
											"end": 30448,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30438,
											"end": 30452,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30431,
											"end": 30489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30523,
											"end": 30534,
											"name": "PUSH",
											"source": 8,
											"value": "6F6D6520626F6E75730000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30518,
											"end": 30520,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30510,
											"end": 30516,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30506,
											"end": 30521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30499,
											"end": 30535,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30314,
											"end": 30542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30314,
											"end": 30542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30548,
											"end": 30914,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 30548,
											"end": 30914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30690,
											"end": 30693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30711,
											"end": 30778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 30775,
											"end": 30777,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 30770,
											"end": 30773,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30711,
											"end": 30778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 30711,
											"end": 30778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30711,
											"end": 30778,
											"name": "tag",
											"source": 8,
											"value": "703"
										},
										{
											"begin": 30711,
											"end": 30778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30704,
											"end": 30778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30704,
											"end": 30778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30787,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 30876,
											"end": 30879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30787,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 30787,
											"end": 30880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30787,
											"end": 30880,
											"name": "tag",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 30787,
											"end": 30880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30905,
											"end": 30907,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 30900,
											"end": 30903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30896,
											"end": 30908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30889,
											"end": 30908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30889,
											"end": 30908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30548,
											"end": 30914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30548,
											"end": 30914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30548,
											"end": 30914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30548,
											"end": 30914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30920,
											"end": 31339,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 30920,
											"end": 31339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31086,
											"end": 31090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31126,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 31113,
											"end": 31122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31109,
											"end": 31127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31101,
											"end": 31127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31101,
											"end": 31127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31173,
											"end": 31182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31167,
											"end": 31171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31163,
											"end": 31183,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 31159,
											"end": 31160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31148,
											"end": 31157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31144,
											"end": 31161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31137,
											"end": 31184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 31201,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 31327,
											"end": 31331,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31201,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 31201,
											"end": 31332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31201,
											"end": 31332,
											"name": "tag",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 31201,
											"end": 31332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31193,
											"end": 31332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31193,
											"end": 31332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30920,
											"end": 31339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 30920,
											"end": 31339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30920,
											"end": 31339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30920,
											"end": 31339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31494,
											"end": 31498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31532,
											"end": 31534,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 31521,
											"end": 31530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31517,
											"end": 31535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31509,
											"end": 31535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31509,
											"end": 31535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31545,
											"end": 31616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 31613,
											"end": 31614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31602,
											"end": 31611,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31598,
											"end": 31615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31589,
											"end": 31595,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 31545,
											"end": 31616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 31545,
											"end": 31616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31545,
											"end": 31616,
											"name": "tag",
											"source": 8,
											"value": "708"
										},
										{
											"begin": 31545,
											"end": 31616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31626,
											"end": 31698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "709"
										},
										{
											"begin": 31694,
											"end": 31696,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 31683,
											"end": 31692,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31679,
											"end": 31697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31670,
											"end": 31676,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 31626,
											"end": 31698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 31626,
											"end": 31698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31626,
											"end": 31698,
											"name": "tag",
											"source": 8,
											"value": "709"
										},
										{
											"begin": 31626,
											"end": 31698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31708,
											"end": 31780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "710"
										},
										{
											"begin": 31776,
											"end": 31778,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 31765,
											"end": 31774,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31761,
											"end": 31779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31752,
											"end": 31758,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 31708,
											"end": 31780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 31708,
											"end": 31780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31708,
											"end": 31780,
											"name": "tag",
											"source": 8,
											"value": "710"
										},
										{
											"begin": 31708,
											"end": 31780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31345,
											"end": 31787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31793,
											"end": 31984,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 31793,
											"end": 31984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31833,
											"end": 31836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31852,
											"end": 31872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 31870,
											"end": 31871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31852,
											"end": 31872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 31852,
											"end": 31872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31852,
											"end": 31872,
											"name": "tag",
											"source": 8,
											"value": "712"
										},
										{
											"begin": 31852,
											"end": 31872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31847,
											"end": 31872,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 31847,
											"end": 31872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31886,
											"end": 31906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 31904,
											"end": 31905,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31886,
											"end": 31906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 31886,
											"end": 31906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31886,
											"end": 31906,
											"name": "tag",
											"source": 8,
											"value": "713"
										},
										{
											"begin": 31886,
											"end": 31906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31881,
											"end": 31906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 31881,
											"end": 31906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31929,
											"end": 31930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31926,
											"end": 31927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31922,
											"end": 31931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31915,
											"end": 31931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 31915,
											"end": 31931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31950,
											"end": 31953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31947,
											"end": 31948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 31944,
											"end": 31954,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 31941,
											"end": 31977,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 31941,
											"end": 31977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 31941,
											"end": 31977,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 31957,
											"end": 31975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "715"
										},
										{
											"begin": 31957,
											"end": 31975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 31957,
											"end": 31975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 31957,
											"end": 31975,
											"name": "tag",
											"source": 8,
											"value": "715"
										},
										{
											"begin": 31957,
											"end": 31975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31941,
											"end": 31977,
											"name": "tag",
											"source": 8,
											"value": "714"
										},
										{
											"begin": 31941,
											"end": 31977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31793,
											"end": 31984,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 31793,
											"end": 31984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 31793,
											"end": 31984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31793,
											"end": 31984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31793,
											"end": 31984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DegenToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addItem(string,uint256)": "62d6bbdf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnToken(uint256)": "7b47ec1a",
							"decimals()": "313ce567",
							"getBalance()": "12065fe0",
							"getUserItems(address)": "ce6019b4",
							"isLessThanFive(bool,uint256)": "ea5e65e0",
							"items(uint8)": "fbd1a97b",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"purchaseItem(uint8)": "af3bcb7d",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokenId()": "17d70f7c",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferToken(address,uint256)": "1072cbea",
							"welcomeBonus()": "f5112f87"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"won\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"GameOutcome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserItems\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct DegenToken.Item[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_prediction\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"isLessThanFive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"itemId\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_itemId\",\"type\":\"uint8\"}],\"name\":\"purchaseItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"welcomeBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DegenToken.sol\":\"DegenToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DegenToken.sol\":{\"keccak256\":\"0x366c250198af7e746fdef77be98fa58d77ed3694c57a929e3ea4a7f2fc56db62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57f74fd40eb0670c1e44fd06cb3f2944b63810ebe0e925d850b92b6f02f648c3\",\"dweb:/ipfs/QmRJ9zqHnyoLRDW6P7ebt6ojRFLv4wxumjsF2SMdCJ61Xi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1002,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "items",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint8,t_struct(Item)997_storage)"
							},
							{
								"astId": 1008,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "playerItems",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_struct(Item)997_storage)dyn_storage)"
							},
							{
								"astId": 1010,
								"contract": "contracts/DegenToken.sol:DegenToken",
								"label": "tokenId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Item)997_storage)dyn_storage": {
								"base": "t_struct(Item)997_storage",
								"encoding": "dynamic_array",
								"label": "struct DegenToken.Item[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(Item)997_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegenToken.Item[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Item)997_storage)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint8,t_struct(Item)997_storage)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => struct DegenToken.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)997_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Item)997_storage": {
								"encoding": "inplace",
								"label": "struct DegenToken.Item",
								"members": [
									{
										"astId": 992,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 994,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "itemId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 996,
										"contract": "contracts/DegenToken.sol:DegenToken",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/DegenToken.sol": {
				"ast": {
					"absolutePath": "contracts/DegenToken.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"DegenToken": [
							1362
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"Ownable": [
							147
						]
					},
					"id": 1363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "568:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1363,
							"sourceUnit": 800,
							"src": "596:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1363,
							"sourceUnit": 148,
							"src": "653:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1363,
							"sourceUnit": 924,
							"src": "707:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "ERC20",
										"nameLocations": [
											"808:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "808:5:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "808:5:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "Ownable",
										"nameLocations": [
											"815:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "815:7:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "815:7:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "ERC20Burnable",
										"nameLocations": [
											"824:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "824:13:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "824:13:7"
								}
							],
							"canonicalName": "DegenToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1362,
							"linearizedBaseContracts": [
								1362,
								923,
								147,
								799,
								189,
								949,
								877,
								979
							],
							"name": "DegenToken",
							"nameLocation": "794:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DegenToken.Item",
									"id": 997,
									"members": [
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "877:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "870:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 991,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "870:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "898:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "892:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 993,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "892:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "923:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 997,
											"src": "915:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "854:4:7",
									"nodeType": "StructDefinition",
									"scope": 1362,
									"src": "847:89:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbd1a97b",
									"id": 1002,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "971:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "942:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
										"typeString": "mapping(uint8 => struct DegenToken.Item)"
									},
									"typeName": {
										"id": 1001,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 998,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "951:5:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "942:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
											"typeString": "mapping(uint8 => struct DegenToken.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1000,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 999,
												"name": "Item",
												"nameLocations": [
													"958:4:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "958:4:7"
											},
											"referencedDeclaration": 997,
											"src": "958:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
												"typeString": "struct DegenToken.Item"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1008,
									"mutability": "mutable",
									"name": "playerItems",
									"nameLocation": "1009:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "983:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DegenToken.Item[])"
									},
									"typeName": {
										"id": 1007,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1003,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "992:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "983:25:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DegenToken.Item[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1005,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1004,
													"name": "Item",
													"nameLocations": [
														"1001:4:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 997,
													"src": "1001:4:7"
												},
												"referencedDeclaration": 997,
												"src": "1001:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
													"typeString": "struct DegenToken.Item"
												}
											},
											"id": 1006,
											"nodeType": "ArrayTypeName",
											"src": "1001:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr",
												"typeString": "struct DegenToken.Item[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "17d70f7c",
									"id": 1010,
									"mutability": "mutable",
									"name": "tokenId",
									"nameLocation": "1040:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1362,
									"src": "1027:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1009,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1027:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8bedd141782c49139782bd92bd7a760a0bcb544ffecfd2b25f00366fae06598e",
									"id": 1020,
									"name": "ItemPurchased",
									"nameLocation": "1066:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1096:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1080:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1109:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1103:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1013,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1103:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "1124:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1117:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1117:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1142:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1134:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:69:7"
									},
									"src": "1060:89:7"
								},
								{
									"anonymous": false,
									"eventSelector": "d04d9689d8e43bc0bacea67661ef472dcf321f34f08af72f651af30c4c866587",
									"id": 1030,
									"name": "GameOutcome",
									"nameLocation": "1161:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1189:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1173:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "1205:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1197:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "won",
												"nameLocation": "1215:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1210:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1210:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": false,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1227:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "1220:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1220:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:62:7"
									},
									"src": "1155:80:7"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "1340:340:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1356:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "1370:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "1351:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1351:31:7"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1049,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1403:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1051,
														"indexExpression": {
															"hexValue": "31",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1409:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1403:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "4e6f76696365204e6176696761746f72",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1419:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																	"typeString": "literal_string \"Novice Navigator\""
																},
																"value": "Novice Navigator"
															},
															{
																"hexValue": "31",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1438:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															{
																"hexValue": "313030",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1441:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_f93d0924b6e1f086750f1d72f63121b4bc1d38acfc288e215c263238a8a3728a",
																	"typeString": "literal_string \"Novice Navigator\""
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															],
															"id": 1052,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1414:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1414:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1403:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1403:42:7"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1059,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1456:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"hexValue": "32",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1462:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1456:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "4d7974686963204d6176657269636b",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1470:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																	"typeString": "literal_string \"Mythic Maverick\""
																},
																"value": "Mythic Maverick"
															},
															{
																"hexValue": "32",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1489:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"hexValue": "373030",
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1492:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_700_by_1",
																	"typeString": "int_const 700"
																},
																"value": "700"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_d8da57334a66c00806b841d692d6139ebc41480393e33e8be0d23418882bec42",
																	"typeString": "literal_string \"Mythic Maverick\""
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_rational_700_by_1",
																	"typeString": "int_const 700"
																}
															],
															"id": 1062,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1465:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1465:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1456:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1456:40:7"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1069,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1507:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1071,
														"indexExpression": {
															"hexValue": "33",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1513:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1507:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "43656c65737469616c2043727573686572",
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1521:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																	"typeString": "literal_string \"Celestial Crusher\""
																},
																"value": "Celestial Crusher"
															},
															{
																"hexValue": "33",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1542:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															{
																"hexValue": "31323030",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1545:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																},
																"value": "1200"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_b57257d4b4927c9d29138dda352a97afab9b1fe7c30bc1efffaba568b2ffa6f1",
																	"typeString": "literal_string \"Celestial Crusher\""
																},
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																{
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																}
															],
															"id": 1072,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1516:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1516:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1507:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1507:43:7"
											},
											{
												"expression": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1079,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1561:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1081,
														"indexExpression": {
															"hexValue": "34",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1567:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1561:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "41737472616c20416365",
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1575:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																	"typeString": "literal_string \"Astral Ace\""
																},
																"value": "Astral Ace"
															},
															{
																"hexValue": "34",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1589:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															{
																"hexValue": "32323030",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1592:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2200_by_1",
																	"typeString": "int_const 2200"
																},
																"value": "2200"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a5690cea7966b1bddf0971fab7696fc0b0211de341269b07a3f67ac03c93a16d",
																	"typeString": "literal_string \"Astral Ace\""
																},
																{
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																{
																	"typeIdentifier": "t_rational_2200_by_1",
																	"typeString": "int_const 2200"
																}
															],
															"id": 1082,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1570:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1570:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1561:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1561:36:7"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1089,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1608:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1091,
														"indexExpression": {
															"hexValue": "35",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1614:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1608:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "446976696e6520446f6d696e61746f72",
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1622:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																	"typeString": "literal_string \"Divine Dominator\""
																},
																"value": "Divine Dominator"
															},
															{
																"hexValue": "35",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1642:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															{
																"hexValue": "32343030",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1645:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2400_by_1",
																	"typeString": "int_const 2400"
																},
																"value": "2400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_fa2c900fc7c49268b4beba97e687238ae58ec6cc4f2e4aacc3154338d556113a",
																	"typeString": "literal_string \"Divine Dominator\""
																},
																{
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																{
																	"typeIdentifier": "t_rational_2400_by_1",
																	"typeString": "int_const 2400"
																}
															],
															"id": 1092,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1617:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1617:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "1608:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "1608:42:7"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "1661:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1661:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "1661:9:7"
											}
										]
									},
									"id": 1104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "446567656e",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1302:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_906c077abc9a71ae76538cee0d26636e7b6a00e3d54b28138c5ecbb7aec06c8d",
														"typeString": "literal_string \"Degen\""
													},
													"value": "Degen"
												},
												{
													"hexValue": "44474e",
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1311:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9f9ff197d13cbef1db00fe5f394520d062f532845bf34370b18f7b8fc04c88",
														"typeString": "literal_string \"DGN\""
													},
													"value": "DGN"
												}
											],
											"id": 1039,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1036,
												"name": "ERC20",
												"nameLocations": [
													"1296:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1296:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1296:21:7"
										},
										{
											"arguments": [
												{
													"id": 1041,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1032,
													"src": "1326:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1042,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1040,
												"name": "Ownable",
												"nameLocations": [
													"1318:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1318:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1318:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1264:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1256:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "tokenSupply",
												"nameLocation": "1283:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1278:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1278:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:40:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:0:7"
									},
									"scope": 1362,
									"src": "1243:437:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "1744:27:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1762:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1109,
												"id": 1111,
												"nodeType": "Return",
												"src": "1755:8:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1697:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1106,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1708:8:7"
									},
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1705:2:7"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1738:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1107,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1738:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:7:7"
									},
									"scope": 1362,
									"src": "1688:83:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "1863:36:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "1880:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "1884:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1122,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1874:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "1874:17:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1119,
												"name": "onlyOwner",
												"nameLocations": [
													"1853:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1853:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1853:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "1813:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1826:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1818:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1830:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1817:28:7"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1863:0:7"
									},
									"scope": 1362,
									"src": "1804:95:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "2003:122:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1137,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2032:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2036:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2032:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1136,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2022:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2022:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1140,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "2045:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2022:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2054:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2014:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2014:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2014:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "2097:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "2109:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2088:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2088:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2088:29:7"
											}
										]
									},
									"functionSelector": "1072cbea",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "1946:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "1968:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1960:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1985:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1980:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1980:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:34:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:7"
									},
									"scope": 1362,
									"src": "1937:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "2191:131:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1156,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2220:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2224:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2220:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1155,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2210:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2210:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2235:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2210:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527766520616c726561647920636c61696d656420796f75722077656c636f6d6520626f6e7573",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2238:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																"typeString": "literal_string \"You've already claimed your welcome bonus\""
															},
															"value": "You've already claimed your welcome bonus"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3741e9de064ac58fb58a02c720b827724d651eb5fba0b7d17ae716aede101c98",
																"typeString": "literal_string \"You've already claimed your welcome bonus\""
															}
														],
														"id": 1154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2202:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2202:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "2202:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2299:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2303:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2299:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3530",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															}
														],
														"id": 1164,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2293:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "2293:21:7"
											}
										]
									},
									"functionSelector": "f5112f87",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "welcomeBonus",
									"nameLocation": "2169:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:7"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2191:0:7"
									},
									"scope": 1362,
									"src": "2160:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "2401:83:7",
										"statements": [
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1180,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "2412:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
															}
														},
														"id": 1182,
														"indexExpression": {
															"id": 1181,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2418:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2412:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage",
															"typeString": "struct DegenToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1184,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "2434:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1185,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "2441:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 1186,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2449:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1183,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "2429:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$997_storage_ptr_$",
																"typeString": "type(struct DegenToken.Item storage pointer)"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2429:27:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_memory_ptr",
															"typeString": "struct DegenToken.Item memory"
														}
													},
													"src": "2412:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$997_storage",
														"typeString": "struct DegenToken.Item storage ref"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2412:44:7"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2467:9:7",
													"subExpression": {
														"id": 1190,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2467:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "2467:9:7"
											}
										]
									},
									"functionSelector": "62d6bbdf",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1177,
												"name": "onlyOwner",
												"nameLocations": [
													"2391:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2391:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2391:9:7"
										}
									],
									"name": "addItem",
									"nameLocation": "2339:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2361:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2347:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2347:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2376:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2368:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:37:7"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2401:0:7"
									},
									"scope": 1362,
									"src": "2330:154:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "2562:405:7",
										"statements": [
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "randomNumber",
														"nameLocation": "2578:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "2573:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1201,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2573:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1208,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2625:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2631:9:7",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2625:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1210,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2642:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2646:6:7",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2642:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1206,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "2608:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2612:12:7",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "2608:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2608:45:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1205,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2598:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2598:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2593:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1203,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2593:4:7",
																"typeDescriptions": {}
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2593:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2658:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "2593:67:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2573:87:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "_prediction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "2677:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1219,
																	"name": "randomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "2692:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2705:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "2692:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1222,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2691:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2677:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1253,
													"nodeType": "Block",
													"src": "2845:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1242,
																		"name": "_betAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "2865:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1241,
																	"name": "burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "2860:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2860:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1244,
															"nodeType": "ExpressionStatement",
															"src": "2860:16:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1246,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2908:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2912:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2908:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1248,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "2920:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2934:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "6c6f7374",
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2941:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																			"typeString": "literal_string \"lost\""
																		},
																		"value": "lost"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7abef35ab1297dc2c06a50ad2f3404570f9ba39fcba05205bc8956a736414888",
																			"typeString": "literal_string \"lost\""
																		}
																	],
																	"id": 1245,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2896:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2896:52:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1252,
															"nodeType": "EmitStatement",
															"src": "2891:57:7"
														}
													]
												},
												"id": 1254,
												"nodeType": "IfStatement",
												"src": "2673:287:7",
												"trueBody": {
													"id": 1240,
													"nodeType": "Block",
													"src": "2709:130:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1225,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2730:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2734:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2730:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1227,
																			"name": "_betAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1198,
																			"src": "2742:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2753:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "2742:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1224,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "2724:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2724:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "2724:31:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1233,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2787:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2787:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1235,
																		"name": "randomNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "2799:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2813:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "776f6e",
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2819:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																			"typeString": "literal_string \"won\""
																		},
																		"value": "won"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_53bb5c74792793cbefb413b905c2fe22cb613a2410d78136fb0789ee4a4af427",
																			"typeString": "literal_string \"won\""
																		}
																	],
																	"id": 1232,
																	"name": "GameOutcome",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2775:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bool,string memory)"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:50:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1239,
															"nodeType": "EmitStatement",
															"src": "2770:55:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ea5e65e0",
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLessThanFive",
									"nameLocation": "2502:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_prediction",
												"nameLocation": "2522:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2517:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2517:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_betAmount",
												"nameLocation": "2543:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2535:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2516:38:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2562:0:7"
									},
									"scope": 1362,
									"src": "2493:474:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "3025:349:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1262,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "3044:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1264,
																	"indexExpression": {
																		"id": 1263,
																		"name": "_itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "3050:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3044:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3059:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "3044:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3068:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3044:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206e6f7420666f756e64",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3071:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															},
															"value": "Item not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a0356bde62591929f9491dd119b7566f94f30103201aec52aac7c73ecf2662c",
																"typeString": "literal_string \"Item not found\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3036:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3036:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "3036:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1273,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3117:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3121:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3117:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1272,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3107:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3107:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1276,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "3132:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																			"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																		}
																	},
																	"id": 1278,
																	"indexExpression": {
																		"id": 1277,
																		"name": "_itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "3138:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3132:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$997_storage",
																		"typeString": "struct DegenToken.Item storage ref"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3147:5:7",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 996,
																"src": "3132:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3107:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3154:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3099:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3099:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "3099:78:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1285,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3195:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1287,
																"indexExpression": {
																	"id": 1286,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3201:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3195:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3210:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3195:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1284,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3190:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3190:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "3190:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1296,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "3256:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																	"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																}
															},
															"id": 1298,
															"indexExpression": {
																"id": 1297,
																"name": "_itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "3262:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3256:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$997_storage",
																"typeString": "struct DegenToken.Item storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Item_$997_storage",
																"typeString": "struct DegenToken.Item storage ref"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1291,
																"name": "playerItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3227:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DegenToken.Item storage ref[] storage ref)"
																}
															},
															"id": 1294,
															"indexExpression": {
																"expression": {
																	"id": 1292,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3239:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3243:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3239:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3227:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage",
																"typeString": "struct DegenToken.Item storage ref[] storage ref"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3251:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3227:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr_$_t_struct$_Item_$997_storage_$returns$__$attached_to$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.Item storage ref[] storage pointer,struct DegenToken.Item storage ref)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "3227:44:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3303:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3307:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3303:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "_itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "3315:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1305,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3324:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1307,
																"indexExpression": {
																	"id": 1306,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3330:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3324:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3339:4:7",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 992,
															"src": "3324:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1309,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "3345:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Item_$997_storage_$",
																		"typeString": "mapping(uint8 => struct DegenToken.Item storage ref)"
																	}
																},
																"id": 1311,
																"indexExpression": {
																	"id": 1310,
																	"name": "_itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "3351:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3345:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$997_storage",
																	"typeString": "struct DegenToken.Item storage ref"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3360:5:7",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 996,
															"src": "3345:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "ItemPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3289:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,string memory,uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3289:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "EmitStatement",
												"src": "3284:82:7"
											}
										]
									},
									"functionSelector": "af3bcb7d",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseItem",
									"nameLocation": "2988:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_itemId",
												"nameLocation": "3007:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "3001:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3001:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:7"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3025:0:7"
									},
									"scope": 1362,
									"src": "2979:395:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "3454:43:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1325,
														"name": "playerItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3472:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Item_$997_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DegenToken.Item storage ref[] storage ref)"
														}
													},
													"id": 1327,
													"indexExpression": {
														"id": 1326,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "3484:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3472:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage",
														"typeString": "struct DegenToken.Item storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1328,
												"nodeType": "Return",
												"src": "3465:24:7"
											}
										]
									},
									"functionSelector": "ce6019b4",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserItems",
									"nameLocation": "3391:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3412:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3404:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3403:14:7"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "3440:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Item_$997_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DegenToken.Item[]"
												},
												"typeName": {
													"baseType": {
														"id": 1321,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1320,
															"name": "Item",
															"nameLocations": [
																"3440:4:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 997,
															"src": "3440:4:7"
														},
														"referencedDeclaration": 997,
														"src": "3440:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$997_storage_ptr",
															"typeString": "struct DegenToken.Item"
														}
													},
													"id": 1322,
													"nodeType": "ArrayTypeName",
													"src": "3440:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Item_$997_storage_$dyn_storage_ptr",
														"typeString": "struct DegenToken.Item[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:15:7"
									},
									"scope": 1362,
									"src": "3382:115:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "3590:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1336,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3618:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3622:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3618:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1335,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3608:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3608:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1339,
												"nodeType": "Return",
												"src": "3601:28:7"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "3547:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3557:2:7"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "3582:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:9:7"
									},
									"scope": 1362,
									"src": "3538:99:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "3712:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1348,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3741:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3745:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3741:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1347,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "3731:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3731:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1351,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "3754:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3731:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616d6f756e74",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3763:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																"typeString": "literal_string \"Insufficient amount\""
															},
															"value": "Insufficient amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf58beaf08663d37df7e1961d65d3eff91b12706dfa2eef26f7dde8f1653c496",
																"typeString": "literal_string \"Insufficient amount\""
															}
														],
														"id": 1346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3723:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3723:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "3723:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1357,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "3801:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1356,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3796:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3796:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "3796:13:7"
											}
										]
									},
									"functionSelector": "7b47ec1a",
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnToken",
									"nameLocation": "3679:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3694:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "3689:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3689:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:14:7"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3712:0:7"
									},
									"scope": 1362,
									"src": "3670:147:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1363,
							"src": "785:3037:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1020,
								1030
							]
						}
					],
					"src": "568:3254:7"
				},
				"id": 7
			}
		}
	}
}